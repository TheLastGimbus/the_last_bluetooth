// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_cast
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name

import "dart:isolate" show ReceivePort;
import "dart:ffi" as ffi;
import "package:jni/internal_helpers_for_jnigen.dart";
import "package:jni/jni.dart" as jni;

// Auto-generated initialization code.

final ffi.Pointer<T> Function<T extends ffi.NativeType>(String sym) jniLookup =
    ProtectedJniExtensions.initGeneratedLibrary("the_last_bluetooth");

/// from: android.bluetooth.BluetoothAdapter$LeScanCallback
class BluetoothAdapter_LeScanCallback extends jni.JObject {
  @override
  late final jni.JObjType<BluetoothAdapter_LeScanCallback> $type = type;

  BluetoothAdapter_LeScanCallback.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BluetoothAdapter_LeScanCallbackType();
  static final _onLeScan = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter_LeScanCallback__onLeScan")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onLeScan(android.bluetooth.BluetoothDevice bluetoothDevice, int i, byte[] bs)
  void onLeScan(
    BluetoothDevice bluetoothDevice,
    int i,
    jni.JArray<jni.jbyte> bs,
  ) {
    return _onLeScan(reference, bluetoothDevice.reference, i, bs.reference)
        .check();
  }

  /// Maps a specific port to the implemented interface.
  static final Map<int, $BluetoothAdapter_LeScanCallbackImpl> _$impls = {};
  ReceivePort? _$p;

  static jni.JObjectPtr _$invoke(
    int port,
    jni.JObjectPtr descriptor,
    jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      $MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final ffi.Pointer<
          ffi.NativeFunction<
              jni.JObjectPtr Function(
                  ffi.Uint64, jni.JObjectPtr, jni.JObjectPtr)>>
      _$invokePointer = ffi.Pointer.fromFunction(_$invoke);

  static ffi.Pointer<ffi.Void> _$invokeMethod(
    int $p,
    $MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
      if ($d == r"onLeScan(Landroid/bluetooth/BluetoothDevice;I[B)V") {
        _$impls[$p]!.onLeScan(
          $a[0].castTo(const $BluetoothDeviceType(), releaseOriginal: true),
          $a[1]
              .castTo(const jni.JIntegerType(), releaseOriginal: true)
              .intValue(releaseOriginal: true),
          $a[2].castTo(const jni.JArrayType(jni.jbyteType()),
              releaseOriginal: true),
        );
        return jni.nullptr;
      }
    } catch (e) {
      return ProtectedJniExtensions.newDartException(e.toString());
    }
    return jni.nullptr;
  }

  factory BluetoothAdapter_LeScanCallback.implement(
    $BluetoothAdapter_LeScanCallbackImpl $impl,
  ) {
    final $p = ReceivePort();
    final $x = BluetoothAdapter_LeScanCallback.fromRef(
      ProtectedJniExtensions.newPortProxy(
        r"android.bluetooth.BluetoothAdapter$LeScanCallback",
        $p,
        _$invokePointer,
      ),
    ).._$p = $p;
    final $a = $p.sendPort.nativePort;
    _$impls[$a] = $impl;
    $p.listen(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = $MethodInvocation.fromMessage($m as List<dynamic>);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      ProtectedJniExtensions.returnResult($i.result, $r);
    });
    return $x;
  }
}

abstract class $BluetoothAdapter_LeScanCallbackImpl {
  factory $BluetoothAdapter_LeScanCallbackImpl({
    required void Function(
            BluetoothDevice bluetoothDevice, int i, jni.JArray<jni.jbyte> bs)
        onLeScan,
  }) = _$BluetoothAdapter_LeScanCallbackImpl;

  void onLeScan(
      BluetoothDevice bluetoothDevice, int i, jni.JArray<jni.jbyte> bs);
}

class _$BluetoothAdapter_LeScanCallbackImpl
    implements $BluetoothAdapter_LeScanCallbackImpl {
  _$BluetoothAdapter_LeScanCallbackImpl({
    required void Function(
            BluetoothDevice bluetoothDevice, int i, jni.JArray<jni.jbyte> bs)
        onLeScan,
  }) : _onLeScan = onLeScan;

  final void Function(
          BluetoothDevice bluetoothDevice, int i, jni.JArray<jni.jbyte> bs)
      _onLeScan;

  void onLeScan(
      BluetoothDevice bluetoothDevice, int i, jni.JArray<jni.jbyte> bs) {
    return _onLeScan(bluetoothDevice, i, bs);
  }
}

final class $BluetoothAdapter_LeScanCallbackType
    extends jni.JObjType<BluetoothAdapter_LeScanCallback> {
  const $BluetoothAdapter_LeScanCallbackType();

  @override
  String get signature =>
      r"Landroid/bluetooth/BluetoothAdapter$LeScanCallback;";

  @override
  BluetoothAdapter_LeScanCallback fromRef(jni.JObjectPtr ref) =>
      BluetoothAdapter_LeScanCallback.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BluetoothAdapter_LeScanCallbackType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BluetoothAdapter_LeScanCallbackType) &&
        other is $BluetoothAdapter_LeScanCallbackType;
  }
}

/// from: android.bluetooth.BluetoothAdapter
class BluetoothAdapter extends jni.JObject {
  @override
  late final jni.JObjType<BluetoothAdapter> $type = type;

  BluetoothAdapter.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BluetoothAdapterType();

  /// from: static public final java.lang.String ACTION_CONNECTION_STATE_CHANGED
  static const ACTION_CONNECTION_STATE_CHANGED =
      r"""android.bluetooth.adapter.action.CONNECTION_STATE_CHANGED""";

  /// from: static public final java.lang.String ACTION_DISCOVERY_FINISHED
  static const ACTION_DISCOVERY_FINISHED =
      r"""android.bluetooth.adapter.action.DISCOVERY_FINISHED""";

  /// from: static public final java.lang.String ACTION_DISCOVERY_STARTED
  static const ACTION_DISCOVERY_STARTED =
      r"""android.bluetooth.adapter.action.DISCOVERY_STARTED""";

  /// from: static public final java.lang.String ACTION_LOCAL_NAME_CHANGED
  static const ACTION_LOCAL_NAME_CHANGED =
      r"""android.bluetooth.adapter.action.LOCAL_NAME_CHANGED""";

  /// from: static public final java.lang.String ACTION_REQUEST_DISCOVERABLE
  static const ACTION_REQUEST_DISCOVERABLE =
      r"""android.bluetooth.adapter.action.REQUEST_DISCOVERABLE""";

  /// from: static public final java.lang.String ACTION_REQUEST_ENABLE
  static const ACTION_REQUEST_ENABLE =
      r"""android.bluetooth.adapter.action.REQUEST_ENABLE""";

  /// from: static public final java.lang.String ACTION_SCAN_MODE_CHANGED
  static const ACTION_SCAN_MODE_CHANGED =
      r"""android.bluetooth.adapter.action.SCAN_MODE_CHANGED""";

  /// from: static public final java.lang.String ACTION_STATE_CHANGED
  static const ACTION_STATE_CHANGED =
      r"""android.bluetooth.adapter.action.STATE_CHANGED""";

  /// from: static public final int ERROR
  static const ERROR = -2147483648;

  /// from: static public final java.lang.String EXTRA_CONNECTION_STATE
  static const EXTRA_CONNECTION_STATE =
      r"""android.bluetooth.adapter.extra.CONNECTION_STATE""";

  /// from: static public final java.lang.String EXTRA_DISCOVERABLE_DURATION
  static const EXTRA_DISCOVERABLE_DURATION =
      r"""android.bluetooth.adapter.extra.DISCOVERABLE_DURATION""";

  /// from: static public final java.lang.String EXTRA_LOCAL_NAME
  static const EXTRA_LOCAL_NAME =
      r"""android.bluetooth.adapter.extra.LOCAL_NAME""";

  /// from: static public final java.lang.String EXTRA_PREVIOUS_CONNECTION_STATE
  static const EXTRA_PREVIOUS_CONNECTION_STATE =
      r"""android.bluetooth.adapter.extra.PREVIOUS_CONNECTION_STATE""";

  /// from: static public final java.lang.String EXTRA_PREVIOUS_SCAN_MODE
  static const EXTRA_PREVIOUS_SCAN_MODE =
      r"""android.bluetooth.adapter.extra.PREVIOUS_SCAN_MODE""";

  /// from: static public final java.lang.String EXTRA_PREVIOUS_STATE
  static const EXTRA_PREVIOUS_STATE =
      r"""android.bluetooth.adapter.extra.PREVIOUS_STATE""";

  /// from: static public final java.lang.String EXTRA_SCAN_MODE
  static const EXTRA_SCAN_MODE =
      r"""android.bluetooth.adapter.extra.SCAN_MODE""";

  /// from: static public final java.lang.String EXTRA_STATE
  static const EXTRA_STATE = r"""android.bluetooth.adapter.extra.STATE""";

  /// from: static public final int SCAN_MODE_CONNECTABLE
  static const SCAN_MODE_CONNECTABLE = 21;

  /// from: static public final int SCAN_MODE_CONNECTABLE_DISCOVERABLE
  static const SCAN_MODE_CONNECTABLE_DISCOVERABLE = 23;

  /// from: static public final int SCAN_MODE_NONE
  static const SCAN_MODE_NONE = 20;

  /// from: static public final int STATE_CONNECTED
  static const STATE_CONNECTED = 2;

  /// from: static public final int STATE_CONNECTING
  static const STATE_CONNECTING = 1;

  /// from: static public final int STATE_DISCONNECTED
  static const STATE_DISCONNECTED = 0;

  /// from: static public final int STATE_DISCONNECTING
  static const STATE_DISCONNECTING = 3;

  /// from: static public final int STATE_OFF
  static const STATE_OFF = 10;

  /// from: static public final int STATE_ON
  static const STATE_ON = 12;

  /// from: static public final int STATE_TURNING_OFF
  static const STATE_TURNING_OFF = 13;

  /// from: static public final int STATE_TURNING_ON
  static const STATE_TURNING_ON = 11;

  static final _getDefaultAdapter =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
              "BluetoothAdapter__getDefaultAdapter")
          .asFunction<jni.JniResult Function()>();

  /// from: static public android.bluetooth.BluetoothAdapter getDefaultAdapter()
  /// The returned object must be released after use, by calling the [release] method.
  static BluetoothAdapter getDefaultAdapter() {
    return const $BluetoothAdapterType().fromRef(_getDefaultAdapter().object);
  }

  static final _getRemoteDevice = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothAdapter__getRemoteDevice")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  BluetoothDevice getRemoteDevice(
    jni.JString string,
  ) {
    return const $BluetoothDeviceType()
        .fromRef(_getRemoteDevice(reference, string.reference).object);
  }

  static final _getRemoteLeDevice = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BluetoothAdapter__getRemoteLeDevice")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.bluetooth.BluetoothDevice getRemoteLeDevice(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  BluetoothDevice getRemoteLeDevice(
    jni.JString string,
    int i,
  ) {
    return const $BluetoothDeviceType()
        .fromRef(_getRemoteLeDevice(reference, string.reference, i).object);
  }

  static final _getRemoteDevice1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothAdapter__getRemoteDevice1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothDevice getRemoteDevice(byte[] bs)
  /// The returned object must be released after use, by calling the [release] method.
  BluetoothDevice getRemoteDevice1(
    jni.JArray<jni.jbyte> bs,
  ) {
    return const $BluetoothDeviceType()
        .fromRef(_getRemoteDevice1(reference, bs.reference).object);
  }

  static final _getBluetoothLeAdvertiser = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getBluetoothLeAdvertiser")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getBluetoothLeAdvertiser() {
    return const jni.JObjectType()
        .fromRef(_getBluetoothLeAdvertiser(reference).object);
  }

  static final _getBluetoothLeScanner = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getBluetoothLeScanner")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getBluetoothLeScanner() {
    return const jni.JObjectType()
        .fromRef(_getBluetoothLeScanner(reference).object);
  }

  static final _isEnabled = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isEnabled")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isEnabled()
  bool isEnabled() {
    return _isEnabled(reference).boolean;
  }

  static final _getState = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getState")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getState()
  int getState() {
    return _getState(reference).integer;
  }

  static final _enable = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__enable")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean enable()
  bool enable() {
    return _enable(reference).boolean;
  }

  static final _disable = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__disable")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean disable()
  bool disable() {
    return _disable(reference).boolean;
  }

  static final _getAddress = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getAddress")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getAddress()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getAddress() {
    return const jni.JStringType().fromRef(_getAddress(reference).object);
  }

  static final _getName = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getName")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getName()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getName() {
    return const jni.JStringType().fromRef(_getName(reference).object);
  }

  static final _setName = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothAdapter__setName")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean setName(java.lang.String string)
  bool setName(
    jni.JString string,
  ) {
    return _setName(reference, string.reference).boolean;
  }

  static final _getScanMode = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getScanMode")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getScanMode()
  int getScanMode() {
    return _getScanMode(reference).integer;
  }

  static final _getDiscoverableTimeout = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getDiscoverableTimeout")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.time.Duration getDiscoverableTimeout()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDiscoverableTimeout() {
    return const jni.JObjectType()
        .fromRef(_getDiscoverableTimeout(reference).object);
  }

  static final _startDiscovery = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__startDiscovery")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean startDiscovery()
  bool startDiscovery() {
    return _startDiscovery(reference).boolean;
  }

  static final _cancelDiscovery = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__cancelDiscovery")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean cancelDiscovery()
  bool cancelDiscovery() {
    return _cancelDiscovery(reference).boolean;
  }

  static final _isDiscovering = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isDiscovering")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isDiscovering()
  bool isDiscovering() {
    return _isDiscovering(reference).boolean;
  }

  static final _isMultipleAdvertisementSupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isMultipleAdvertisementSupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isMultipleAdvertisementSupported()
  bool isMultipleAdvertisementSupported() {
    return _isMultipleAdvertisementSupported(reference).boolean;
  }

  static final _isOffloadedFilteringSupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isOffloadedFilteringSupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isOffloadedFilteringSupported()
  bool isOffloadedFilteringSupported() {
    return _isOffloadedFilteringSupported(reference).boolean;
  }

  static final _isOffloadedScanBatchingSupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isOffloadedScanBatchingSupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isOffloadedScanBatchingSupported()
  bool isOffloadedScanBatchingSupported() {
    return _isOffloadedScanBatchingSupported(reference).boolean;
  }

  static final _isLe2MPhySupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isLe2MPhySupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isLe2MPhySupported()
  bool isLe2MPhySupported() {
    return _isLe2MPhySupported(reference).boolean;
  }

  static final _isLeCodedPhySupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isLeCodedPhySupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isLeCodedPhySupported()
  bool isLeCodedPhySupported() {
    return _isLeCodedPhySupported(reference).boolean;
  }

  static final _isLeExtendedAdvertisingSupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isLeExtendedAdvertisingSupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isLeExtendedAdvertisingSupported()
  bool isLeExtendedAdvertisingSupported() {
    return _isLeExtendedAdvertisingSupported(reference).boolean;
  }

  static final _isLePeriodicAdvertisingSupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isLePeriodicAdvertisingSupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isLePeriodicAdvertisingSupported()
  bool isLePeriodicAdvertisingSupported() {
    return _isLePeriodicAdvertisingSupported(reference).boolean;
  }

  static final _isLeAudioSupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isLeAudioSupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int isLeAudioSupported()
  int isLeAudioSupported() {
    return _isLeAudioSupported(reference).integer;
  }

  static final _isLeAudioBroadcastSourceSupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isLeAudioBroadcastSourceSupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int isLeAudioBroadcastSourceSupported()
  int isLeAudioBroadcastSourceSupported() {
    return _isLeAudioBroadcastSourceSupported(reference).integer;
  }

  static final _isLeAudioBroadcastAssistantSupported = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__isLeAudioBroadcastAssistantSupported")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int isLeAudioBroadcastAssistantSupported()
  int isLeAudioBroadcastAssistantSupported() {
    return _isLeAudioBroadcastAssistantSupported(reference).integer;
  }

  static final _getLeMaximumAdvertisingDataLength = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getLeMaximumAdvertisingDataLength")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLeMaximumAdvertisingDataLength()
  int getLeMaximumAdvertisingDataLength() {
    return _getLeMaximumAdvertisingDataLength(reference).integer;
  }

  static final _getMaxConnectedAudioDevices = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getMaxConnectedAudioDevices")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMaxConnectedAudioDevices()
  int getMaxConnectedAudioDevices() {
    return _getMaxConnectedAudioDevices(reference).integer;
  }

  static final _getBondedDevices = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__getBondedDevices")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Set getBondedDevices()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JSet<BluetoothDevice> getBondedDevices() {
    return const jni.JSetType($BluetoothDeviceType())
        .fromRef(_getBondedDevices(reference).object);
  }

  static final _getProfileConnectionState = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BluetoothAdapter__getProfileConnectionState")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public int getProfileConnectionState(int i)
  int getProfileConnectionState(
    int i,
  ) {
    return _getProfileConnectionState(reference, i).integer;
  }

  static final _listenUsingRfcommWithServiceRecord = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__listenUsingRfcommWithServiceRecord")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String string, java.util.UUID uUID)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject listenUsingRfcommWithServiceRecord(
    jni.JString string,
    jni.JObject uUID,
  ) {
    return const jni.JObjectType().fromRef(_listenUsingRfcommWithServiceRecord(
            reference, string.reference, uUID.reference)
        .object);
  }

  static final _listenUsingInsecureRfcommWithServiceRecord = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__listenUsingInsecureRfcommWithServiceRecord")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String string, java.util.UUID uUID)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject listenUsingInsecureRfcommWithServiceRecord(
    jni.JString string,
    jni.JObject uUID,
  ) {
    return const jni.JObjectType().fromRef(
        _listenUsingInsecureRfcommWithServiceRecord(
                reference, string.reference, uUID.reference)
            .object);
  }

  static final _getProfileProxy = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BluetoothAdapter__getProfileProxy")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean getProfileProxy(android.content.Context context, android.bluetooth.BluetoothProfile$ServiceListener serviceListener, int i)
  bool getProfileProxy(
    Context context,
    jni.JObject serviceListener,
    int i,
  ) {
    return _getProfileProxy(
            reference, context.reference, serviceListener.reference, i)
        .boolean;
  }

  static final _closeProfileProxy = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__closeProfileProxy")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void closeProfileProxy(int i, android.bluetooth.BluetoothProfile bluetoothProfile)
  void closeProfileProxy(
    int i,
    jni.JObject bluetoothProfile,
  ) {
    return _closeProfileProxy(reference, i, bluetoothProfile.reference).check();
  }

  static final _finalize = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__finalize")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void finalize()
  void finalize() {
    return _finalize(reference).check();
  }

  static final _checkBluetoothAddress = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__checkBluetoothAddress")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public boolean checkBluetoothAddress(java.lang.String string)
  static bool checkBluetoothAddress(
    jni.JString string,
  ) {
    return _checkBluetoothAddress(string.reference).boolean;
  }

  static final _startLeScan = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothAdapter__startLeScan")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean startLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback leScanCallback)
  bool startLeScan(
    BluetoothAdapter_LeScanCallback leScanCallback,
  ) {
    return _startLeScan(reference, leScanCallback.reference).boolean;
  }

  static final _startLeScan1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothAdapter__startLeScan1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean startLeScan(java.util.UUID[] uUIDs, android.bluetooth.BluetoothAdapter$LeScanCallback leScanCallback)
  bool startLeScan1(
    jni.JArray<jni.JObject> uUIDs,
    BluetoothAdapter_LeScanCallback leScanCallback,
  ) {
    return _startLeScan1(reference, uUIDs.reference, leScanCallback.reference)
        .boolean;
  }

  static final _stopLeScan = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothAdapter__stopLeScan")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void stopLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback leScanCallback)
  void stopLeScan(
    BluetoothAdapter_LeScanCallback leScanCallback,
  ) {
    return _stopLeScan(reference, leScanCallback.reference).check();
  }

  static final _listenUsingL2capChannel = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__listenUsingL2capChannel")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothServerSocket listenUsingL2capChannel()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject listenUsingL2capChannel() {
    return const jni.JObjectType()
        .fromRef(_listenUsingL2capChannel(reference).object);
  }

  static final _listenUsingInsecureL2capChannel = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothAdapter__listenUsingInsecureL2capChannel")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothServerSocket listenUsingInsecureL2capChannel()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject listenUsingInsecureL2capChannel() {
    return const jni.JObjectType()
        .fromRef(_listenUsingInsecureL2capChannel(reference).object);
  }
}

final class $BluetoothAdapterType extends jni.JObjType<BluetoothAdapter> {
  const $BluetoothAdapterType();

  @override
  String get signature => r"Landroid/bluetooth/BluetoothAdapter;";

  @override
  BluetoothAdapter fromRef(jni.JObjectPtr ref) => BluetoothAdapter.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BluetoothAdapterType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BluetoothAdapterType) &&
        other is $BluetoothAdapterType;
  }
}

/// from: android.bluetooth.BluetoothDevice
class BluetoothDevice extends jni.JObject {
  @override
  late final jni.JObjType<BluetoothDevice> $type = type;

  BluetoothDevice.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BluetoothDeviceType();

  /// from: static public final java.lang.String ACTION_ACL_CONNECTED
  static const ACTION_ACL_CONNECTED =
      r"""android.bluetooth.device.action.ACL_CONNECTED""";

  /// from: static public final java.lang.String ACTION_ACL_DISCONNECTED
  static const ACTION_ACL_DISCONNECTED =
      r"""android.bluetooth.device.action.ACL_DISCONNECTED""";

  /// from: static public final java.lang.String ACTION_ACL_DISCONNECT_REQUESTED
  static const ACTION_ACL_DISCONNECT_REQUESTED =
      r"""android.bluetooth.device.action.ACL_DISCONNECT_REQUESTED""";

  /// from: static public final java.lang.String ACTION_ALIAS_CHANGED
  static const ACTION_ALIAS_CHANGED =
      r"""android.bluetooth.device.action.ALIAS_CHANGED""";

  /// from: static public final java.lang.String ACTION_BOND_STATE_CHANGED
  static const ACTION_BOND_STATE_CHANGED =
      r"""android.bluetooth.device.action.BOND_STATE_CHANGED""";

  /// from: static public final java.lang.String ACTION_CLASS_CHANGED
  static const ACTION_CLASS_CHANGED =
      r"""android.bluetooth.device.action.CLASS_CHANGED""";

  /// from: static public final java.lang.String ACTION_FOUND
  static const ACTION_FOUND = r"""android.bluetooth.device.action.FOUND""";

  /// from: static public final java.lang.String ACTION_NAME_CHANGED
  static const ACTION_NAME_CHANGED =
      r"""android.bluetooth.device.action.NAME_CHANGED""";

  /// from: static public final java.lang.String ACTION_PAIRING_REQUEST
  static const ACTION_PAIRING_REQUEST =
      r"""android.bluetooth.device.action.PAIRING_REQUEST""";

  /// from: static public final java.lang.String ACTION_UUID
  static const ACTION_UUID = r"""android.bluetooth.device.action.UUID""";

  /// from: static public final int ADDRESS_TYPE_PUBLIC
  static const ADDRESS_TYPE_PUBLIC = 0;

  /// from: static public final int ADDRESS_TYPE_RANDOM
  static const ADDRESS_TYPE_RANDOM = 1;

  /// from: static public final int ADDRESS_TYPE_UNKNOWN
  static const ADDRESS_TYPE_UNKNOWN = 65535;

  /// from: static public final int BOND_BONDED
  static const BOND_BONDED = 12;

  /// from: static public final int BOND_BONDING
  static const BOND_BONDING = 11;

  /// from: static public final int BOND_NONE
  static const BOND_NONE = 10;

  static final _get_CREATOR =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
              "get_BluetoothDevice__CREATOR")
          .asFunction<jni.JniResult Function()>();

  /// from: static public final android.os.Parcelable$Creator CREATOR
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JObject get CREATOR =>
      const jni.JObjectType().fromRef(_get_CREATOR().object);

  /// from: static public final int DEVICE_TYPE_CLASSIC
  static const DEVICE_TYPE_CLASSIC = 1;

  /// from: static public final int DEVICE_TYPE_DUAL
  static const DEVICE_TYPE_DUAL = 3;

  /// from: static public final int DEVICE_TYPE_LE
  static const DEVICE_TYPE_LE = 2;

  /// from: static public final int DEVICE_TYPE_UNKNOWN
  static const DEVICE_TYPE_UNKNOWN = 0;

  /// from: static public final int ERROR
  static const ERROR = -2147483648;

  /// from: static public final java.lang.String EXTRA_BOND_STATE
  static const EXTRA_BOND_STATE =
      r"""android.bluetooth.device.extra.BOND_STATE""";

  /// from: static public final java.lang.String EXTRA_CLASS
  static const EXTRA_CLASS = r"""android.bluetooth.device.extra.CLASS""";

  /// from: static public final java.lang.String EXTRA_DEVICE
  static const EXTRA_DEVICE = r"""android.bluetooth.device.extra.DEVICE""";

  /// from: static public final java.lang.String EXTRA_IS_COORDINATED_SET_MEMBER
  static const EXTRA_IS_COORDINATED_SET_MEMBER =
      r"""android.bluetooth.extra.IS_COORDINATED_SET_MEMBER""";

  /// from: static public final java.lang.String EXTRA_NAME
  static const EXTRA_NAME = r"""android.bluetooth.device.extra.NAME""";

  /// from: static public final java.lang.String EXTRA_PAIRING_KEY
  static const EXTRA_PAIRING_KEY =
      r"""android.bluetooth.device.extra.PAIRING_KEY""";

  /// from: static public final java.lang.String EXTRA_PAIRING_VARIANT
  static const EXTRA_PAIRING_VARIANT =
      r"""android.bluetooth.device.extra.PAIRING_VARIANT""";

  /// from: static public final java.lang.String EXTRA_PREVIOUS_BOND_STATE
  static const EXTRA_PREVIOUS_BOND_STATE =
      r"""android.bluetooth.device.extra.PREVIOUS_BOND_STATE""";

  /// from: static public final java.lang.String EXTRA_RSSI
  static const EXTRA_RSSI = r"""android.bluetooth.device.extra.RSSI""";

  /// from: static public final java.lang.String EXTRA_TRANSPORT
  static const EXTRA_TRANSPORT =
      r"""android.bluetooth.device.extra.TRANSPORT""";

  /// from: static public final java.lang.String EXTRA_UUID
  static const EXTRA_UUID = r"""android.bluetooth.device.extra.UUID""";

  /// from: static public final int PAIRING_VARIANT_PASSKEY_CONFIRMATION
  static const PAIRING_VARIANT_PASSKEY_CONFIRMATION = 2;

  /// from: static public final int PAIRING_VARIANT_PIN
  static const PAIRING_VARIANT_PIN = 0;

  /// from: static public final int PHY_LE_1M
  static const PHY_LE_1M = 1;

  /// from: static public final int PHY_LE_1M_MASK
  static const PHY_LE_1M_MASK = 1;

  /// from: static public final int PHY_LE_2M
  static const PHY_LE_2M = 2;

  /// from: static public final int PHY_LE_2M_MASK
  static const PHY_LE_2M_MASK = 2;

  /// from: static public final int PHY_LE_CODED
  static const PHY_LE_CODED = 3;

  /// from: static public final int PHY_LE_CODED_MASK
  static const PHY_LE_CODED_MASK = 4;

  /// from: static public final int PHY_OPTION_NO_PREFERRED
  static const PHY_OPTION_NO_PREFERRED = 0;

  /// from: static public final int PHY_OPTION_S2
  static const PHY_OPTION_S2 = 1;

  /// from: static public final int PHY_OPTION_S8
  static const PHY_OPTION_S8 = 2;

  /// from: static public final int TRANSPORT_AUTO
  static const TRANSPORT_AUTO = 0;

  /// from: static public final int TRANSPORT_BREDR
  static const TRANSPORT_BREDR = 1;

  /// from: static public final int TRANSPORT_LE
  static const TRANSPORT_LE = 2;

  static final _equals1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothDevice__equals1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object object)
  bool equals1(
    jni.JObject object,
  ) {
    return _equals1(reference, object.reference).boolean;
  }

  static final _hashCode1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__hashCode1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode1() {
    return _hashCode1(reference).integer;
  }

  static final _toString1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__toString1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toString1() {
    return const jni.JStringType().fromRef(_toString1(reference).object);
  }

  static final _describeContents = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__describeContents")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() {
    return _describeContents(reference).integer;
  }

  static final _writeToParcel = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BluetoothDevice__writeToParcel")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int i)
  void writeToParcel(
    jni.JObject parcel,
    int i,
  ) {
    return _writeToParcel(reference, parcel.reference, i).check();
  }

  static final _getAddress = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__getAddress")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getAddress()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getAddress() {
    return const jni.JStringType().fromRef(_getAddress(reference).object);
  }

  static final _getName = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__getName")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getName()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getName() {
    return const jni.JStringType().fromRef(_getName(reference).object);
  }

  static final _getType = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__getType")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getType()
  int getType() {
    return _getType(reference).integer;
  }

  static final _getAlias = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__getAlias")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getAlias()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getAlias() {
    return const jni.JStringType().fromRef(_getAlias(reference).object);
  }

  static final _setAlias = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothDevice__setAlias")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int setAlias(java.lang.String string)
  int setAlias(
    jni.JString string,
  ) {
    return _setAlias(reference, string.reference).integer;
  }

  static final _createBond = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__createBond")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean createBond()
  bool createBond() {
    return _createBond(reference).boolean;
  }

  static final _getBondState = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__getBondState")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getBondState()
  int getBondState() {
    return _getBondState(reference).integer;
  }

  static final _getBluetoothClass = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__getBluetoothClass")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothClass getBluetoothClass()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getBluetoothClass() {
    return const jni.JObjectType()
        .fromRef(_getBluetoothClass(reference).object);
  }

  static final _getUuids = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__getUuids")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.ParcelUuid[] getUuids()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<ParcelUuid> getUuids() {
    return const jni.JArrayType($ParcelUuidType())
        .fromRef(_getUuids(reference).object);
  }

  static final _fetchUuidsWithSdp = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__fetchUuidsWithSdp")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean fetchUuidsWithSdp()
  bool fetchUuidsWithSdp() {
    return _fetchUuidsWithSdp(reference).boolean;
  }

  static final _setPin = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothDevice__setPin")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean setPin(byte[] bs)
  bool setPin(
    jni.JArray<jni.jbyte> bs,
  ) {
    return _setPin(reference, bs.reference).boolean;
  }

  static final _setPairingConfirmation = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("BluetoothDevice__setPairingConfirmation")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean setPairingConfirmation(boolean z)
  bool setPairingConfirmation(
    bool z,
  ) {
    return _setPairingConfirmation(reference, z ? 1 : 0).boolean;
  }

  static final _createRfcommSocketToServiceRecord = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__createRfcommSocketToServiceRecord")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID uUID)
  /// The returned object must be released after use, by calling the [release] method.
  BluetoothSocket createRfcommSocketToServiceRecord(
    jni.JObject uUID,
  ) {
    return const $BluetoothSocketType().fromRef(
        _createRfcommSocketToServiceRecord(reference, uUID.reference).object);
  }

  static final _createInsecureRfcommSocketToServiceRecord = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BluetoothDevice__createInsecureRfcommSocketToServiceRecord")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID uUID)
  /// The returned object must be released after use, by calling the [release] method.
  BluetoothSocket createInsecureRfcommSocketToServiceRecord(
    jni.JObject uUID,
  ) {
    return const $BluetoothSocketType().fromRef(
        _createInsecureRfcommSocketToServiceRecord(reference, uUID.reference)
            .object);
  }

  static final _connectGatt = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Pointer<ffi.Void>)>>("BluetoothDevice__connectGatt")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothGatt connectGatt(android.content.Context context, boolean z, android.bluetooth.BluetoothGattCallback bluetoothGattCallback)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject connectGatt(
    Context context,
    bool z,
    jni.JObject bluetoothGattCallback,
  ) {
    return const jni.JObjectType().fromRef(_connectGatt(reference,
            context.reference, z ? 1 : 0, bluetoothGattCallback.reference)
        .object);
  }

  static final _connectGatt1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BluetoothDevice__connectGatt1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.bluetooth.BluetoothGatt connectGatt(android.content.Context context, boolean z, android.bluetooth.BluetoothGattCallback bluetoothGattCallback, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject connectGatt1(
    Context context,
    bool z,
    jni.JObject bluetoothGattCallback,
    int i,
  ) {
    return const jni.JObjectType().fromRef(_connectGatt1(reference,
            context.reference, z ? 1 : 0, bluetoothGattCallback.reference, i)
        .object);
  }

  static final _connectGatt2 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("BluetoothDevice__connectGatt2")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.bluetooth.BluetoothGatt connectGatt(android.content.Context context, boolean z, android.bluetooth.BluetoothGattCallback bluetoothGattCallback, int i, int i1)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject connectGatt2(
    Context context,
    bool z,
    jni.JObject bluetoothGattCallback,
    int i,
    int i1,
  ) {
    return const jni.JObjectType().fromRef(_connectGatt2(
            reference,
            context.reference,
            z ? 1 : 0,
            bluetoothGattCallback.reference,
            i,
            i1)
        .object);
  }

  static final _connectGatt3 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("BluetoothDevice__connectGatt3")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothGatt connectGatt(android.content.Context context, boolean z, android.bluetooth.BluetoothGattCallback bluetoothGattCallback, int i, int i1, android.os.Handler handler)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject connectGatt3(
    Context context,
    bool z,
    jni.JObject bluetoothGattCallback,
    int i,
    int i1,
    jni.JObject handler,
  ) {
    return const jni.JObjectType().fromRef(_connectGatt3(
            reference,
            context.reference,
            z ? 1 : 0,
            bluetoothGattCallback.reference,
            i,
            i1,
            handler.reference)
        .object);
  }

  static final _createL2capChannel = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BluetoothDevice__createL2capChannel")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.bluetooth.BluetoothSocket createL2capChannel(int i)
  /// The returned object must be released after use, by calling the [release] method.
  BluetoothSocket createL2capChannel(
    int i,
  ) {
    return const $BluetoothSocketType()
        .fromRef(_createL2capChannel(reference, i).object);
  }

  static final _createInsecureL2capChannel = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BluetoothDevice__createInsecureL2capChannel")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.bluetooth.BluetoothSocket createInsecureL2capChannel(int i)
  /// The returned object must be released after use, by calling the [release] method.
  BluetoothSocket createInsecureL2capChannel(
    int i,
  ) {
    return const $BluetoothSocketType()
        .fromRef(_createInsecureL2capChannel(reference, i).object);
  }
}

final class $BluetoothDeviceType extends jni.JObjType<BluetoothDevice> {
  const $BluetoothDeviceType();

  @override
  String get signature => r"Landroid/bluetooth/BluetoothDevice;";

  @override
  BluetoothDevice fromRef(jni.JObjectPtr ref) => BluetoothDevice.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BluetoothDeviceType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BluetoothDeviceType) &&
        other is $BluetoothDeviceType;
  }
}

/// from: android.bluetooth.BluetoothManager
class BluetoothManager extends jni.JObject {
  @override
  late final jni.JObjType<BluetoothManager> $type = type;

  BluetoothManager.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BluetoothManagerType();
  static final _getAdapter = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothManager__getAdapter")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothAdapter getAdapter()
  /// The returned object must be released after use, by calling the [release] method.
  BluetoothAdapter getAdapter() {
    return const $BluetoothAdapterType().fromRef(_getAdapter(reference).object);
  }

  static final _getConnectionState = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BluetoothManager__getConnectionState")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public int getConnectionState(android.bluetooth.BluetoothDevice bluetoothDevice, int i)
  int getConnectionState(
    BluetoothDevice bluetoothDevice,
    int i,
  ) {
    return _getConnectionState(reference, bluetoothDevice.reference, i).integer;
  }

  static final _getConnectedDevices = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BluetoothManager__getConnectedDevices")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.util.List getConnectedDevices(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JList<BluetoothDevice> getConnectedDevices(
    int i,
  ) {
    return const jni.JListType($BluetoothDeviceType())
        .fromRef(_getConnectedDevices(reference, i).object);
  }

  static final _getDevicesMatchingConnectionStates = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "BluetoothManager__getDevicesMatchingConnectionStates")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List getDevicesMatchingConnectionStates(int i, java.lang.Object[] is)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JList<BluetoothDevice> getDevicesMatchingConnectionStates(
    int i,
    jni.JArray<jni.jint> is0,
  ) {
    return const jni.JListType($BluetoothDeviceType()).fromRef(
        _getDevicesMatchingConnectionStates(reference, i, is0.reference)
            .object);
  }

  static final _openGattServer = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BluetoothManager__openGattServer")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothGattServer openGattServer(android.content.Context context, android.bluetooth.BluetoothGattServerCallback bluetoothGattServerCallback)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject openGattServer(
    Context context,
    jni.JObject bluetoothGattServerCallback,
  ) {
    return const jni.JObjectType().fromRef(_openGattServer(
            reference, context.reference, bluetoothGattServerCallback.reference)
        .object);
  }
}

final class $BluetoothManagerType extends jni.JObjType<BluetoothManager> {
  const $BluetoothManagerType();

  @override
  String get signature => r"Landroid/bluetooth/BluetoothManager;";

  @override
  BluetoothManager fromRef(jni.JObjectPtr ref) => BluetoothManager.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BluetoothManagerType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BluetoothManagerType) &&
        other is $BluetoothManagerType;
  }
}

/// from: android.bluetooth.BluetoothSocket
class BluetoothSocket extends jni.JObject {
  @override
  late final jni.JObjType<BluetoothSocket> $type = type;

  BluetoothSocket.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BluetoothSocketType();

  /// from: static public final int TYPE_L2CAP
  static const TYPE_L2CAP = 3;

  /// from: static public final int TYPE_RFCOMM
  static const TYPE_RFCOMM = 1;

  /// from: static public final int TYPE_SCO
  static const TYPE_SCO = 2;

  static final _finalize = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__finalize")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void finalize()
  void finalize() {
    return _finalize(reference).check();
  }

  static final _getRemoteDevice = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__getRemoteDevice")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.bluetooth.BluetoothDevice getRemoteDevice()
  /// The returned object must be released after use, by calling the [release] method.
  BluetoothDevice getRemoteDevice() {
    return const $BluetoothDeviceType()
        .fromRef(_getRemoteDevice(reference).object);
  }

  static final _getInputStream = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__getInputStream")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.InputStream getInputStream()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getInputStream() {
    return const jni.JObjectType().fromRef(_getInputStream(reference).object);
  }

  static final _getOutputStream = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__getOutputStream")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.OutputStream getOutputStream()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getOutputStream() {
    return const jni.JObjectType().fromRef(_getOutputStream(reference).object);
  }

  static final _isConnected = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__isConnected")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isConnected()
  bool isConnected() {
    return _isConnected(reference).boolean;
  }

  static final _connect = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__connect")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void connect()
  void connect() {
    return _connect(reference).check();
  }

  static final _close = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__close")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void close()
  void close() {
    return _close(reference).check();
  }

  static final _getMaxTransmitPacketSize = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__getMaxTransmitPacketSize")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMaxTransmitPacketSize()
  int getMaxTransmitPacketSize() {
    return _getMaxTransmitPacketSize(reference).integer;
  }

  static final _getMaxReceivePacketSize = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__getMaxReceivePacketSize")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMaxReceivePacketSize()
  int getMaxReceivePacketSize() {
    return _getMaxReceivePacketSize(reference).integer;
  }

  static final _getConnectionType = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__getConnectionType")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getConnectionType()
  int getConnectionType() {
    return _getConnectionType(reference).integer;
  }

  static final _toString1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BluetoothSocket__toString1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toString1() {
    return const jni.JStringType().fromRef(_toString1(reference).object);
  }
}

final class $BluetoothSocketType extends jni.JObjType<BluetoothSocket> {
  const $BluetoothSocketType();

  @override
  String get signature => r"Landroid/bluetooth/BluetoothSocket;";

  @override
  BluetoothSocket fromRef(jni.JObjectPtr ref) => BluetoothSocket.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BluetoothSocketType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BluetoothSocketType) &&
        other is $BluetoothSocketType;
  }
}

/// from: android.content.BroadcastReceiver$PendingResult
class BroadcastReceiver_PendingResult extends jni.JObject {
  @override
  late final jni.JObjType<BroadcastReceiver_PendingResult> $type = type;

  BroadcastReceiver_PendingResult.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BroadcastReceiver_PendingResultType();
  static final _setResultCode = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BroadcastReceiver_PendingResult__setResultCode")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setResultCode(int i)
  void setResultCode(
    int i,
  ) {
    return _setResultCode(reference, i).check();
  }

  static final _getResultCode = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver_PendingResult__getResultCode")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getResultCode()
  int getResultCode() {
    return _getResultCode(reference).integer;
  }

  static final _setResultData = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver_PendingResult__setResultData")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResultData(java.lang.String string)
  void setResultData(
    jni.JString string,
  ) {
    return _setResultData(reference, string.reference).check();
  }

  static final _getResultData = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver_PendingResult__getResultData")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getResultData()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getResultData() {
    return const jni.JStringType().fromRef(_getResultData(reference).object);
  }

  static final _setResultExtras = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver_PendingResult__setResultExtras")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResultExtras(android.os.Bundle bundle)
  void setResultExtras(
    jni.JObject bundle,
  ) {
    return _setResultExtras(reference, bundle.reference).check();
  }

  static final _getResultExtras = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "BroadcastReceiver_PendingResult__getResultExtras")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.os.Bundle getResultExtras(boolean z)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getResultExtras(
    bool z,
  ) {
    return const jni.JObjectType()
        .fromRef(_getResultExtras(reference, z ? 1 : 0).object);
  }

  static final _setResult = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver_PendingResult__setResult")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResult(int i, java.lang.String string, android.os.Bundle bundle)
  void setResult(
    int i,
    jni.JString string,
    jni.JObject bundle,
  ) {
    return _setResult(reference, i, string.reference, bundle.reference).check();
  }

  static final _getAbortBroadcast = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver_PendingResult__getAbortBroadcast")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean getAbortBroadcast()
  bool getAbortBroadcast() {
    return _getAbortBroadcast(reference).boolean;
  }

  static final _abortBroadcast = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver_PendingResult__abortBroadcast")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void abortBroadcast()
  void abortBroadcast() {
    return _abortBroadcast(reference).check();
  }

  static final _clearAbortBroadcast = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver_PendingResult__clearAbortBroadcast")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void clearAbortBroadcast()
  void clearAbortBroadcast() {
    return _clearAbortBroadcast(reference).check();
  }

  static final _finish = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver_PendingResult__finish")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void finish()
  void finish() {
    return _finish(reference).check();
  }
}

final class $BroadcastReceiver_PendingResultType
    extends jni.JObjType<BroadcastReceiver_PendingResult> {
  const $BroadcastReceiver_PendingResultType();

  @override
  String get signature => r"Landroid/content/BroadcastReceiver$PendingResult;";

  @override
  BroadcastReceiver_PendingResult fromRef(jni.JObjectPtr ref) =>
      BroadcastReceiver_PendingResult.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BroadcastReceiver_PendingResultType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BroadcastReceiver_PendingResultType) &&
        other is $BroadcastReceiver_PendingResultType;
  }
}

/// from: android.content.BroadcastReceiver
class BroadcastReceiver extends jni.JObject {
  @override
  late final jni.JObjType<BroadcastReceiver> $type = type;

  BroadcastReceiver.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BroadcastReceiverType();
  static final _new0 = jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
          "BroadcastReceiver__new0")
      .asFunction<jni.JniResult Function()>();

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory BroadcastReceiver() {
    return BroadcastReceiver.fromRef(_new0().object);
  }

  static final _onReceive = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BroadcastReceiver__onReceive")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onReceive(android.content.Context context, android.content.Intent intent)
  void onReceive(
    Context context,
    Intent intent,
  ) {
    return _onReceive(reference, context.reference, intent.reference).check();
  }

  static final _goAsync = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__goAsync")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.BroadcastReceiver$PendingResult goAsync()
  /// The returned object must be released after use, by calling the [release] method.
  BroadcastReceiver_PendingResult goAsync() {
    return const $BroadcastReceiver_PendingResultType()
        .fromRef(_goAsync(reference).object);
  }

  static final _peekService = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BroadcastReceiver__peekService")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.IBinder peekService(android.content.Context context, android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject peekService(
    Context context,
    Intent intent,
  ) {
    return const jni.JObjectType().fromRef(
        _peekService(reference, context.reference, intent.reference).object);
  }

  static final _setResultCode = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("BroadcastReceiver__setResultCode")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setResultCode(int i)
  void setResultCode(
    int i,
  ) {
    return _setResultCode(reference, i).check();
  }

  static final _getResultCode = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__getResultCode")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getResultCode()
  int getResultCode() {
    return _getResultCode(reference).integer;
  }

  static final _setResultData = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BroadcastReceiver__setResultData")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResultData(java.lang.String string)
  void setResultData(
    jni.JString string,
  ) {
    return _setResultData(reference, string.reference).check();
  }

  static final _getResultData = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__getResultData")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getResultData()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getResultData() {
    return const jni.JStringType().fromRef(_getResultData(reference).object);
  }

  static final _setResultExtras = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BroadcastReceiver__setResultExtras")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResultExtras(android.os.Bundle bundle)
  void setResultExtras(
    jni.JObject bundle,
  ) {
    return _setResultExtras(reference, bundle.reference).check();
  }

  static final _getResultExtras = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("BroadcastReceiver__getResultExtras")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.os.Bundle getResultExtras(boolean z)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getResultExtras(
    bool z,
  ) {
    return const jni.JObjectType()
        .fromRef(_getResultExtras(reference, z ? 1 : 0).object);
  }

  static final _setResult = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("BroadcastReceiver__setResult")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResult(int i, java.lang.String string, android.os.Bundle bundle)
  void setResult(
    int i,
    jni.JString string,
    jni.JObject bundle,
  ) {
    return _setResult(reference, i, string.reference, bundle.reference).check();
  }

  static final _getAbortBroadcast = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__getAbortBroadcast")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean getAbortBroadcast()
  bool getAbortBroadcast() {
    return _getAbortBroadcast(reference).boolean;
  }

  static final _abortBroadcast = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__abortBroadcast")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void abortBroadcast()
  void abortBroadcast() {
    return _abortBroadcast(reference).check();
  }

  static final _clearAbortBroadcast = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__clearAbortBroadcast")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void clearAbortBroadcast()
  void clearAbortBroadcast() {
    return _clearAbortBroadcast(reference).check();
  }

  static final _isOrderedBroadcast = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__isOrderedBroadcast")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isOrderedBroadcast()
  bool isOrderedBroadcast() {
    return _isOrderedBroadcast(reference).boolean;
  }

  static final _isInitialStickyBroadcast = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__isInitialStickyBroadcast")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isInitialStickyBroadcast()
  bool isInitialStickyBroadcast() {
    return _isInitialStickyBroadcast(reference).boolean;
  }

  static final _setOrderedHint = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("BroadcastReceiver__setOrderedHint")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setOrderedHint(boolean z)
  void setOrderedHint(
    bool z,
  ) {
    return _setOrderedHint(reference, z ? 1 : 0).check();
  }

  static final _getSentFromUid = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__getSentFromUid")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getSentFromUid()
  int getSentFromUid() {
    return _getSentFromUid(reference).integer;
  }

  static final _getSentFromPackage = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__getSentFromPackage")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSentFromPackage()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getSentFromPackage() {
    return const jni.JStringType()
        .fromRef(_getSentFromPackage(reference).object);
  }

  static final _setDebugUnregister = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("BroadcastReceiver__setDebugUnregister")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setDebugUnregister(boolean z)
  void setDebugUnregister(
    bool z,
  ) {
    return _setDebugUnregister(reference, z ? 1 : 0).check();
  }

  static final _getDebugUnregister = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiver__getDebugUnregister")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean getDebugUnregister()
  bool getDebugUnregister() {
    return _getDebugUnregister(reference).boolean;
  }
}

final class $BroadcastReceiverType extends jni.JObjType<BroadcastReceiver> {
  const $BroadcastReceiverType();

  @override
  String get signature => r"Landroid/content/BroadcastReceiver;";

  @override
  BroadcastReceiver fromRef(jni.JObjectPtr ref) =>
      BroadcastReceiver.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BroadcastReceiverType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BroadcastReceiverType) &&
        other is $BroadcastReceiverType;
  }
}

/// from: android.content.Context$BindServiceFlags
class Context_BindServiceFlags extends jni.JObject {
  @override
  late final jni.JObjType<Context_BindServiceFlags> $type = type;

  Context_BindServiceFlags.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $Context_BindServiceFlagsType();
  static final _of =
      jniLookup<ffi.NativeFunction<jni.JniResult Function(ffi.Int64)>>(
              "Context_BindServiceFlags__of")
          .asFunction<jni.JniResult Function(int)>();

  /// from: static public android.content.Context$BindServiceFlags of(long j)
  /// The returned object must be released after use, by calling the [release] method.
  static Context_BindServiceFlags of(
    int j,
  ) {
    return const $Context_BindServiceFlagsType().fromRef(_of(j).object);
  }
}

final class $Context_BindServiceFlagsType
    extends jni.JObjType<Context_BindServiceFlags> {
  const $Context_BindServiceFlagsType();

  @override
  String get signature => r"Landroid/content/Context$BindServiceFlags;";

  @override
  Context_BindServiceFlags fromRef(jni.JObjectPtr ref) =>
      Context_BindServiceFlags.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($Context_BindServiceFlagsType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($Context_BindServiceFlagsType) &&
        other is $Context_BindServiceFlagsType;
  }
}

/// from: android.content.Context
class Context extends jni.JObject {
  @override
  late final jni.JObjType<Context> $type = type;

  Context.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $ContextType();

  /// from: static public final java.lang.String ACCESSIBILITY_SERVICE
  static const ACCESSIBILITY_SERVICE = r"""accessibility""";

  /// from: static public final java.lang.String ACCOUNT_SERVICE
  static const ACCOUNT_SERVICE = r"""account""";

  /// from: static public final java.lang.String ACTIVITY_SERVICE
  static const ACTIVITY_SERVICE = r"""activity""";

  /// from: static public final java.lang.String ALARM_SERVICE
  static const ALARM_SERVICE = r"""alarm""";

  /// from: static public final java.lang.String APPWIDGET_SERVICE
  static const APPWIDGET_SERVICE = r"""appwidget""";

  /// from: static public final java.lang.String APP_OPS_SERVICE
  static const APP_OPS_SERVICE = r"""appops""";

  /// from: static public final java.lang.String APP_SEARCH_SERVICE
  static const APP_SEARCH_SERVICE = r"""app_search""";

  /// from: static public final java.lang.String AUDIO_SERVICE
  static const AUDIO_SERVICE = r"""audio""";

  /// from: static public final java.lang.String BATTERY_SERVICE
  static const BATTERY_SERVICE = r"""batterymanager""";

  /// from: static public final int BIND_ABOVE_CLIENT
  static const BIND_ABOVE_CLIENT = 8;

  /// from: static public final int BIND_ADJUST_WITH_ACTIVITY
  static const BIND_ADJUST_WITH_ACTIVITY = 128;

  /// from: static public final int BIND_ALLOW_ACTIVITY_STARTS
  static const BIND_ALLOW_ACTIVITY_STARTS = 512;

  /// from: static public final int BIND_ALLOW_OOM_MANAGEMENT
  static const BIND_ALLOW_OOM_MANAGEMENT = 16;

  /// from: static public final int BIND_AUTO_CREATE
  static const BIND_AUTO_CREATE = 1;

  /// from: static public final int BIND_DEBUG_UNBIND
  static const BIND_DEBUG_UNBIND = 2;

  /// from: static public final int BIND_EXTERNAL_SERVICE
  static const BIND_EXTERNAL_SERVICE = -2147483648;

  /// from: static public final long BIND_EXTERNAL_SERVICE_LONG
  static const BIND_EXTERNAL_SERVICE_LONG = 4611686018427387904;

  /// from: static public final int BIND_IMPORTANT
  static const BIND_IMPORTANT = 64;

  /// from: static public final int BIND_INCLUDE_CAPABILITIES
  static const BIND_INCLUDE_CAPABILITIES = 4096;

  /// from: static public final int BIND_NOT_FOREGROUND
  static const BIND_NOT_FOREGROUND = 4;

  /// from: static public final int BIND_NOT_PERCEPTIBLE
  static const BIND_NOT_PERCEPTIBLE = 256;

  /// from: static public final int BIND_SHARED_ISOLATED_PROCESS
  static const BIND_SHARED_ISOLATED_PROCESS = 8192;

  /// from: static public final int BIND_WAIVE_PRIORITY
  static const BIND_WAIVE_PRIORITY = 32;

  /// from: static public final java.lang.String BIOMETRIC_SERVICE
  static const BIOMETRIC_SERVICE = r"""biometric""";

  /// from: static public final java.lang.String BLOB_STORE_SERVICE
  static const BLOB_STORE_SERVICE = r"""blob_store""";

  /// from: static public final java.lang.String BLUETOOTH_SERVICE
  static const BLUETOOTH_SERVICE = r"""bluetooth""";

  /// from: static public final java.lang.String BUGREPORT_SERVICE
  static const BUGREPORT_SERVICE = r"""bugreport""";

  /// from: static public final java.lang.String CAMERA_SERVICE
  static const CAMERA_SERVICE = r"""camera""";

  /// from: static public final java.lang.String CAPTIONING_SERVICE
  static const CAPTIONING_SERVICE = r"""captioning""";

  /// from: static public final java.lang.String CARRIER_CONFIG_SERVICE
  static const CARRIER_CONFIG_SERVICE = r"""carrier_config""";

  /// from: static public final java.lang.String CLIPBOARD_SERVICE
  static const CLIPBOARD_SERVICE = r"""clipboard""";

  /// from: static public final java.lang.String COMPANION_DEVICE_SERVICE
  static const COMPANION_DEVICE_SERVICE = r"""companiondevice""";

  /// from: static public final java.lang.String CONNECTIVITY_DIAGNOSTICS_SERVICE
  static const CONNECTIVITY_DIAGNOSTICS_SERVICE =
      r"""connectivity_diagnostics""";

  /// from: static public final java.lang.String CONNECTIVITY_SERVICE
  static const CONNECTIVITY_SERVICE = r"""connectivity""";

  /// from: static public final java.lang.String CONSUMER_IR_SERVICE
  static const CONSUMER_IR_SERVICE = r"""consumer_ir""";

  /// from: static public final int CONTEXT_IGNORE_SECURITY
  static const CONTEXT_IGNORE_SECURITY = 2;

  /// from: static public final int CONTEXT_INCLUDE_CODE
  static const CONTEXT_INCLUDE_CODE = 1;

  /// from: static public final int CONTEXT_RESTRICTED
  static const CONTEXT_RESTRICTED = 4;

  /// from: static public final java.lang.String CREDENTIAL_SERVICE
  static const CREDENTIAL_SERVICE = r"""credential""";

  /// from: static public final java.lang.String CROSS_PROFILE_APPS_SERVICE
  static const CROSS_PROFILE_APPS_SERVICE = r"""crossprofileapps""";

  /// from: static public final int DEVICE_ID_DEFAULT
  static const DEVICE_ID_DEFAULT = 0;

  /// from: static public final int DEVICE_ID_INVALID
  static const DEVICE_ID_INVALID = -1;

  /// from: static public final java.lang.String DEVICE_LOCK_SERVICE
  static const DEVICE_LOCK_SERVICE = r"""device_lock""";

  /// from: static public final java.lang.String DEVICE_POLICY_SERVICE
  static const DEVICE_POLICY_SERVICE = r"""device_policy""";

  /// from: static public final java.lang.String DISPLAY_HASH_SERVICE
  static const DISPLAY_HASH_SERVICE = r"""display_hash""";

  /// from: static public final java.lang.String DISPLAY_SERVICE
  static const DISPLAY_SERVICE = r"""display""";

  /// from: static public final java.lang.String DOMAIN_VERIFICATION_SERVICE
  static const DOMAIN_VERIFICATION_SERVICE = r"""domain_verification""";

  /// from: static public final java.lang.String DOWNLOAD_SERVICE
  static const DOWNLOAD_SERVICE = r"""download""";

  /// from: static public final java.lang.String DROPBOX_SERVICE
  static const DROPBOX_SERVICE = r"""dropbox""";

  /// from: static public final java.lang.String EUICC_SERVICE
  static const EUICC_SERVICE = r"""euicc""";

  /// from: static public final java.lang.String FILE_INTEGRITY_SERVICE
  static const FILE_INTEGRITY_SERVICE = r"""file_integrity""";

  /// from: static public final java.lang.String FINGERPRINT_SERVICE
  static const FINGERPRINT_SERVICE = r"""fingerprint""";

  /// from: static public final java.lang.String GAME_SERVICE
  static const GAME_SERVICE = r"""game""";

  /// from: static public final java.lang.String GRAMMATICAL_INFLECTION_SERVICE
  static const GRAMMATICAL_INFLECTION_SERVICE = r"""grammatical_inflection""";

  /// from: static public final java.lang.String HARDWARE_PROPERTIES_SERVICE
  static const HARDWARE_PROPERTIES_SERVICE = r"""hardware_properties""";

  /// from: static public final java.lang.String HEALTHCONNECT_SERVICE
  static const HEALTHCONNECT_SERVICE = r"""healthconnect""";

  /// from: static public final java.lang.String INPUT_METHOD_SERVICE
  static const INPUT_METHOD_SERVICE = r"""input_method""";

  /// from: static public final java.lang.String INPUT_SERVICE
  static const INPUT_SERVICE = r"""input""";

  /// from: static public final java.lang.String IPSEC_SERVICE
  static const IPSEC_SERVICE = r"""ipsec""";

  /// from: static public final java.lang.String JOB_SCHEDULER_SERVICE
  static const JOB_SCHEDULER_SERVICE = r"""jobscheduler""";

  /// from: static public final java.lang.String KEYGUARD_SERVICE
  static const KEYGUARD_SERVICE = r"""keyguard""";

  /// from: static public final java.lang.String LAUNCHER_APPS_SERVICE
  static const LAUNCHER_APPS_SERVICE = r"""launcherapps""";

  /// from: static public final java.lang.String LAYOUT_INFLATER_SERVICE
  static const LAYOUT_INFLATER_SERVICE = r"""layout_inflater""";

  /// from: static public final java.lang.String LOCALE_SERVICE
  static const LOCALE_SERVICE = r"""locale""";

  /// from: static public final java.lang.String LOCATION_SERVICE
  static const LOCATION_SERVICE = r"""location""";

  /// from: static public final java.lang.String MEDIA_COMMUNICATION_SERVICE
  static const MEDIA_COMMUNICATION_SERVICE = r"""media_communication""";

  /// from: static public final java.lang.String MEDIA_METRICS_SERVICE
  static const MEDIA_METRICS_SERVICE = r"""media_metrics""";

  /// from: static public final java.lang.String MEDIA_PROJECTION_SERVICE
  static const MEDIA_PROJECTION_SERVICE = r"""media_projection""";

  /// from: static public final java.lang.String MEDIA_ROUTER_SERVICE
  static const MEDIA_ROUTER_SERVICE = r"""media_router""";

  /// from: static public final java.lang.String MEDIA_SESSION_SERVICE
  static const MEDIA_SESSION_SERVICE = r"""media_session""";

  /// from: static public final java.lang.String MIDI_SERVICE
  static const MIDI_SERVICE = r"""midi""";

  /// from: static public final int MODE_APPEND
  static const MODE_APPEND = 32768;

  /// from: static public final int MODE_ENABLE_WRITE_AHEAD_LOGGING
  static const MODE_ENABLE_WRITE_AHEAD_LOGGING = 8;

  /// from: static public final int MODE_MULTI_PROCESS
  static const MODE_MULTI_PROCESS = 4;

  /// from: static public final int MODE_NO_LOCALIZED_COLLATORS
  static const MODE_NO_LOCALIZED_COLLATORS = 16;

  /// from: static public final int MODE_PRIVATE
  static const MODE_PRIVATE = 0;

  /// from: static public final int MODE_WORLD_READABLE
  static const MODE_WORLD_READABLE = 1;

  /// from: static public final int MODE_WORLD_WRITEABLE
  static const MODE_WORLD_WRITEABLE = 2;

  /// from: static public final java.lang.String NETWORK_STATS_SERVICE
  static const NETWORK_STATS_SERVICE = r"""netstats""";

  /// from: static public final java.lang.String NFC_SERVICE
  static const NFC_SERVICE = r"""nfc""";

  /// from: static public final java.lang.String NOTIFICATION_SERVICE
  static const NOTIFICATION_SERVICE = r"""notification""";

  /// from: static public final java.lang.String NSD_SERVICE
  static const NSD_SERVICE = r"""servicediscovery""";

  /// from: static public final java.lang.String OVERLAY_SERVICE
  static const OVERLAY_SERVICE = r"""overlay""";

  /// from: static public final java.lang.String PEOPLE_SERVICE
  static const PEOPLE_SERVICE = r"""people""";

  /// from: static public final java.lang.String PERFORMANCE_HINT_SERVICE
  static const PERFORMANCE_HINT_SERVICE = r"""performance_hint""";

  /// from: static public final java.lang.String POWER_SERVICE
  static const POWER_SERVICE = r"""power""";

  /// from: static public final java.lang.String PRINT_SERVICE
  static const PRINT_SERVICE = r"""print""";

  /// from: static public final int RECEIVER_EXPORTED
  static const RECEIVER_EXPORTED = 2;

  /// from: static public final int RECEIVER_NOT_EXPORTED
  static const RECEIVER_NOT_EXPORTED = 4;

  /// from: static public final int RECEIVER_VISIBLE_TO_INSTANT_APPS
  static const RECEIVER_VISIBLE_TO_INSTANT_APPS = 1;

  /// from: static public final java.lang.String RESTRICTIONS_SERVICE
  static const RESTRICTIONS_SERVICE = r"""restrictions""";

  /// from: static public final java.lang.String ROLE_SERVICE
  static const ROLE_SERVICE = r"""role""";

  /// from: static public final java.lang.String SEARCH_SERVICE
  static const SEARCH_SERVICE = r"""search""";

  /// from: static public final java.lang.String SENSOR_SERVICE
  static const SENSOR_SERVICE = r"""sensor""";

  /// from: static public final java.lang.String SHORTCUT_SERVICE
  static const SHORTCUT_SERVICE = r"""shortcut""";

  /// from: static public final java.lang.String STATUS_BAR_SERVICE
  static const STATUS_BAR_SERVICE = r"""statusbar""";

  /// from: static public final java.lang.String STORAGE_SERVICE
  static const STORAGE_SERVICE = r"""storage""";

  /// from: static public final java.lang.String STORAGE_STATS_SERVICE
  static const STORAGE_STATS_SERVICE = r"""storagestats""";

  /// from: static public final java.lang.String SYSTEM_HEALTH_SERVICE
  static const SYSTEM_HEALTH_SERVICE = r"""systemhealth""";

  /// from: static public final java.lang.String TELECOM_SERVICE
  static const TELECOM_SERVICE = r"""telecom""";

  /// from: static public final java.lang.String TELEPHONY_IMS_SERVICE
  static const TELEPHONY_IMS_SERVICE = r"""telephony_ims""";

  /// from: static public final java.lang.String TELEPHONY_SERVICE
  static const TELEPHONY_SERVICE = r"""phone""";

  /// from: static public final java.lang.String TELEPHONY_SUBSCRIPTION_SERVICE
  static const TELEPHONY_SUBSCRIPTION_SERVICE =
      r"""telephony_subscription_service""";

  /// from: static public final java.lang.String TEXT_CLASSIFICATION_SERVICE
  static const TEXT_CLASSIFICATION_SERVICE = r"""textclassification""";

  /// from: static public final java.lang.String TEXT_SERVICES_MANAGER_SERVICE
  static const TEXT_SERVICES_MANAGER_SERVICE = r"""textservices""";

  /// from: static public final java.lang.String TV_INPUT_SERVICE
  static const TV_INPUT_SERVICE = r"""tv_input""";

  /// from: static public final java.lang.String TV_INTERACTIVE_APP_SERVICE
  static const TV_INTERACTIVE_APP_SERVICE = r"""tv_interactive_app""";

  /// from: static public final java.lang.String UI_MODE_SERVICE
  static const UI_MODE_SERVICE = r"""uimode""";

  /// from: static public final java.lang.String USAGE_STATS_SERVICE
  static const USAGE_STATS_SERVICE = r"""usagestats""";

  /// from: static public final java.lang.String USB_SERVICE
  static const USB_SERVICE = r"""usb""";

  /// from: static public final java.lang.String USER_SERVICE
  static const USER_SERVICE = r"""user""";

  /// from: static public final java.lang.String VIBRATOR_MANAGER_SERVICE
  static const VIBRATOR_MANAGER_SERVICE = r"""vibrator_manager""";

  /// from: static public final java.lang.String VIBRATOR_SERVICE
  static const VIBRATOR_SERVICE = r"""vibrator""";

  /// from: static public final java.lang.String VIRTUAL_DEVICE_SERVICE
  static const VIRTUAL_DEVICE_SERVICE = r"""virtualdevice""";

  /// from: static public final java.lang.String VPN_MANAGEMENT_SERVICE
  static const VPN_MANAGEMENT_SERVICE = r"""vpn_management""";

  /// from: static public final java.lang.String WALLPAPER_SERVICE
  static const WALLPAPER_SERVICE = r"""wallpaper""";

  /// from: static public final java.lang.String WIFI_AWARE_SERVICE
  static const WIFI_AWARE_SERVICE = r"""wifiaware""";

  /// from: static public final java.lang.String WIFI_P2P_SERVICE
  static const WIFI_P2P_SERVICE = r"""wifip2p""";

  /// from: static public final java.lang.String WIFI_RTT_RANGING_SERVICE
  static const WIFI_RTT_RANGING_SERVICE = r"""wifirtt""";

  /// from: static public final java.lang.String WIFI_SERVICE
  static const WIFI_SERVICE = r"""wifi""";

  /// from: static public final java.lang.String WINDOW_SERVICE
  static const WINDOW_SERVICE = r"""window""";

  static final _new0 =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>("Context__new0")
          .asFunction<jni.JniResult Function()>();

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory Context() {
    return Context.fromRef(_new0().object);
  }

  static final _getAssets = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getAssets")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.AssetManager getAssets()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getAssets() {
    return const jni.JObjectType().fromRef(_getAssets(reference).object);
  }

  static final _getResources = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getResources")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.Resources getResources()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getResources() {
    return const jni.JObjectType().fromRef(_getResources(reference).object);
  }

  static final _getPackageManager = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getPackageManager")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.pm.PackageManager getPackageManager()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getPackageManager() {
    return const jni.JObjectType()
        .fromRef(_getPackageManager(reference).object);
  }

  static final _getContentResolver = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getContentResolver")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.ContentResolver getContentResolver()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getContentResolver() {
    return const jni.JObjectType()
        .fromRef(_getContentResolver(reference).object);
  }

  static final _getMainLooper = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getMainLooper")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.os.Looper getMainLooper()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getMainLooper() {
    return const jni.JObjectType().fromRef(_getMainLooper(reference).object);
  }

  static final _getMainExecutor = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getMainExecutor")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.concurrent.Executor getMainExecutor()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getMainExecutor() {
    return const jni.JObjectType().fromRef(_getMainExecutor(reference).object);
  }

  static final _getApplicationContext = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getApplicationContext")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context getApplicationContext()
  /// The returned object must be released after use, by calling the [release] method.
  Context getApplicationContext() {
    return const $ContextType()
        .fromRef(_getApplicationContext(reference).object);
  }

  static final _registerComponentCallbacks = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__registerComponentCallbacks")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerComponentCallbacks(android.content.ComponentCallbacks componentCallbacks)
  void registerComponentCallbacks(
    jni.JObject componentCallbacks,
  ) {
    return _registerComponentCallbacks(reference, componentCallbacks.reference)
        .check();
  }

  static final _unregisterComponentCallbacks = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__unregisterComponentCallbacks")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterComponentCallbacks(android.content.ComponentCallbacks componentCallbacks)
  void unregisterComponentCallbacks(
    jni.JObject componentCallbacks,
  ) {
    return _unregisterComponentCallbacks(
            reference, componentCallbacks.reference)
        .check();
  }

  static final _getText = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Context__getText")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.CharSequence getText(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getText(
    int i,
  ) {
    return const jni.JObjectType().fromRef(_getText(reference, i).object);
  }

  static final _getString = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Context__getString")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getString(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getString(
    int i,
  ) {
    return const jni.JStringType().fromRef(_getString(reference, i).object);
  }

  static final _getString1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__getString1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getString(int i, java.lang.Object[] objects)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getString1(
    int i,
    jni.JArray<jni.JObject> objects,
  ) {
    return const jni.JStringType()
        .fromRef(_getString1(reference, i, objects.reference).object);
  }

  static final _getColor = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Context__getColor")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final int getColor(int i)
  int getColor(
    int i,
  ) {
    return _getColor(reference, i).integer;
  }

  static final _getDrawable = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Context__getDrawable")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.graphics.drawable.Drawable getDrawable(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDrawable(
    int i,
  ) {
    return const jni.JObjectType().fromRef(_getDrawable(reference, i).object);
  }

  static final _getColorStateList = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__getColorStateList")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.content.res.ColorStateList getColorStateList(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getColorStateList(
    int i,
  ) {
    return const jni.JObjectType()
        .fromRef(_getColorStateList(reference, i).object);
  }

  static final _setTheme = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Context__setTheme")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setTheme(int i)
  void setTheme(
    int i,
  ) {
    return _setTheme(reference, i).check();
  }

  static final _getTheme = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getTheme")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.Resources$Theme getTheme()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getTheme() {
    return const jni.JObjectType().fromRef(_getTheme(reference).object);
  }

  static final _obtainStyledAttributes = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__obtainStyledAttributes")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(int[] is)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject obtainStyledAttributes(
    jni.JArray<jni.jint> is0,
  ) {
    return const jni.JObjectType()
        .fromRef(_obtainStyledAttributes(reference, is0.reference).object);
  }

  static final _obtainStyledAttributes1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__obtainStyledAttributes1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(int i, int[] is)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject obtainStyledAttributes1(
    int i,
    jni.JArray<jni.jint> is0,
  ) {
    return const jni.JObjectType()
        .fromRef(_obtainStyledAttributes1(reference, i, is0.reference).object);
  }

  static final _obtainStyledAttributes2 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__obtainStyledAttributes2")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet attributeSet, int[] is)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject obtainStyledAttributes2(
    jni.JObject attributeSet,
    jni.JArray<jni.jint> is0,
  ) {
    return const jni.JObjectType().fromRef(_obtainStyledAttributes2(
            reference, attributeSet.reference, is0.reference)
        .object);
  }

  static final _obtainStyledAttributes3 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("Context__obtainStyledAttributes3")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet attributeSet, int[] is, int i, int i1)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject obtainStyledAttributes3(
    jni.JObject attributeSet,
    jni.JArray<jni.jint> is0,
    int i,
    int i1,
  ) {
    return const jni.JObjectType().fromRef(_obtainStyledAttributes3(
            reference, attributeSet.reference, is0.reference, i, i1)
        .object);
  }

  static final _getClassLoader = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getClassLoader")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.ClassLoader getClassLoader()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getClassLoader() {
    return const jni.JObjectType().fromRef(_getClassLoader(reference).object);
  }

  static final _getPackageName = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getPackageName")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getPackageName()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getPackageName() {
    return const jni.JStringType().fromRef(_getPackageName(reference).object);
  }

  static final _getOpPackageName = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getOpPackageName")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getOpPackageName()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getOpPackageName() {
    return const jni.JStringType().fromRef(_getOpPackageName(reference).object);
  }

  static final _getAttributionTag = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getAttributionTag")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getAttributionTag()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getAttributionTag() {
    return const jni.JStringType()
        .fromRef(_getAttributionTag(reference).object);
  }

  static final _getAttributionSource = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getAttributionSource")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.AttributionSource getAttributionSource()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getAttributionSource() {
    return const jni.JObjectType()
        .fromRef(_getAttributionSource(reference).object);
  }

  static final _getParams = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getParams")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContextParams getParams()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getParams() {
    return const jni.JObjectType().fromRef(_getParams(reference).object);
  }

  static final _getApplicationInfo = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getApplicationInfo")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.pm.ApplicationInfo getApplicationInfo()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getApplicationInfo() {
    return const jni.JObjectType()
        .fromRef(_getApplicationInfo(reference).object);
  }

  static final _getPackageResourcePath = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getPackageResourcePath")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getPackageResourcePath()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getPackageResourcePath() {
    return const jni.JStringType()
        .fromRef(_getPackageResourcePath(reference).object);
  }

  static final _getPackageCodePath = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getPackageCodePath")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getPackageCodePath()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getPackageCodePath() {
    return const jni.JStringType()
        .fromRef(_getPackageCodePath(reference).object);
  }

  static final _getSharedPreferences = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__getSharedPreferences")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.SharedPreferences getSharedPreferences(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSharedPreferences(
    jni.JString string,
    int i,
  ) {
    return const jni.JObjectType()
        .fromRef(_getSharedPreferences(reference, string.reference, i).object);
  }

  static final _moveSharedPreferencesFrom = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__moveSharedPreferencesFrom")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean moveSharedPreferencesFrom(android.content.Context context, java.lang.String string)
  bool moveSharedPreferencesFrom(
    Context context,
    jni.JString string,
  ) {
    return _moveSharedPreferencesFrom(
            reference, context.reference, string.reference)
        .boolean;
  }

  static final _deleteSharedPreferences = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__deleteSharedPreferences")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean deleteSharedPreferences(java.lang.String string)
  bool deleteSharedPreferences(
    jni.JString string,
  ) {
    return _deleteSharedPreferences(reference, string.reference).boolean;
  }

  static final _openFileInput = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__openFileInput")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.FileInputStream openFileInput(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject openFileInput(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_openFileInput(reference, string.reference).object);
  }

  static final _openFileOutput = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Context__openFileOutput")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.io.FileOutputStream openFileOutput(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject openFileOutput(
    jni.JString string,
    int i,
  ) {
    return const jni.JObjectType()
        .fromRef(_openFileOutput(reference, string.reference, i).object);
  }

  static final _deleteFile = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__deleteFile")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean deleteFile(java.lang.String string)
  bool deleteFile(
    jni.JString string,
  ) {
    return _deleteFile(reference, string.reference).boolean;
  }

  static final _getFileStreamPath = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__getFileStreamPath")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getFileStreamPath(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getFileStreamPath(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_getFileStreamPath(reference, string.reference).object);
  }

  static final _getDataDir = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getDataDir")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getDataDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDataDir() {
    return const jni.JObjectType().fromRef(_getDataDir(reference).object);
  }

  static final _getFilesDir = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getFilesDir")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getFilesDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getFilesDir() {
    return const jni.JObjectType().fromRef(_getFilesDir(reference).object);
  }

  static final _getNoBackupFilesDir = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getNoBackupFilesDir")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getNoBackupFilesDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getNoBackupFilesDir() {
    return const jni.JObjectType()
        .fromRef(_getNoBackupFilesDir(reference).object);
  }

  static final _getExternalFilesDir = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__getExternalFilesDir")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getExternalFilesDir(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getExternalFilesDir(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_getExternalFilesDir(reference, string.reference).object);
  }

  static final _getExternalFilesDirs = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__getExternalFilesDirs")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File[] getExternalFilesDirs(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getExternalFilesDirs(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.JObjectType())
        .fromRef(_getExternalFilesDirs(reference, string.reference).object);
  }

  static final _getObbDir = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getObbDir")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getObbDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getObbDir() {
    return const jni.JObjectType().fromRef(_getObbDir(reference).object);
  }

  static final _getObbDirs = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getObbDirs")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File[] getObbDirs()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getObbDirs() {
    return const jni.JArrayType(jni.JObjectType())
        .fromRef(_getObbDirs(reference).object);
  }

  static final _getCacheDir = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getCacheDir")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getCacheDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCacheDir() {
    return const jni.JObjectType().fromRef(_getCacheDir(reference).object);
  }

  static final _getCodeCacheDir = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getCodeCacheDir")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getCodeCacheDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCodeCacheDir() {
    return const jni.JObjectType().fromRef(_getCodeCacheDir(reference).object);
  }

  static final _getExternalCacheDir = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getExternalCacheDir")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getExternalCacheDir()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getExternalCacheDir() {
    return const jni.JObjectType()
        .fromRef(_getExternalCacheDir(reference).object);
  }

  static final _getExternalCacheDirs = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getExternalCacheDirs")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File[] getExternalCacheDirs()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getExternalCacheDirs() {
    return const jni.JArrayType(jni.JObjectType())
        .fromRef(_getExternalCacheDirs(reference).object);
  }

  static final _getExternalMediaDirs = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getExternalMediaDirs")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File[] getExternalMediaDirs()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getExternalMediaDirs() {
    return const jni.JArrayType(jni.JObjectType())
        .fromRef(_getExternalMediaDirs(reference).object);
  }

  static final _fileList = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__fileList")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String[] fileList()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JString> fileList() {
    return const jni.JArrayType(jni.JStringType())
        .fromRef(_fileList(reference).object);
  }

  static final _getDir = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Context__getDir")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.io.File getDir(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDir(
    jni.JString string,
    int i,
  ) {
    return const jni.JObjectType()
        .fromRef(_getDir(reference, string.reference, i).object);
  }

  static final _openOrCreateDatabase = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__openOrCreateDatabase")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String string, int i, android.database.sqlite.SQLiteDatabase$CursorFactory cursorFactory)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject openOrCreateDatabase(
    jni.JString string,
    int i,
    jni.JObject cursorFactory,
  ) {
    return const jni.JObjectType().fromRef(_openOrCreateDatabase(
            reference, string.reference, i, cursorFactory.reference)
        .object);
  }

  static final _openOrCreateDatabase1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__openOrCreateDatabase1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String string, int i, android.database.sqlite.SQLiteDatabase$CursorFactory cursorFactory, android.database.DatabaseErrorHandler databaseErrorHandler)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject openOrCreateDatabase1(
    jni.JString string,
    int i,
    jni.JObject cursorFactory,
    jni.JObject databaseErrorHandler,
  ) {
    return const jni.JObjectType().fromRef(_openOrCreateDatabase1(
            reference,
            string.reference,
            i,
            cursorFactory.reference,
            databaseErrorHandler.reference)
        .object);
  }

  static final _moveDatabaseFrom = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__moveDatabaseFrom")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean moveDatabaseFrom(android.content.Context context, java.lang.String string)
  bool moveDatabaseFrom(
    Context context,
    jni.JString string,
  ) {
    return _moveDatabaseFrom(reference, context.reference, string.reference)
        .boolean;
  }

  static final _deleteDatabase = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__deleteDatabase")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean deleteDatabase(java.lang.String string)
  bool deleteDatabase(
    jni.JString string,
  ) {
    return _deleteDatabase(reference, string.reference).boolean;
  }

  static final _getDatabasePath = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__getDatabasePath")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getDatabasePath(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDatabasePath(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_getDatabasePath(reference, string.reference).object);
  }

  static final _databaseList = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__databaseList")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String[] databaseList()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JString> databaseList() {
    return const jni.JArrayType(jni.JStringType())
        .fromRef(_databaseList(reference).object);
  }

  static final _getWallpaper = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getWallpaper")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getWallpaper()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getWallpaper() {
    return const jni.JObjectType().fromRef(_getWallpaper(reference).object);
  }

  static final _peekWallpaper = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__peekWallpaper")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable peekWallpaper()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject peekWallpaper() {
    return const jni.JObjectType().fromRef(_peekWallpaper(reference).object);
  }

  static final _getWallpaperDesiredMinimumWidth = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getWallpaperDesiredMinimumWidth")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getWallpaperDesiredMinimumWidth()
  int getWallpaperDesiredMinimumWidth() {
    return _getWallpaperDesiredMinimumWidth(reference).integer;
  }

  static final _getWallpaperDesiredMinimumHeight = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getWallpaperDesiredMinimumHeight")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getWallpaperDesiredMinimumHeight()
  int getWallpaperDesiredMinimumHeight() {
    return _getWallpaperDesiredMinimumHeight(reference).integer;
  }

  static final _setWallpaper = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__setWallpaper")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setWallpaper(android.graphics.Bitmap bitmap)
  void setWallpaper(
    jni.JObject bitmap,
  ) {
    return _setWallpaper(reference, bitmap.reference).check();
  }

  static final _setWallpaper1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__setWallpaper1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setWallpaper(java.io.InputStream inputStream)
  void setWallpaper1(
    jni.JObject inputStream,
  ) {
    return _setWallpaper1(reference, inputStream.reference).check();
  }

  static final _clearWallpaper = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__clearWallpaper")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void clearWallpaper()
  void clearWallpaper() {
    return _clearWallpaper(reference).check();
  }

  static final _startActivity = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__startActivity")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startActivity(android.content.Intent intent)
  void startActivity(
    Intent intent,
  ) {
    return _startActivity(reference, intent.reference).check();
  }

  static final _startActivity1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__startActivity1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startActivity(android.content.Intent intent, android.os.Bundle bundle)
  void startActivity1(
    Intent intent,
    jni.JObject bundle,
  ) {
    return _startActivity1(reference, intent.reference, bundle.reference)
        .check();
  }

  static final _startActivities = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__startActivities")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startActivities(android.content.Intent[] intents)
  void startActivities(
    jni.JArray<Intent> intents,
  ) {
    return _startActivities(reference, intents.reference).check();
  }

  static final _startActivities1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__startActivities1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startActivities(android.content.Intent[] intents, android.os.Bundle bundle)
  void startActivities1(
    jni.JArray<Intent> intents,
    jni.JObject bundle,
  ) {
    return _startActivities1(reference, intents.reference, bundle.reference)
        .check();
  }

  static final _startIntentSender = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("Context__startIntentSender")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public abstract void startIntentSender(android.content.IntentSender intentSender, android.content.Intent intent, int i, int i1, int i2)
  void startIntentSender(
    jni.JObject intentSender,
    Intent intent,
    int i,
    int i1,
    int i2,
  ) {
    return _startIntentSender(
            reference, intentSender.reference, intent.reference, i, i1, i2)
        .check();
  }

  static final _startIntentSender1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__startIntentSender1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startIntentSender(android.content.IntentSender intentSender, android.content.Intent intent, int i, int i1, int i2, android.os.Bundle bundle)
  void startIntentSender1(
    jni.JObject intentSender,
    Intent intent,
    int i,
    int i1,
    int i2,
    jni.JObject bundle,
  ) {
    return _startIntentSender1(reference, intentSender.reference,
            intent.reference, i, i1, i2, bundle.reference)
        .check();
  }

  static final _sendBroadcast = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendBroadcast")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendBroadcast(android.content.Intent intent)
  void sendBroadcast(
    Intent intent,
  ) {
    return _sendBroadcast(reference, intent.reference).check();
  }

  static final _sendBroadcast1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendBroadcast1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendBroadcast(android.content.Intent intent, java.lang.String string)
  void sendBroadcast1(
    Intent intent,
    jni.JString string,
  ) {
    return _sendBroadcast1(reference, intent.reference, string.reference)
        .check();
  }

  static final _sendBroadcastWithMultiplePermissions = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__sendBroadcastWithMultiplePermissions")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendBroadcastWithMultiplePermissions(android.content.Intent intent, java.lang.String[] strings)
  void sendBroadcastWithMultiplePermissions(
    Intent intent,
    jni.JArray<jni.JString> strings,
  ) {
    return _sendBroadcastWithMultiplePermissions(
            reference, intent.reference, strings.reference)
        .check();
  }

  static final _sendBroadcast2 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendBroadcast2")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendBroadcast(android.content.Intent intent, java.lang.String string, android.os.Bundle bundle)
  void sendBroadcast2(
    Intent intent,
    jni.JString string,
    jni.JObject bundle,
  ) {
    return _sendBroadcast2(
            reference, intent.reference, string.reference, bundle.reference)
        .check();
  }

  static final _sendOrderedBroadcast = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendOrderedBroadcast")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string)
  void sendOrderedBroadcast(
    Intent intent,
    jni.JString string,
  ) {
    return _sendOrderedBroadcast(reference, intent.reference, string.reference)
        .check();
  }

  static final _sendOrderedBroadcast1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendOrderedBroadcast1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string, android.os.Bundle bundle)
  void sendOrderedBroadcast1(
    Intent intent,
    jni.JString string,
    jni.JObject bundle,
  ) {
    return _sendOrderedBroadcast1(
            reference, intent.reference, string.reference, bundle.reference)
        .check();
  }

  static final _sendOrderedBroadcast2 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendOrderedBroadcast2")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string1, android.os.Bundle bundle)
  void sendOrderedBroadcast2(
    Intent intent,
    jni.JString string,
    BroadcastReceiver broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string1,
    jni.JObject bundle,
  ) {
    return _sendOrderedBroadcast2(
            reference,
            intent.reference,
            string.reference,
            broadcastReceiver.reference,
            handler.reference,
            i,
            string1.reference,
            bundle.reference)
        .check();
  }

  static final _sendOrderedBroadcast3 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendOrderedBroadcast3")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string, android.os.Bundle bundle, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string1, android.os.Bundle bundle1)
  void sendOrderedBroadcast3(
    Intent intent,
    jni.JString string,
    jni.JObject bundle,
    BroadcastReceiver broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string1,
    jni.JObject bundle1,
  ) {
    return _sendOrderedBroadcast3(
            reference,
            intent.reference,
            string.reference,
            bundle.reference,
            broadcastReceiver.reference,
            handler.reference,
            i,
            string1.reference,
            bundle1.reference)
        .check();
  }

  static final _sendBroadcastAsUser = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendBroadcastAsUser")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle)
  void sendBroadcastAsUser(
    Intent intent,
    jni.JObject userHandle,
  ) {
    return _sendBroadcastAsUser(
            reference, intent.reference, userHandle.reference)
        .check();
  }

  static final _sendBroadcastAsUser1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendBroadcastAsUser1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle, java.lang.String string)
  void sendBroadcastAsUser1(
    Intent intent,
    jni.JObject userHandle,
    jni.JString string,
  ) {
    return _sendBroadcastAsUser1(
            reference, intent.reference, userHandle.reference, string.reference)
        .check();
  }

  static final _sendOrderedBroadcastAsUser = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "Context__sendOrderedBroadcastAsUser")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendOrderedBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle, java.lang.String string, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string1, android.os.Bundle bundle)
  void sendOrderedBroadcastAsUser(
    Intent intent,
    jni.JObject userHandle,
    jni.JString string,
    BroadcastReceiver broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string1,
    jni.JObject bundle,
  ) {
    return _sendOrderedBroadcastAsUser(
            reference,
            intent.reference,
            userHandle.reference,
            string.reference,
            broadcastReceiver.reference,
            handler.reference,
            i,
            string1.reference,
            bundle.reference)
        .check();
  }

  static final _sendOrderedBroadcast4 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendOrderedBroadcast4")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendOrderedBroadcast(android.content.Intent intent, java.lang.String string, java.lang.String string1, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string2, android.os.Bundle bundle)
  void sendOrderedBroadcast4(
    Intent intent,
    jni.JString string,
    jni.JString string1,
    BroadcastReceiver broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string2,
    jni.JObject bundle,
  ) {
    return _sendOrderedBroadcast4(
            reference,
            intent.reference,
            string.reference,
            string1.reference,
            broadcastReceiver.reference,
            handler.reference,
            i,
            string2.reference,
            bundle.reference)
        .check();
  }

  static final _sendStickyBroadcast = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendStickyBroadcast")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendStickyBroadcast(android.content.Intent intent)
  void sendStickyBroadcast(
    Intent intent,
  ) {
    return _sendStickyBroadcast(reference, intent.reference).check();
  }

  static final _sendStickyBroadcast1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendStickyBroadcast1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendStickyBroadcast(android.content.Intent intent, android.os.Bundle bundle)
  void sendStickyBroadcast1(
    Intent intent,
    jni.JObject bundle,
  ) {
    return _sendStickyBroadcast1(reference, intent.reference, bundle.reference)
        .check();
  }

  static final _sendStickyOrderedBroadcast = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "Context__sendStickyOrderedBroadcast")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendStickyOrderedBroadcast(android.content.Intent intent, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string, android.os.Bundle bundle)
  void sendStickyOrderedBroadcast(
    Intent intent,
    BroadcastReceiver broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string,
    jni.JObject bundle,
  ) {
    return _sendStickyOrderedBroadcast(
            reference,
            intent.reference,
            broadcastReceiver.reference,
            handler.reference,
            i,
            string.reference,
            bundle.reference)
        .check();
  }

  static final _removeStickyBroadcast = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__removeStickyBroadcast")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removeStickyBroadcast(android.content.Intent intent)
  void removeStickyBroadcast(
    Intent intent,
  ) {
    return _removeStickyBroadcast(reference, intent.reference).check();
  }

  static final _sendStickyBroadcastAsUser = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__sendStickyBroadcastAsUser")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendStickyBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle)
  void sendStickyBroadcastAsUser(
    Intent intent,
    jni.JObject userHandle,
  ) {
    return _sendStickyBroadcastAsUser(
            reference, intent.reference, userHandle.reference)
        .check();
  }

  static final _sendStickyOrderedBroadcastAsUser = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "Context__sendStickyOrderedBroadcastAsUser")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendStickyOrderedBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle, android.content.BroadcastReceiver broadcastReceiver, android.os.Handler handler, int i, java.lang.String string, android.os.Bundle bundle)
  void sendStickyOrderedBroadcastAsUser(
    Intent intent,
    jni.JObject userHandle,
    BroadcastReceiver broadcastReceiver,
    jni.JObject handler,
    int i,
    jni.JString string,
    jni.JObject bundle,
  ) {
    return _sendStickyOrderedBroadcastAsUser(
            reference,
            intent.reference,
            userHandle.reference,
            broadcastReceiver.reference,
            handler.reference,
            i,
            string.reference,
            bundle.reference)
        .check();
  }

  static final _removeStickyBroadcastAsUser = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__removeStickyBroadcastAsUser")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removeStickyBroadcastAsUser(android.content.Intent intent, android.os.UserHandle userHandle)
  void removeStickyBroadcastAsUser(
    Intent intent,
    jni.JObject userHandle,
  ) {
    return _removeStickyBroadcastAsUser(
            reference, intent.reference, userHandle.reference)
        .check();
  }

  static final _registerReceiver = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__registerReceiver")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver broadcastReceiver, android.content.IntentFilter intentFilter)
  /// The returned object must be released after use, by calling the [release] method.
  Intent registerReceiver(
    BroadcastReceiver broadcastReceiver,
    IntentFilter intentFilter,
  ) {
    return const $IntentType().fromRef(_registerReceiver(
            reference, broadcastReceiver.reference, intentFilter.reference)
        .object);
  }

  static final _registerReceiver1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__registerReceiver1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver broadcastReceiver, android.content.IntentFilter intentFilter, int i)
  /// The returned object must be released after use, by calling the [release] method.
  Intent registerReceiver1(
    BroadcastReceiver broadcastReceiver,
    IntentFilter intentFilter,
    int i,
  ) {
    return const $IntentType().fromRef(_registerReceiver1(
            reference, broadcastReceiver.reference, intentFilter.reference, i)
        .object);
  }

  static final _registerReceiver2 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__registerReceiver2")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver broadcastReceiver, android.content.IntentFilter intentFilter, java.lang.String string, android.os.Handler handler)
  /// The returned object must be released after use, by calling the [release] method.
  Intent registerReceiver2(
    BroadcastReceiver broadcastReceiver,
    IntentFilter intentFilter,
    jni.JString string,
    jni.JObject handler,
  ) {
    return const $IntentType().fromRef(_registerReceiver2(
            reference,
            broadcastReceiver.reference,
            intentFilter.reference,
            string.reference,
            handler.reference)
        .object);
  }

  static final _registerReceiver3 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__registerReceiver3")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int)>();

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver broadcastReceiver, android.content.IntentFilter intentFilter, java.lang.String string, android.os.Handler handler, int i)
  /// The returned object must be released after use, by calling the [release] method.
  Intent registerReceiver3(
    BroadcastReceiver broadcastReceiver,
    IntentFilter intentFilter,
    jni.JString string,
    jni.JObject handler,
    int i,
  ) {
    return const $IntentType().fromRef(_registerReceiver3(
            reference,
            broadcastReceiver.reference,
            intentFilter.reference,
            string.reference,
            handler.reference,
            i)
        .object);
  }

  static final _unregisterReceiver = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__unregisterReceiver")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void unregisterReceiver(android.content.BroadcastReceiver broadcastReceiver)
  void unregisterReceiver(
    BroadcastReceiver broadcastReceiver,
  ) {
    return _unregisterReceiver(reference, broadcastReceiver.reference).check();
  }

  static final _startService = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__startService")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.ComponentName startService(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject startService(
    Intent intent,
  ) {
    return const jni.JObjectType()
        .fromRef(_startService(reference, intent.reference).object);
  }

  static final _startForegroundService = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__startForegroundService")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.ComponentName startForegroundService(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject startForegroundService(
    Intent intent,
  ) {
    return const jni.JObjectType()
        .fromRef(_startForegroundService(reference, intent.reference).object);
  }

  static final _stopService = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__stopService")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean stopService(android.content.Intent intent)
  bool stopService(
    Intent intent,
  ) {
    return _stopService(reference, intent.reference).boolean;
  }

  static final _bindService = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__bindService")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract boolean bindService(android.content.Intent intent, android.content.ServiceConnection serviceConnection, int i)
  bool bindService(
    Intent intent,
    jni.JObject serviceConnection,
    int i,
  ) {
    return _bindService(
            reference, intent.reference, serviceConnection.reference, i)
        .boolean;
  }

  static final _bindService1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__bindService1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean bindService(android.content.Intent intent, android.content.ServiceConnection serviceConnection, android.content.Context$BindServiceFlags bindServiceFlags)
  bool bindService1(
    Intent intent,
    jni.JObject serviceConnection,
    Context_BindServiceFlags bindServiceFlags,
  ) {
    return _bindService1(reference, intent.reference,
            serviceConnection.reference, bindServiceFlags.reference)
        .boolean;
  }

  static final _bindService2 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__bindService2")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean bindService(android.content.Intent intent, int i, java.util.concurrent.Executor executor, android.content.ServiceConnection serviceConnection)
  bool bindService2(
    Intent intent,
    int i,
    jni.JObject executor,
    jni.JObject serviceConnection,
  ) {
    return _bindService2(reference, intent.reference, i, executor.reference,
            serviceConnection.reference)
        .boolean;
  }

  static final _bindService3 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__bindService3")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean bindService(android.content.Intent intent, android.content.Context$BindServiceFlags bindServiceFlags, java.util.concurrent.Executor executor, android.content.ServiceConnection serviceConnection)
  bool bindService3(
    Intent intent,
    Context_BindServiceFlags bindServiceFlags,
    jni.JObject executor,
    jni.JObject serviceConnection,
  ) {
    return _bindService3(
            reference,
            intent.reference,
            bindServiceFlags.reference,
            executor.reference,
            serviceConnection.reference)
        .boolean;
  }

  static final _bindIsolatedService = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__bindIsolatedService")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean bindIsolatedService(android.content.Intent intent, int i, java.lang.String string, java.util.concurrent.Executor executor, android.content.ServiceConnection serviceConnection)
  bool bindIsolatedService(
    Intent intent,
    int i,
    jni.JString string,
    jni.JObject executor,
    jni.JObject serviceConnection,
  ) {
    return _bindIsolatedService(reference, intent.reference, i,
            string.reference, executor.reference, serviceConnection.reference)
        .boolean;
  }

  static final _bindIsolatedService1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__bindIsolatedService1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean bindIsolatedService(android.content.Intent intent, android.content.Context$BindServiceFlags bindServiceFlags, java.lang.String string, java.util.concurrent.Executor executor, android.content.ServiceConnection serviceConnection)
  bool bindIsolatedService1(
    Intent intent,
    Context_BindServiceFlags bindServiceFlags,
    jni.JString string,
    jni.JObject executor,
    jni.JObject serviceConnection,
  ) {
    return _bindIsolatedService1(
            reference,
            intent.reference,
            bindServiceFlags.reference,
            string.reference,
            executor.reference,
            serviceConnection.reference)
        .boolean;
  }

  static final _bindServiceAsUser = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__bindServiceAsUser")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean bindServiceAsUser(android.content.Intent intent, android.content.ServiceConnection serviceConnection, int i, android.os.UserHandle userHandle)
  bool bindServiceAsUser(
    Intent intent,
    jni.JObject serviceConnection,
    int i,
    jni.JObject userHandle,
  ) {
    return _bindServiceAsUser(reference, intent.reference,
            serviceConnection.reference, i, userHandle.reference)
        .boolean;
  }

  static final _bindServiceAsUser1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__bindServiceAsUser1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean bindServiceAsUser(android.content.Intent intent, android.content.ServiceConnection serviceConnection, android.content.Context$BindServiceFlags bindServiceFlags, android.os.UserHandle userHandle)
  bool bindServiceAsUser1(
    Intent intent,
    jni.JObject serviceConnection,
    Context_BindServiceFlags bindServiceFlags,
    jni.JObject userHandle,
  ) {
    return _bindServiceAsUser1(
            reference,
            intent.reference,
            serviceConnection.reference,
            bindServiceFlags.reference,
            userHandle.reference)
        .boolean;
  }

  static final _updateServiceGroup = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("Context__updateServiceGroup")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void updateServiceGroup(android.content.ServiceConnection serviceConnection, int i, int i1)
  void updateServiceGroup(
    jni.JObject serviceConnection,
    int i,
    int i1,
  ) {
    return _updateServiceGroup(reference, serviceConnection.reference, i, i1)
        .check();
  }

  static final _unbindService = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__unbindService")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void unbindService(android.content.ServiceConnection serviceConnection)
  void unbindService(
    jni.JObject serviceConnection,
  ) {
    return _unbindService(reference, serviceConnection.reference).check();
  }

  static final _startInstrumentation = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__startInstrumentation")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean startInstrumentation(android.content.ComponentName componentName, java.lang.String string, android.os.Bundle bundle)
  bool startInstrumentation(
    jni.JObject componentName,
    jni.JString string,
    jni.JObject bundle,
  ) {
    return _startInstrumentation(reference, componentName.reference,
            string.reference, bundle.reference)
        .boolean;
  }

  static final _getSystemService = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__getSystemService")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.Object getSystemService(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSystemService(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_getSystemService(reference, string.reference).object);
  }

  static final _getSystemService1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__getSystemService1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final T getSystemService(java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  $T getSystemService1<$T extends jni.JObject>(
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return T.fromRef(_getSystemService1(reference, class0.reference).object);
  }

  static final _getSystemServiceName = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__getSystemServiceName")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getSystemServiceName(java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getSystemServiceName(
    jni.JObject class0,
  ) {
    return const jni.JStringType()
        .fromRef(_getSystemServiceName(reference, class0.reference).object);
  }

  static final _checkPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("Context__checkPermission")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract int checkPermission(java.lang.String string, int i, int i1)
  int checkPermission(
    jni.JString string,
    int i,
    int i1,
  ) {
    return _checkPermission(reference, string.reference, i, i1).integer;
  }

  static final _checkCallingPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__checkCallingPermission")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int checkCallingPermission(java.lang.String string)
  int checkCallingPermission(
    jni.JString string,
  ) {
    return _checkCallingPermission(reference, string.reference).integer;
  }

  static final _checkCallingOrSelfPermission = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__checkCallingOrSelfPermission")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int checkCallingOrSelfPermission(java.lang.String string)
  int checkCallingOrSelfPermission(
    jni.JString string,
  ) {
    return _checkCallingOrSelfPermission(reference, string.reference).integer;
  }

  static final _checkSelfPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__checkSelfPermission")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int checkSelfPermission(java.lang.String string)
  int checkSelfPermission(
    jni.JString string,
  ) {
    return _checkSelfPermission(reference, string.reference).integer;
  }

  static final _enforcePermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__enforcePermission")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforcePermission(java.lang.String string, int i, int i1, java.lang.String string1)
  void enforcePermission(
    jni.JString string,
    int i,
    int i1,
    jni.JString string1,
  ) {
    return _enforcePermission(
            reference, string.reference, i, i1, string1.reference)
        .check();
  }

  static final _enforceCallingPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__enforceCallingPermission")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceCallingPermission(java.lang.String string, java.lang.String string1)
  void enforceCallingPermission(
    jni.JString string,
    jni.JString string1,
  ) {
    return _enforceCallingPermission(
            reference, string.reference, string1.reference)
        .check();
  }

  static final _enforceCallingOrSelfPermission = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__enforceCallingOrSelfPermission")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceCallingOrSelfPermission(java.lang.String string, java.lang.String string1)
  void enforceCallingOrSelfPermission(
    jni.JString string,
    jni.JString string1,
  ) {
    return _enforceCallingOrSelfPermission(
            reference, string.reference, string1.reference)
        .check();
  }

  static final _grantUriPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__grantUriPermission")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void grantUriPermission(java.lang.String string, android.net.Uri uri, int i)
  void grantUriPermission(
    jni.JString string,
    jni.JObject uri,
    int i,
  ) {
    return _grantUriPermission(reference, string.reference, uri.reference, i)
        .check();
  }

  static final _revokeUriPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__revokeUriPermission")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void revokeUriPermission(android.net.Uri uri, int i)
  void revokeUriPermission(
    jni.JObject uri,
    int i,
  ) {
    return _revokeUriPermission(reference, uri.reference, i).check();
  }

  static final _revokeUriPermission1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__revokeUriPermission1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void revokeUriPermission(java.lang.String string, android.net.Uri uri, int i)
  void revokeUriPermission1(
    jni.JString string,
    jni.JObject uri,
    int i,
  ) {
    return _revokeUriPermission1(reference, string.reference, uri.reference, i)
        .check();
  }

  static final _checkUriPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("Context__checkUriPermission")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public abstract int checkUriPermission(android.net.Uri uri, int i, int i1, int i2)
  int checkUriPermission(
    jni.JObject uri,
    int i,
    int i1,
    int i2,
  ) {
    return _checkUriPermission(reference, uri.reference, i, i1, i2).integer;
  }

  static final _checkUriPermissions = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("Context__checkUriPermissions")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public java.lang.Object[] checkUriPermissions(java.util.List list, int i, int i1, int i2)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jint> checkUriPermissions(
    jni.JList<jni.JObject> list,
    int i,
    int i1,
    int i2,
  ) {
    return const jni.JArrayType(jni.jintType()).fromRef(
        _checkUriPermissions(reference, list.reference, i, i1, i2).object);
  }

  static final _checkCallingUriPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__checkCallingUriPermission")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract int checkCallingUriPermission(android.net.Uri uri, int i)
  int checkCallingUriPermission(
    jni.JObject uri,
    int i,
  ) {
    return _checkCallingUriPermission(reference, uri.reference, i).integer;
  }

  static final _checkCallingUriPermissions = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__checkCallingUriPermissions")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.lang.Object[] checkCallingUriPermissions(java.util.List list, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jint> checkCallingUriPermissions(
    jni.JList<jni.JObject> list,
    int i,
  ) {
    return const jni.JArrayType(jni.jintType()).fromRef(
        _checkCallingUriPermissions(reference, list.reference, i).object);
  }

  static final _checkCallingOrSelfUriPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__checkCallingOrSelfUriPermission")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract int checkCallingOrSelfUriPermission(android.net.Uri uri, int i)
  int checkCallingOrSelfUriPermission(
    jni.JObject uri,
    int i,
  ) {
    return _checkCallingOrSelfUriPermission(reference, uri.reference, i)
        .integer;
  }

  static final _checkCallingOrSelfUriPermissions = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__checkCallingOrSelfUriPermissions")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.lang.Object[] checkCallingOrSelfUriPermissions(java.util.List list, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jint> checkCallingOrSelfUriPermissions(
    jni.JList<jni.JObject> list,
    int i,
  ) {
    return const jni.JArrayType(jni.jintType()).fromRef(
        _checkCallingOrSelfUriPermissions(reference, list.reference, i).object);
  }

  static final _checkUriPermission1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("Context__checkUriPermission1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public abstract int checkUriPermission(android.net.Uri uri, java.lang.String string, java.lang.String string1, int i, int i1, int i2)
  int checkUriPermission1(
    jni.JObject uri,
    jni.JString string,
    jni.JString string1,
    int i,
    int i1,
    int i2,
  ) {
    return _checkUriPermission1(reference, uri.reference, string.reference,
            string1.reference, i, i1, i2)
        .integer;
  }

  static final _enforceUriPermission = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__enforceUriPermission")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceUriPermission(android.net.Uri uri, int i, int i1, int i2, java.lang.String string)
  void enforceUriPermission(
    jni.JObject uri,
    int i,
    int i1,
    int i2,
    jni.JString string,
  ) {
    return _enforceUriPermission(
            reference, uri.reference, i, i1, i2, string.reference)
        .check();
  }

  static final _enforceCallingUriPermission = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "Context__enforceCallingUriPermission")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceCallingUriPermission(android.net.Uri uri, int i, java.lang.String string)
  void enforceCallingUriPermission(
    jni.JObject uri,
    int i,
    jni.JString string,
  ) {
    return _enforceCallingUriPermission(
            reference, uri.reference, i, string.reference)
        .check();
  }

  static final _enforceCallingOrSelfUriPermission = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "Context__enforceCallingOrSelfUriPermission")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceCallingOrSelfUriPermission(android.net.Uri uri, int i, java.lang.String string)
  void enforceCallingOrSelfUriPermission(
    jni.JObject uri,
    int i,
    jni.JString string,
  ) {
    return _enforceCallingOrSelfUriPermission(
            reference, uri.reference, i, string.reference)
        .check();
  }

  static final _enforceUriPermission1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__enforceUriPermission1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              int,
              int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceUriPermission(android.net.Uri uri, java.lang.String string, java.lang.String string1, int i, int i1, int i2, java.lang.String string2)
  void enforceUriPermission1(
    jni.JObject uri,
    jni.JString string,
    jni.JString string1,
    int i,
    int i1,
    int i2,
    jni.JString string2,
  ) {
    return _enforceUriPermission1(reference, uri.reference, string.reference,
            string1.reference, i, i1, i2, string2.reference)
        .check();
  }

  static final _revokeSelfPermissionOnKill = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__revokeSelfPermissionOnKill")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void revokeSelfPermissionOnKill(java.lang.String string)
  void revokeSelfPermissionOnKill(
    jni.JString string,
  ) {
    return _revokeSelfPermissionOnKill(reference, string.reference).check();
  }

  static final _revokeSelfPermissionsOnKill = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__revokeSelfPermissionsOnKill")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void revokeSelfPermissionsOnKill(java.util.Collection collection)
  void revokeSelfPermissionsOnKill(
    jni.JObject collection,
  ) {
    return _revokeSelfPermissionsOnKill(reference, collection.reference)
        .check();
  }

  static final _createPackageContext = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__createPackageContext")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.Context createPackageContext(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  Context createPackageContext(
    jni.JString string,
    int i,
  ) {
    return const $ContextType()
        .fromRef(_createPackageContext(reference, string.reference, i).object);
  }

  static final _createContextForSplit = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__createContextForSplit")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context createContextForSplit(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Context createContextForSplit(
    jni.JString string,
  ) {
    return const $ContextType()
        .fromRef(_createContextForSplit(reference, string.reference).object);
  }

  static final _createConfigurationContext = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__createConfigurationContext")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context createConfigurationContext(android.content.res.Configuration configuration)
  /// The returned object must be released after use, by calling the [release] method.
  Context createConfigurationContext(
    jni.JObject configuration,
  ) {
    return const $ContextType().fromRef(
        _createConfigurationContext(reference, configuration.reference).object);
  }

  static final _createDisplayContext = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__createDisplayContext")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context createDisplayContext(android.view.Display display)
  /// The returned object must be released after use, by calling the [release] method.
  Context createDisplayContext(
    jni.JObject display,
  ) {
    return const $ContextType()
        .fromRef(_createDisplayContext(reference, display.reference).object);
  }

  static final _createDeviceContext = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Context__createDeviceContext")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Context createDeviceContext(int i)
  /// The returned object must be released after use, by calling the [release] method.
  Context createDeviceContext(
    int i,
  ) {
    return const $ContextType()
        .fromRef(_createDeviceContext(reference, i).object);
  }

  static final _createWindowContext = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__createWindowContext")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context createWindowContext(int i, android.os.Bundle bundle)
  /// The returned object must be released after use, by calling the [release] method.
  Context createWindowContext(
    int i,
    jni.JObject bundle,
  ) {
    return const $ContextType()
        .fromRef(_createWindowContext(reference, i, bundle.reference).object);
  }

  static final _createWindowContext1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("Context__createWindowContext1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context createWindowContext(android.view.Display display, int i, android.os.Bundle bundle)
  /// The returned object must be released after use, by calling the [release] method.
  Context createWindowContext1(
    jni.JObject display,
    int i,
    jni.JObject bundle,
  ) {
    return const $ContextType().fromRef(
        _createWindowContext1(reference, display.reference, i, bundle.reference)
            .object);
  }

  static final _createContext = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__createContext")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context createContext(android.content.ContextParams contextParams)
  /// The returned object must be released after use, by calling the [release] method.
  Context createContext(
    jni.JObject contextParams,
  ) {
    return const $ContextType()
        .fromRef(_createContext(reference, contextParams.reference).object);
  }

  static final _createAttributionContext = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Context__createAttributionContext")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context createAttributionContext(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Context createAttributionContext(
    jni.JString string,
  ) {
    return const $ContextType()
        .fromRef(_createAttributionContext(reference, string.reference).object);
  }

  static final _createDeviceProtectedStorageContext = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__createDeviceProtectedStorageContext")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context createDeviceProtectedStorageContext()
  /// The returned object must be released after use, by calling the [release] method.
  Context createDeviceProtectedStorageContext() {
    return const $ContextType()
        .fromRef(_createDeviceProtectedStorageContext(reference).object);
  }

  static final _getDisplay = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getDisplay")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.Display getDisplay()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDisplay() {
    return const jni.JObjectType().fromRef(_getDisplay(reference).object);
  }

  static final _getDeviceId = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__getDeviceId")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getDeviceId()
  int getDeviceId() {
    return _getDeviceId(reference).integer;
  }

  static final _registerDeviceIdChangeListener = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__registerDeviceIdChangeListener")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void registerDeviceIdChangeListener(java.util.concurrent.Executor executor, java.util.function.IntConsumer intConsumer)
  void registerDeviceIdChangeListener(
    jni.JObject executor,
    jni.JObject intConsumer,
  ) {
    return _registerDeviceIdChangeListener(
            reference, executor.reference, intConsumer.reference)
        .check();
  }

  static final _unregisterDeviceIdChangeListener = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Context__unregisterDeviceIdChangeListener")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterDeviceIdChangeListener(java.util.function.IntConsumer intConsumer)
  void unregisterDeviceIdChangeListener(
    jni.JObject intConsumer,
  ) {
    return _unregisterDeviceIdChangeListener(reference, intConsumer.reference)
        .check();
  }

  static final _isRestricted = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__isRestricted")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isRestricted()
  bool isRestricted() {
    return _isRestricted(reference).boolean;
  }

  static final _isDeviceProtectedStorage = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__isDeviceProtectedStorage")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isDeviceProtectedStorage()
  bool isDeviceProtectedStorage() {
    return _isDeviceProtectedStorage(reference).boolean;
  }

  static final _isUiContext = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Context__isUiContext")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isUiContext()
  bool isUiContext() {
    return _isUiContext(reference).boolean;
  }
}

final class $ContextType extends jni.JObjType<Context> {
  const $ContextType();

  @override
  String get signature => r"Landroid/content/Context;";

  @override
  Context fromRef(jni.JObjectPtr ref) => Context.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($ContextType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($ContextType) && other is $ContextType;
  }
}

/// from: android.content.Intent$FilterComparison
class Intent_FilterComparison extends jni.JObject {
  @override
  late final jni.JObjType<Intent_FilterComparison> $type = type;

  Intent_FilterComparison.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $Intent_FilterComparisonType();
  static final _new0 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent_FilterComparison__new0")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent_FilterComparison(
    Intent intent,
  ) {
    return Intent_FilterComparison.fromRef(_new0(intent.reference).object);
  }

  static final _getIntent = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent_FilterComparison__getIntent")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getIntent()
  /// The returned object must be released after use, by calling the [release] method.
  Intent getIntent() {
    return const $IntentType().fromRef(_getIntent(reference).object);
  }

  static final _equals1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent_FilterComparison__equals1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object object)
  bool equals1(
    jni.JObject object,
  ) {
    return _equals1(reference, object.reference).boolean;
  }

  static final _hashCode1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent_FilterComparison__hashCode1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode1() {
    return _hashCode1(reference).integer;
  }
}

final class $Intent_FilterComparisonType
    extends jni.JObjType<Intent_FilterComparison> {
  const $Intent_FilterComparisonType();

  @override
  String get signature => r"Landroid/content/Intent$FilterComparison;";

  @override
  Intent_FilterComparison fromRef(jni.JObjectPtr ref) =>
      Intent_FilterComparison.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($Intent_FilterComparisonType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($Intent_FilterComparisonType) &&
        other is $Intent_FilterComparisonType;
  }
}

/// from: android.content.Intent$ShortcutIconResource
class Intent_ShortcutIconResource extends jni.JObject {
  @override
  late final jni.JObjType<Intent_ShortcutIconResource> $type = type;

  Intent_ShortcutIconResource.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $Intent_ShortcutIconResourceType();
  static final _get_CREATOR =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
              "get_Intent_ShortcutIconResource__CREATOR")
          .asFunction<jni.JniResult Function()>();

  /// from: static public final android.os.Parcelable$Creator CREATOR
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JObject get CREATOR =>
      const jni.JObjectType().fromRef(_get_CREATOR().object);

  static final _get_packageName = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                jni.JObjectPtr,
              )>>("get_Intent_ShortcutIconResource__packageName")
      .asFunction<
          jni.JniResult Function(
            jni.JObjectPtr,
          )>();

  static final _set_packageName = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      jni.JObjectPtr, ffi.Pointer<ffi.Void>)>>(
          "set_Intent_ShortcutIconResource__packageName")
      .asFunction<
          jni.JniResult Function(jni.JObjectPtr, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String packageName
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString get packageName =>
      const jni.JStringType().fromRef(_get_packageName(reference).object);

  /// from: public java.lang.String packageName
  /// The returned object must be released after use, by calling the [release] method.
  set packageName(jni.JString value) =>
      _set_packageName(reference, value.reference).check();

  static final _get_resourceName = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                jni.JObjectPtr,
              )>>("get_Intent_ShortcutIconResource__resourceName")
      .asFunction<
          jni.JniResult Function(
            jni.JObjectPtr,
          )>();

  static final _set_resourceName = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      jni.JObjectPtr, ffi.Pointer<ffi.Void>)>>(
          "set_Intent_ShortcutIconResource__resourceName")
      .asFunction<
          jni.JniResult Function(jni.JObjectPtr, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String resourceName
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString get resourceName =>
      const jni.JStringType().fromRef(_get_resourceName(reference).object);

  /// from: public java.lang.String resourceName
  /// The returned object must be released after use, by calling the [release] method.
  set resourceName(jni.JString value) =>
      _set_resourceName(reference, value.reference).check();

  static final _new0 = jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
          "Intent_ShortcutIconResource__new0")
      .asFunction<jni.JniResult Function()>();

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent_ShortcutIconResource() {
    return Intent_ShortcutIconResource.fromRef(_new0().object);
  }

  static final _fromContext = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Intent_ShortcutIconResource__fromContext")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.content.Intent$ShortcutIconResource fromContext(android.content.Context context, int i)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent_ShortcutIconResource fromContext(
    Context context,
    int i,
  ) {
    return const $Intent_ShortcutIconResourceType()
        .fromRef(_fromContext(context.reference, i).object);
  }

  static final _describeContents = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent_ShortcutIconResource__describeContents")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() {
    return _describeContents(reference).integer;
  }

  static final _writeToParcel = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Intent_ShortcutIconResource__writeToParcel")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int i)
  void writeToParcel(
    jni.JObject parcel,
    int i,
  ) {
    return _writeToParcel(reference, parcel.reference, i).check();
  }

  static final _toString1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent_ShortcutIconResource__toString1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toString1() {
    return const jni.JStringType().fromRef(_toString1(reference).object);
  }
}

final class $Intent_ShortcutIconResourceType
    extends jni.JObjType<Intent_ShortcutIconResource> {
  const $Intent_ShortcutIconResourceType();

  @override
  String get signature => r"Landroid/content/Intent$ShortcutIconResource;";

  @override
  Intent_ShortcutIconResource fromRef(jni.JObjectPtr ref) =>
      Intent_ShortcutIconResource.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($Intent_ShortcutIconResourceType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($Intent_ShortcutIconResourceType) &&
        other is $Intent_ShortcutIconResourceType;
  }
}

/// from: android.content.Intent
class Intent extends jni.JObject {
  @override
  late final jni.JObjType<Intent> $type = type;

  Intent.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $IntentType();

  /// from: static public final java.lang.String ACTION_AIRPLANE_MODE_CHANGED
  static const ACTION_AIRPLANE_MODE_CHANGED =
      r"""android.intent.action.AIRPLANE_MODE""";

  /// from: static public final java.lang.String ACTION_ALL_APPS
  static const ACTION_ALL_APPS = r"""android.intent.action.ALL_APPS""";

  /// from: static public final java.lang.String ACTION_ANSWER
  static const ACTION_ANSWER = r"""android.intent.action.ANSWER""";

  /// from: static public final java.lang.String ACTION_APPLICATION_LOCALE_CHANGED
  static const ACTION_APPLICATION_LOCALE_CHANGED =
      r"""android.intent.action.APPLICATION_LOCALE_CHANGED""";

  /// from: static public final java.lang.String ACTION_APPLICATION_PREFERENCES
  static const ACTION_APPLICATION_PREFERENCES =
      r"""android.intent.action.APPLICATION_PREFERENCES""";

  /// from: static public final java.lang.String ACTION_APPLICATION_RESTRICTIONS_CHANGED
  static const ACTION_APPLICATION_RESTRICTIONS_CHANGED =
      r"""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED""";

  /// from: static public final java.lang.String ACTION_APP_ERROR
  static const ACTION_APP_ERROR = r"""android.intent.action.APP_ERROR""";

  /// from: static public final java.lang.String ACTION_ASSIST
  static const ACTION_ASSIST = r"""android.intent.action.ASSIST""";

  /// from: static public final java.lang.String ACTION_ATTACH_DATA
  static const ACTION_ATTACH_DATA = r"""android.intent.action.ATTACH_DATA""";

  /// from: static public final java.lang.String ACTION_AUTO_REVOKE_PERMISSIONS
  static const ACTION_AUTO_REVOKE_PERMISSIONS =
      r"""android.intent.action.AUTO_REVOKE_PERMISSIONS""";

  /// from: static public final java.lang.String ACTION_BATTERY_CHANGED
  static const ACTION_BATTERY_CHANGED =
      r"""android.intent.action.BATTERY_CHANGED""";

  /// from: static public final java.lang.String ACTION_BATTERY_LOW
  static const ACTION_BATTERY_LOW = r"""android.intent.action.BATTERY_LOW""";

  /// from: static public final java.lang.String ACTION_BATTERY_OKAY
  static const ACTION_BATTERY_OKAY = r"""android.intent.action.BATTERY_OKAY""";

  /// from: static public final java.lang.String ACTION_BOOT_COMPLETED
  static const ACTION_BOOT_COMPLETED =
      r"""android.intent.action.BOOT_COMPLETED""";

  /// from: static public final java.lang.String ACTION_BUG_REPORT
  static const ACTION_BUG_REPORT = r"""android.intent.action.BUG_REPORT""";

  /// from: static public final java.lang.String ACTION_CALL
  static const ACTION_CALL = r"""android.intent.action.CALL""";

  /// from: static public final java.lang.String ACTION_CALL_BUTTON
  static const ACTION_CALL_BUTTON = r"""android.intent.action.CALL_BUTTON""";

  /// from: static public final java.lang.String ACTION_CAMERA_BUTTON
  static const ACTION_CAMERA_BUTTON =
      r"""android.intent.action.CAMERA_BUTTON""";

  /// from: static public final java.lang.String ACTION_CARRIER_SETUP
  static const ACTION_CARRIER_SETUP =
      r"""android.intent.action.CARRIER_SETUP""";

  /// from: static public final java.lang.String ACTION_CHOOSER
  static const ACTION_CHOOSER = r"""android.intent.action.CHOOSER""";

  /// from: static public final java.lang.String ACTION_CLOSE_SYSTEM_DIALOGS
  static const ACTION_CLOSE_SYSTEM_DIALOGS =
      r"""android.intent.action.CLOSE_SYSTEM_DIALOGS""";

  /// from: static public final java.lang.String ACTION_CONFIGURATION_CHANGED
  static const ACTION_CONFIGURATION_CHANGED =
      r"""android.intent.action.CONFIGURATION_CHANGED""";

  /// from: static public final java.lang.String ACTION_CREATE_DOCUMENT
  static const ACTION_CREATE_DOCUMENT =
      r"""android.intent.action.CREATE_DOCUMENT""";

  /// from: static public final java.lang.String ACTION_CREATE_NOTE
  static const ACTION_CREATE_NOTE = r"""android.intent.action.CREATE_NOTE""";

  /// from: static public final java.lang.String ACTION_CREATE_REMINDER
  static const ACTION_CREATE_REMINDER =
      r"""android.intent.action.CREATE_REMINDER""";

  /// from: static public final java.lang.String ACTION_CREATE_SHORTCUT
  static const ACTION_CREATE_SHORTCUT =
      r"""android.intent.action.CREATE_SHORTCUT""";

  /// from: static public final java.lang.String ACTION_DATE_CHANGED
  static const ACTION_DATE_CHANGED = r"""android.intent.action.DATE_CHANGED""";

  /// from: static public final java.lang.String ACTION_DEFAULT
  static const ACTION_DEFAULT = r"""android.intent.action.VIEW""";

  /// from: static public final java.lang.String ACTION_DEFINE
  static const ACTION_DEFINE = r"""android.intent.action.DEFINE""";

  /// from: static public final java.lang.String ACTION_DELETE
  static const ACTION_DELETE = r"""android.intent.action.DELETE""";

  /// from: static public final java.lang.String ACTION_DEVICE_STORAGE_LOW
  static const ACTION_DEVICE_STORAGE_LOW =
      r"""android.intent.action.DEVICE_STORAGE_LOW""";

  /// from: static public final java.lang.String ACTION_DEVICE_STORAGE_OK
  static const ACTION_DEVICE_STORAGE_OK =
      r"""android.intent.action.DEVICE_STORAGE_OK""";

  /// from: static public final java.lang.String ACTION_DIAL
  static const ACTION_DIAL = r"""android.intent.action.DIAL""";

  /// from: static public final java.lang.String ACTION_DOCK_EVENT
  static const ACTION_DOCK_EVENT = r"""android.intent.action.DOCK_EVENT""";

  /// from: static public final java.lang.String ACTION_DREAMING_STARTED
  static const ACTION_DREAMING_STARTED =
      r"""android.intent.action.DREAMING_STARTED""";

  /// from: static public final java.lang.String ACTION_DREAMING_STOPPED
  static const ACTION_DREAMING_STOPPED =
      r"""android.intent.action.DREAMING_STOPPED""";

  /// from: static public final java.lang.String ACTION_EDIT
  static const ACTION_EDIT = r"""android.intent.action.EDIT""";

  /// from: static public final java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
  static const ACTION_EXTERNAL_APPLICATIONS_AVAILABLE =
      r"""android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE""";

  /// from: static public final java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
  static const ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE =
      r"""android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE""";

  /// from: static public final java.lang.String ACTION_FACTORY_TEST
  static const ACTION_FACTORY_TEST = r"""android.intent.action.FACTORY_TEST""";

  /// from: static public final java.lang.String ACTION_GET_CONTENT
  static const ACTION_GET_CONTENT = r"""android.intent.action.GET_CONTENT""";

  /// from: static public final java.lang.String ACTION_GET_RESTRICTION_ENTRIES
  static const ACTION_GET_RESTRICTION_ENTRIES =
      r"""android.intent.action.GET_RESTRICTION_ENTRIES""";

  /// from: static public final java.lang.String ACTION_GTALK_SERVICE_CONNECTED
  static const ACTION_GTALK_SERVICE_CONNECTED =
      r"""android.intent.action.GTALK_CONNECTED""";

  /// from: static public final java.lang.String ACTION_GTALK_SERVICE_DISCONNECTED
  static const ACTION_GTALK_SERVICE_DISCONNECTED =
      r"""android.intent.action.GTALK_DISCONNECTED""";

  /// from: static public final java.lang.String ACTION_HEADSET_PLUG
  static const ACTION_HEADSET_PLUG = r"""android.intent.action.HEADSET_PLUG""";

  /// from: static public final java.lang.String ACTION_INPUT_METHOD_CHANGED
  static const ACTION_INPUT_METHOD_CHANGED =
      r"""android.intent.action.INPUT_METHOD_CHANGED""";

  /// from: static public final java.lang.String ACTION_INSERT
  static const ACTION_INSERT = r"""android.intent.action.INSERT""";

  /// from: static public final java.lang.String ACTION_INSERT_OR_EDIT
  static const ACTION_INSERT_OR_EDIT =
      r"""android.intent.action.INSERT_OR_EDIT""";

  /// from: static public final java.lang.String ACTION_INSTALL_FAILURE
  static const ACTION_INSTALL_FAILURE =
      r"""android.intent.action.INSTALL_FAILURE""";

  /// from: static public final java.lang.String ACTION_INSTALL_PACKAGE
  static const ACTION_INSTALL_PACKAGE =
      r"""android.intent.action.INSTALL_PACKAGE""";

  /// from: static public final java.lang.String ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE
  static const ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE =
      r"""android.intent.action.LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE""";

  /// from: static public final java.lang.String ACTION_LOCALE_CHANGED
  static const ACTION_LOCALE_CHANGED =
      r"""android.intent.action.LOCALE_CHANGED""";

  /// from: static public final java.lang.String ACTION_LOCKED_BOOT_COMPLETED
  static const ACTION_LOCKED_BOOT_COMPLETED =
      r"""android.intent.action.LOCKED_BOOT_COMPLETED""";

  /// from: static public final java.lang.String ACTION_MAIN
  static const ACTION_MAIN = r"""android.intent.action.MAIN""";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_ADDED
  static const ACTION_MANAGED_PROFILE_ADDED =
      r"""android.intent.action.MANAGED_PROFILE_ADDED""";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_AVAILABLE
  static const ACTION_MANAGED_PROFILE_AVAILABLE =
      r"""android.intent.action.MANAGED_PROFILE_AVAILABLE""";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_REMOVED
  static const ACTION_MANAGED_PROFILE_REMOVED =
      r"""android.intent.action.MANAGED_PROFILE_REMOVED""";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_UNAVAILABLE
  static const ACTION_MANAGED_PROFILE_UNAVAILABLE =
      r"""android.intent.action.MANAGED_PROFILE_UNAVAILABLE""";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_UNLOCKED
  static const ACTION_MANAGED_PROFILE_UNLOCKED =
      r"""android.intent.action.MANAGED_PROFILE_UNLOCKED""";

  /// from: static public final java.lang.String ACTION_MANAGE_NETWORK_USAGE
  static const ACTION_MANAGE_NETWORK_USAGE =
      r"""android.intent.action.MANAGE_NETWORK_USAGE""";

  /// from: static public final java.lang.String ACTION_MANAGE_PACKAGE_STORAGE
  static const ACTION_MANAGE_PACKAGE_STORAGE =
      r"""android.intent.action.MANAGE_PACKAGE_STORAGE""";

  /// from: static public final java.lang.String ACTION_MANAGE_UNUSED_APPS
  static const ACTION_MANAGE_UNUSED_APPS =
      r"""android.intent.action.MANAGE_UNUSED_APPS""";

  /// from: static public final java.lang.String ACTION_MEDIA_BAD_REMOVAL
  static const ACTION_MEDIA_BAD_REMOVAL =
      r"""android.intent.action.MEDIA_BAD_REMOVAL""";

  /// from: static public final java.lang.String ACTION_MEDIA_BUTTON
  static const ACTION_MEDIA_BUTTON = r"""android.intent.action.MEDIA_BUTTON""";

  /// from: static public final java.lang.String ACTION_MEDIA_CHECKING
  static const ACTION_MEDIA_CHECKING =
      r"""android.intent.action.MEDIA_CHECKING""";

  /// from: static public final java.lang.String ACTION_MEDIA_EJECT
  static const ACTION_MEDIA_EJECT = r"""android.intent.action.MEDIA_EJECT""";

  /// from: static public final java.lang.String ACTION_MEDIA_MOUNTED
  static const ACTION_MEDIA_MOUNTED =
      r"""android.intent.action.MEDIA_MOUNTED""";

  /// from: static public final java.lang.String ACTION_MEDIA_NOFS
  static const ACTION_MEDIA_NOFS = r"""android.intent.action.MEDIA_NOFS""";

  /// from: static public final java.lang.String ACTION_MEDIA_REMOVED
  static const ACTION_MEDIA_REMOVED =
      r"""android.intent.action.MEDIA_REMOVED""";

  /// from: static public final java.lang.String ACTION_MEDIA_SCANNER_FINISHED
  static const ACTION_MEDIA_SCANNER_FINISHED =
      r"""android.intent.action.MEDIA_SCANNER_FINISHED""";

  /// from: static public final java.lang.String ACTION_MEDIA_SCANNER_SCAN_FILE
  static const ACTION_MEDIA_SCANNER_SCAN_FILE =
      r"""android.intent.action.MEDIA_SCANNER_SCAN_FILE""";

  /// from: static public final java.lang.String ACTION_MEDIA_SCANNER_STARTED
  static const ACTION_MEDIA_SCANNER_STARTED =
      r"""android.intent.action.MEDIA_SCANNER_STARTED""";

  /// from: static public final java.lang.String ACTION_MEDIA_SHARED
  static const ACTION_MEDIA_SHARED = r"""android.intent.action.MEDIA_SHARED""";

  /// from: static public final java.lang.String ACTION_MEDIA_UNMOUNTABLE
  static const ACTION_MEDIA_UNMOUNTABLE =
      r"""android.intent.action.MEDIA_UNMOUNTABLE""";

  /// from: static public final java.lang.String ACTION_MEDIA_UNMOUNTED
  static const ACTION_MEDIA_UNMOUNTED =
      r"""android.intent.action.MEDIA_UNMOUNTED""";

  /// from: static public final java.lang.String ACTION_MY_PACKAGE_REPLACED
  static const ACTION_MY_PACKAGE_REPLACED =
      r"""android.intent.action.MY_PACKAGE_REPLACED""";

  /// from: static public final java.lang.String ACTION_MY_PACKAGE_SUSPENDED
  static const ACTION_MY_PACKAGE_SUSPENDED =
      r"""android.intent.action.MY_PACKAGE_SUSPENDED""";

  /// from: static public final java.lang.String ACTION_MY_PACKAGE_UNSUSPENDED
  static const ACTION_MY_PACKAGE_UNSUSPENDED =
      r"""android.intent.action.MY_PACKAGE_UNSUSPENDED""";

  /// from: static public final java.lang.String ACTION_NEW_OUTGOING_CALL
  static const ACTION_NEW_OUTGOING_CALL =
      r"""android.intent.action.NEW_OUTGOING_CALL""";

  /// from: static public final java.lang.String ACTION_OPEN_DOCUMENT
  static const ACTION_OPEN_DOCUMENT =
      r"""android.intent.action.OPEN_DOCUMENT""";

  /// from: static public final java.lang.String ACTION_OPEN_DOCUMENT_TREE
  static const ACTION_OPEN_DOCUMENT_TREE =
      r"""android.intent.action.OPEN_DOCUMENT_TREE""";

  /// from: static public final java.lang.String ACTION_PACKAGES_SUSPENDED
  static const ACTION_PACKAGES_SUSPENDED =
      r"""android.intent.action.PACKAGES_SUSPENDED""";

  /// from: static public final java.lang.String ACTION_PACKAGES_UNSUSPENDED
  static const ACTION_PACKAGES_UNSUSPENDED =
      r"""android.intent.action.PACKAGES_UNSUSPENDED""";

  /// from: static public final java.lang.String ACTION_PACKAGE_ADDED
  static const ACTION_PACKAGE_ADDED =
      r"""android.intent.action.PACKAGE_ADDED""";

  /// from: static public final java.lang.String ACTION_PACKAGE_CHANGED
  static const ACTION_PACKAGE_CHANGED =
      r"""android.intent.action.PACKAGE_CHANGED""";

  /// from: static public final java.lang.String ACTION_PACKAGE_DATA_CLEARED
  static const ACTION_PACKAGE_DATA_CLEARED =
      r"""android.intent.action.PACKAGE_DATA_CLEARED""";

  /// from: static public final java.lang.String ACTION_PACKAGE_FIRST_LAUNCH
  static const ACTION_PACKAGE_FIRST_LAUNCH =
      r"""android.intent.action.PACKAGE_FIRST_LAUNCH""";

  /// from: static public final java.lang.String ACTION_PACKAGE_FULLY_REMOVED
  static const ACTION_PACKAGE_FULLY_REMOVED =
      r"""android.intent.action.PACKAGE_FULLY_REMOVED""";

  /// from: static public final java.lang.String ACTION_PACKAGE_INSTALL
  static const ACTION_PACKAGE_INSTALL =
      r"""android.intent.action.PACKAGE_INSTALL""";

  /// from: static public final java.lang.String ACTION_PACKAGE_NEEDS_VERIFICATION
  static const ACTION_PACKAGE_NEEDS_VERIFICATION =
      r"""android.intent.action.PACKAGE_NEEDS_VERIFICATION""";

  /// from: static public final java.lang.String ACTION_PACKAGE_REMOVED
  static const ACTION_PACKAGE_REMOVED =
      r"""android.intent.action.PACKAGE_REMOVED""";

  /// from: static public final java.lang.String ACTION_PACKAGE_REPLACED
  static const ACTION_PACKAGE_REPLACED =
      r"""android.intent.action.PACKAGE_REPLACED""";

  /// from: static public final java.lang.String ACTION_PACKAGE_RESTARTED
  static const ACTION_PACKAGE_RESTARTED =
      r"""android.intent.action.PACKAGE_RESTARTED""";

  /// from: static public final java.lang.String ACTION_PACKAGE_VERIFIED
  static const ACTION_PACKAGE_VERIFIED =
      r"""android.intent.action.PACKAGE_VERIFIED""";

  /// from: static public final java.lang.String ACTION_PASTE
  static const ACTION_PASTE = r"""android.intent.action.PASTE""";

  /// from: static public final java.lang.String ACTION_PICK
  static const ACTION_PICK = r"""android.intent.action.PICK""";

  /// from: static public final java.lang.String ACTION_PICK_ACTIVITY
  static const ACTION_PICK_ACTIVITY =
      r"""android.intent.action.PICK_ACTIVITY""";

  /// from: static public final java.lang.String ACTION_POWER_CONNECTED
  static const ACTION_POWER_CONNECTED =
      r"""android.intent.action.ACTION_POWER_CONNECTED""";

  /// from: static public final java.lang.String ACTION_POWER_DISCONNECTED
  static const ACTION_POWER_DISCONNECTED =
      r"""android.intent.action.ACTION_POWER_DISCONNECTED""";

  /// from: static public final java.lang.String ACTION_POWER_USAGE_SUMMARY
  static const ACTION_POWER_USAGE_SUMMARY =
      r"""android.intent.action.POWER_USAGE_SUMMARY""";

  /// from: static public final java.lang.String ACTION_PROCESS_TEXT
  static const ACTION_PROCESS_TEXT = r"""android.intent.action.PROCESS_TEXT""";

  /// from: static public final java.lang.String ACTION_PROFILE_ACCESSIBLE
  static const ACTION_PROFILE_ACCESSIBLE =
      r"""android.intent.action.PROFILE_ACCESSIBLE""";

  /// from: static public final java.lang.String ACTION_PROFILE_ADDED
  static const ACTION_PROFILE_ADDED =
      r"""android.intent.action.PROFILE_ADDED""";

  /// from: static public final java.lang.String ACTION_PROFILE_INACCESSIBLE
  static const ACTION_PROFILE_INACCESSIBLE =
      r"""android.intent.action.PROFILE_INACCESSIBLE""";

  /// from: static public final java.lang.String ACTION_PROFILE_REMOVED
  static const ACTION_PROFILE_REMOVED =
      r"""android.intent.action.PROFILE_REMOVED""";

  /// from: static public final java.lang.String ACTION_PROVIDER_CHANGED
  static const ACTION_PROVIDER_CHANGED =
      r"""android.intent.action.PROVIDER_CHANGED""";

  /// from: static public final java.lang.String ACTION_QUICK_CLOCK
  static const ACTION_QUICK_CLOCK = r"""android.intent.action.QUICK_CLOCK""";

  /// from: static public final java.lang.String ACTION_QUICK_VIEW
  static const ACTION_QUICK_VIEW = r"""android.intent.action.QUICK_VIEW""";

  /// from: static public final java.lang.String ACTION_REBOOT
  static const ACTION_REBOOT = r"""android.intent.action.REBOOT""";

  /// from: static public final java.lang.String ACTION_RUN
  static const ACTION_RUN = r"""android.intent.action.RUN""";

  /// from: static public final java.lang.String ACTION_SAFETY_CENTER
  static const ACTION_SAFETY_CENTER =
      r"""android.intent.action.SAFETY_CENTER""";

  /// from: static public final java.lang.String ACTION_SCREEN_OFF
  static const ACTION_SCREEN_OFF = r"""android.intent.action.SCREEN_OFF""";

  /// from: static public final java.lang.String ACTION_SCREEN_ON
  static const ACTION_SCREEN_ON = r"""android.intent.action.SCREEN_ON""";

  /// from: static public final java.lang.String ACTION_SEARCH
  static const ACTION_SEARCH = r"""android.intent.action.SEARCH""";

  /// from: static public final java.lang.String ACTION_SEARCH_LONG_PRESS
  static const ACTION_SEARCH_LONG_PRESS =
      r"""android.intent.action.SEARCH_LONG_PRESS""";

  /// from: static public final java.lang.String ACTION_SEND
  static const ACTION_SEND = r"""android.intent.action.SEND""";

  /// from: static public final java.lang.String ACTION_SENDTO
  static const ACTION_SENDTO = r"""android.intent.action.SENDTO""";

  /// from: static public final java.lang.String ACTION_SEND_MULTIPLE
  static const ACTION_SEND_MULTIPLE =
      r"""android.intent.action.SEND_MULTIPLE""";

  /// from: static public final java.lang.String ACTION_SET_WALLPAPER
  static const ACTION_SET_WALLPAPER =
      r"""android.intent.action.SET_WALLPAPER""";

  /// from: static public final java.lang.String ACTION_SHOW_APP_INFO
  static const ACTION_SHOW_APP_INFO =
      r"""android.intent.action.SHOW_APP_INFO""";

  /// from: static public final java.lang.String ACTION_SHOW_WORK_APPS
  static const ACTION_SHOW_WORK_APPS =
      r"""android.intent.action.SHOW_WORK_APPS""";

  /// from: static public final java.lang.String ACTION_SHUTDOWN
  static const ACTION_SHUTDOWN = r"""android.intent.action.ACTION_SHUTDOWN""";

  /// from: static public final java.lang.String ACTION_SYNC
  static const ACTION_SYNC = r"""android.intent.action.SYNC""";

  /// from: static public final java.lang.String ACTION_SYSTEM_TUTORIAL
  static const ACTION_SYSTEM_TUTORIAL =
      r"""android.intent.action.SYSTEM_TUTORIAL""";

  /// from: static public final java.lang.String ACTION_TIMEZONE_CHANGED
  static const ACTION_TIMEZONE_CHANGED =
      r"""android.intent.action.TIMEZONE_CHANGED""";

  /// from: static public final java.lang.String ACTION_TIME_CHANGED
  static const ACTION_TIME_CHANGED = r"""android.intent.action.TIME_SET""";

  /// from: static public final java.lang.String ACTION_TIME_TICK
  static const ACTION_TIME_TICK = r"""android.intent.action.TIME_TICK""";

  /// from: static public final java.lang.String ACTION_TRANSLATE
  static const ACTION_TRANSLATE = r"""android.intent.action.TRANSLATE""";

  /// from: static public final java.lang.String ACTION_UID_REMOVED
  static const ACTION_UID_REMOVED = r"""android.intent.action.UID_REMOVED""";

  /// from: static public final java.lang.String ACTION_UMS_CONNECTED
  static const ACTION_UMS_CONNECTED =
      r"""android.intent.action.UMS_CONNECTED""";

  /// from: static public final java.lang.String ACTION_UMS_DISCONNECTED
  static const ACTION_UMS_DISCONNECTED =
      r"""android.intent.action.UMS_DISCONNECTED""";

  /// from: static public final java.lang.String ACTION_UNINSTALL_PACKAGE
  static const ACTION_UNINSTALL_PACKAGE =
      r"""android.intent.action.UNINSTALL_PACKAGE""";

  /// from: static public final java.lang.String ACTION_USER_BACKGROUND
  static const ACTION_USER_BACKGROUND =
      r"""android.intent.action.USER_BACKGROUND""";

  /// from: static public final java.lang.String ACTION_USER_FOREGROUND
  static const ACTION_USER_FOREGROUND =
      r"""android.intent.action.USER_FOREGROUND""";

  /// from: static public final java.lang.String ACTION_USER_INITIALIZE
  static const ACTION_USER_INITIALIZE =
      r"""android.intent.action.USER_INITIALIZE""";

  /// from: static public final java.lang.String ACTION_USER_PRESENT
  static const ACTION_USER_PRESENT = r"""android.intent.action.USER_PRESENT""";

  /// from: static public final java.lang.String ACTION_USER_UNLOCKED
  static const ACTION_USER_UNLOCKED =
      r"""android.intent.action.USER_UNLOCKED""";

  /// from: static public final java.lang.String ACTION_VIEW
  static const ACTION_VIEW = r"""android.intent.action.VIEW""";

  /// from: static public final java.lang.String ACTION_VIEW_LOCUS
  static const ACTION_VIEW_LOCUS = r"""android.intent.action.VIEW_LOCUS""";

  /// from: static public final java.lang.String ACTION_VIEW_PERMISSION_USAGE
  static const ACTION_VIEW_PERMISSION_USAGE =
      r"""android.intent.action.VIEW_PERMISSION_USAGE""";

  /// from: static public final java.lang.String ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD
  static const ACTION_VIEW_PERMISSION_USAGE_FOR_PERIOD =
      r"""android.intent.action.VIEW_PERMISSION_USAGE_FOR_PERIOD""";

  /// from: static public final java.lang.String ACTION_VOICE_COMMAND
  static const ACTION_VOICE_COMMAND =
      r"""android.intent.action.VOICE_COMMAND""";

  /// from: static public final java.lang.String ACTION_WALLPAPER_CHANGED
  static const ACTION_WALLPAPER_CHANGED =
      r"""android.intent.action.WALLPAPER_CHANGED""";

  /// from: static public final java.lang.String ACTION_WEB_SEARCH
  static const ACTION_WEB_SEARCH = r"""android.intent.action.WEB_SEARCH""";

  /// from: static public final int CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMIN
  static const CAPTURE_CONTENT_FOR_NOTE_BLOCKED_BY_ADMIN = 4;

  /// from: static public final int CAPTURE_CONTENT_FOR_NOTE_FAILED
  static const CAPTURE_CONTENT_FOR_NOTE_FAILED = 1;

  /// from: static public final int CAPTURE_CONTENT_FOR_NOTE_SUCCESS
  static const CAPTURE_CONTENT_FOR_NOTE_SUCCESS = 0;

  /// from: static public final int CAPTURE_CONTENT_FOR_NOTE_USER_CANCELED
  static const CAPTURE_CONTENT_FOR_NOTE_USER_CANCELED = 2;

  /// from: static public final int CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTED
  static const CAPTURE_CONTENT_FOR_NOTE_WINDOW_MODE_UNSUPPORTED = 3;

  /// from: static public final java.lang.String CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET
  static const CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET =
      r"""android.intent.category.ACCESSIBILITY_SHORTCUT_TARGET""";

  /// from: static public final java.lang.String CATEGORY_ALTERNATIVE
  static const CATEGORY_ALTERNATIVE =
      r"""android.intent.category.ALTERNATIVE""";

  /// from: static public final java.lang.String CATEGORY_APP_BROWSER
  static const CATEGORY_APP_BROWSER =
      r"""android.intent.category.APP_BROWSER""";

  /// from: static public final java.lang.String CATEGORY_APP_CALCULATOR
  static const CATEGORY_APP_CALCULATOR =
      r"""android.intent.category.APP_CALCULATOR""";

  /// from: static public final java.lang.String CATEGORY_APP_CALENDAR
  static const CATEGORY_APP_CALENDAR =
      r"""android.intent.category.APP_CALENDAR""";

  /// from: static public final java.lang.String CATEGORY_APP_CONTACTS
  static const CATEGORY_APP_CONTACTS =
      r"""android.intent.category.APP_CONTACTS""";

  /// from: static public final java.lang.String CATEGORY_APP_EMAIL
  static const CATEGORY_APP_EMAIL = r"""android.intent.category.APP_EMAIL""";

  /// from: static public final java.lang.String CATEGORY_APP_FILES
  static const CATEGORY_APP_FILES = r"""android.intent.category.APP_FILES""";

  /// from: static public final java.lang.String CATEGORY_APP_FITNESS
  static const CATEGORY_APP_FITNESS =
      r"""android.intent.category.APP_FITNESS""";

  /// from: static public final java.lang.String CATEGORY_APP_GALLERY
  static const CATEGORY_APP_GALLERY =
      r"""android.intent.category.APP_GALLERY""";

  /// from: static public final java.lang.String CATEGORY_APP_MAPS
  static const CATEGORY_APP_MAPS = r"""android.intent.category.APP_MAPS""";

  /// from: static public final java.lang.String CATEGORY_APP_MARKET
  static const CATEGORY_APP_MARKET = r"""android.intent.category.APP_MARKET""";

  /// from: static public final java.lang.String CATEGORY_APP_MESSAGING
  static const CATEGORY_APP_MESSAGING =
      r"""android.intent.category.APP_MESSAGING""";

  /// from: static public final java.lang.String CATEGORY_APP_MUSIC
  static const CATEGORY_APP_MUSIC = r"""android.intent.category.APP_MUSIC""";

  /// from: static public final java.lang.String CATEGORY_APP_WEATHER
  static const CATEGORY_APP_WEATHER =
      r"""android.intent.category.APP_WEATHER""";

  /// from: static public final java.lang.String CATEGORY_BROWSABLE
  static const CATEGORY_BROWSABLE = r"""android.intent.category.BROWSABLE""";

  /// from: static public final java.lang.String CATEGORY_CAR_DOCK
  static const CATEGORY_CAR_DOCK = r"""android.intent.category.CAR_DOCK""";

  /// from: static public final java.lang.String CATEGORY_CAR_MODE
  static const CATEGORY_CAR_MODE = r"""android.intent.category.CAR_MODE""";

  /// from: static public final java.lang.String CATEGORY_DEFAULT
  static const CATEGORY_DEFAULT = r"""android.intent.category.DEFAULT""";

  /// from: static public final java.lang.String CATEGORY_DESK_DOCK
  static const CATEGORY_DESK_DOCK = r"""android.intent.category.DESK_DOCK""";

  /// from: static public final java.lang.String CATEGORY_DEVELOPMENT_PREFERENCE
  static const CATEGORY_DEVELOPMENT_PREFERENCE =
      r"""android.intent.category.DEVELOPMENT_PREFERENCE""";

  /// from: static public final java.lang.String CATEGORY_EMBED
  static const CATEGORY_EMBED = r"""android.intent.category.EMBED""";

  /// from: static public final java.lang.String CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST
  static const CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST =
      r"""android.intent.category.FRAMEWORK_INSTRUMENTATION_TEST""";

  /// from: static public final java.lang.String CATEGORY_HE_DESK_DOCK
  static const CATEGORY_HE_DESK_DOCK =
      r"""android.intent.category.HE_DESK_DOCK""";

  /// from: static public final java.lang.String CATEGORY_HOME
  static const CATEGORY_HOME = r"""android.intent.category.HOME""";

  /// from: static public final java.lang.String CATEGORY_INFO
  static const CATEGORY_INFO = r"""android.intent.category.INFO""";

  /// from: static public final java.lang.String CATEGORY_LAUNCHER
  static const CATEGORY_LAUNCHER = r"""android.intent.category.LAUNCHER""";

  /// from: static public final java.lang.String CATEGORY_LEANBACK_LAUNCHER
  static const CATEGORY_LEANBACK_LAUNCHER =
      r"""android.intent.category.LEANBACK_LAUNCHER""";

  /// from: static public final java.lang.String CATEGORY_LE_DESK_DOCK
  static const CATEGORY_LE_DESK_DOCK =
      r"""android.intent.category.LE_DESK_DOCK""";

  /// from: static public final java.lang.String CATEGORY_MONKEY
  static const CATEGORY_MONKEY = r"""android.intent.category.MONKEY""";

  /// from: static public final java.lang.String CATEGORY_OPENABLE
  static const CATEGORY_OPENABLE = r"""android.intent.category.OPENABLE""";

  /// from: static public final java.lang.String CATEGORY_PREFERENCE
  static const CATEGORY_PREFERENCE = r"""android.intent.category.PREFERENCE""";

  /// from: static public final java.lang.String CATEGORY_SAMPLE_CODE
  static const CATEGORY_SAMPLE_CODE =
      r"""android.intent.category.SAMPLE_CODE""";

  /// from: static public final java.lang.String CATEGORY_SECONDARY_HOME
  static const CATEGORY_SECONDARY_HOME =
      r"""android.intent.category.SECONDARY_HOME""";

  /// from: static public final java.lang.String CATEGORY_SELECTED_ALTERNATIVE
  static const CATEGORY_SELECTED_ALTERNATIVE =
      r"""android.intent.category.SELECTED_ALTERNATIVE""";

  /// from: static public final java.lang.String CATEGORY_TAB
  static const CATEGORY_TAB = r"""android.intent.category.TAB""";

  /// from: static public final java.lang.String CATEGORY_TEST
  static const CATEGORY_TEST = r"""android.intent.category.TEST""";

  /// from: static public final java.lang.String CATEGORY_TYPED_OPENABLE
  static const CATEGORY_TYPED_OPENABLE =
      r"""android.intent.category.TYPED_OPENABLE""";

  /// from: static public final java.lang.String CATEGORY_UNIT_TEST
  static const CATEGORY_UNIT_TEST = r"""android.intent.category.UNIT_TEST""";

  /// from: static public final java.lang.String CATEGORY_VOICE
  static const CATEGORY_VOICE = r"""android.intent.category.VOICE""";

  /// from: static public final java.lang.String CATEGORY_VR_HOME
  static const CATEGORY_VR_HOME = r"""android.intent.category.VR_HOME""";

  static final _get_CREATOR =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
              "get_Intent__CREATOR")
          .asFunction<jni.JniResult Function()>();

  /// from: static public final android.os.Parcelable$Creator CREATOR
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JObject get CREATOR =>
      const jni.JObjectType().fromRef(_get_CREATOR().object);

  /// from: static public final java.lang.String EXTRA_ALARM_COUNT
  static const EXTRA_ALARM_COUNT = r"""android.intent.extra.ALARM_COUNT""";

  /// from: static public final java.lang.String EXTRA_ALLOW_MULTIPLE
  static const EXTRA_ALLOW_MULTIPLE =
      r"""android.intent.extra.ALLOW_MULTIPLE""";

  /// from: static public final java.lang.String EXTRA_ALLOW_REPLACE
  static const EXTRA_ALLOW_REPLACE = r"""android.intent.extra.ALLOW_REPLACE""";

  /// from: static public final java.lang.String EXTRA_ALTERNATE_INTENTS
  static const EXTRA_ALTERNATE_INTENTS =
      r"""android.intent.extra.ALTERNATE_INTENTS""";

  /// from: static public final java.lang.String EXTRA_ASSIST_CONTEXT
  static const EXTRA_ASSIST_CONTEXT =
      r"""android.intent.extra.ASSIST_CONTEXT""";

  /// from: static public final java.lang.String EXTRA_ASSIST_INPUT_DEVICE_ID
  static const EXTRA_ASSIST_INPUT_DEVICE_ID =
      r"""android.intent.extra.ASSIST_INPUT_DEVICE_ID""";

  /// from: static public final java.lang.String EXTRA_ASSIST_INPUT_HINT_KEYBOARD
  static const EXTRA_ASSIST_INPUT_HINT_KEYBOARD =
      r"""android.intent.extra.ASSIST_INPUT_HINT_KEYBOARD""";

  /// from: static public final java.lang.String EXTRA_ASSIST_PACKAGE
  static const EXTRA_ASSIST_PACKAGE =
      r"""android.intent.extra.ASSIST_PACKAGE""";

  /// from: static public final java.lang.String EXTRA_ASSIST_UID
  static const EXTRA_ASSIST_UID = r"""android.intent.extra.ASSIST_UID""";

  /// from: static public final java.lang.String EXTRA_ATTRIBUTION_TAGS
  static const EXTRA_ATTRIBUTION_TAGS =
      r"""android.intent.extra.ATTRIBUTION_TAGS""";

  /// from: static public final java.lang.String EXTRA_AUTO_LAUNCH_SINGLE_CHOICE
  static const EXTRA_AUTO_LAUNCH_SINGLE_CHOICE =
      r"""android.intent.extra.AUTO_LAUNCH_SINGLE_CHOICE""";

  /// from: static public final java.lang.String EXTRA_BCC
  static const EXTRA_BCC = r"""android.intent.extra.BCC""";

  /// from: static public final java.lang.String EXTRA_BUG_REPORT
  static const EXTRA_BUG_REPORT = r"""android.intent.extra.BUG_REPORT""";

  /// from: static public final java.lang.String EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE
  static const EXTRA_CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE =
      r"""android.intent.extra.CAPTURE_CONTENT_FOR_NOTE_STATUS_CODE""";

  /// from: static public final java.lang.String EXTRA_CC
  static const EXTRA_CC = r"""android.intent.extra.CC""";

  /// from: static public final java.lang.String EXTRA_CHANGED_COMPONENT_NAME
  static const EXTRA_CHANGED_COMPONENT_NAME =
      r"""android.intent.extra.changed_component_name""";

  /// from: static public final java.lang.String EXTRA_CHANGED_COMPONENT_NAME_LIST
  static const EXTRA_CHANGED_COMPONENT_NAME_LIST =
      r"""android.intent.extra.changed_component_name_list""";

  /// from: static public final java.lang.String EXTRA_CHANGED_PACKAGE_LIST
  static const EXTRA_CHANGED_PACKAGE_LIST =
      r"""android.intent.extra.changed_package_list""";

  /// from: static public final java.lang.String EXTRA_CHANGED_UID_LIST
  static const EXTRA_CHANGED_UID_LIST =
      r"""android.intent.extra.changed_uid_list""";

  /// from: static public final java.lang.String EXTRA_CHOOSER_CUSTOM_ACTIONS
  static const EXTRA_CHOOSER_CUSTOM_ACTIONS =
      r"""android.intent.extra.CHOOSER_CUSTOM_ACTIONS""";

  /// from: static public final java.lang.String EXTRA_CHOOSER_MODIFY_SHARE_ACTION
  static const EXTRA_CHOOSER_MODIFY_SHARE_ACTION =
      r"""android.intent.extra.CHOOSER_MODIFY_SHARE_ACTION""";

  /// from: static public final java.lang.String EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER
  static const EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER =
      r"""android.intent.extra.CHOOSER_REFINEMENT_INTENT_SENDER""";

  /// from: static public final java.lang.String EXTRA_CHOOSER_TARGETS
  static const EXTRA_CHOOSER_TARGETS =
      r"""android.intent.extra.CHOOSER_TARGETS""";

  /// from: static public final java.lang.String EXTRA_CHOSEN_COMPONENT
  static const EXTRA_CHOSEN_COMPONENT =
      r"""android.intent.extra.CHOSEN_COMPONENT""";

  /// from: static public final java.lang.String EXTRA_CHOSEN_COMPONENT_INTENT_SENDER
  static const EXTRA_CHOSEN_COMPONENT_INTENT_SENDER =
      r"""android.intent.extra.CHOSEN_COMPONENT_INTENT_SENDER""";

  /// from: static public final java.lang.String EXTRA_COMPONENT_NAME
  static const EXTRA_COMPONENT_NAME =
      r"""android.intent.extra.COMPONENT_NAME""";

  /// from: static public final java.lang.String EXTRA_CONTENT_ANNOTATIONS
  static const EXTRA_CONTENT_ANNOTATIONS =
      r"""android.intent.extra.CONTENT_ANNOTATIONS""";

  /// from: static public final java.lang.String EXTRA_CONTENT_QUERY
  static const EXTRA_CONTENT_QUERY = r"""android.intent.extra.CONTENT_QUERY""";

  /// from: static public final java.lang.String EXTRA_DATA_REMOVED
  static const EXTRA_DATA_REMOVED = r"""android.intent.extra.DATA_REMOVED""";

  /// from: static public final java.lang.String EXTRA_DOCK_STATE
  static const EXTRA_DOCK_STATE = r"""android.intent.extra.DOCK_STATE""";

  /// from: static public final int EXTRA_DOCK_STATE_CAR
  static const EXTRA_DOCK_STATE_CAR = 2;

  /// from: static public final int EXTRA_DOCK_STATE_DESK
  static const EXTRA_DOCK_STATE_DESK = 1;

  /// from: static public final int EXTRA_DOCK_STATE_HE_DESK
  static const EXTRA_DOCK_STATE_HE_DESK = 4;

  /// from: static public final int EXTRA_DOCK_STATE_LE_DESK
  static const EXTRA_DOCK_STATE_LE_DESK = 3;

  /// from: static public final int EXTRA_DOCK_STATE_UNDOCKED
  static const EXTRA_DOCK_STATE_UNDOCKED = 0;

  /// from: static public final java.lang.String EXTRA_DONT_KILL_APP
  static const EXTRA_DONT_KILL_APP = r"""android.intent.extra.DONT_KILL_APP""";

  /// from: static public final java.lang.String EXTRA_DURATION_MILLIS
  static const EXTRA_DURATION_MILLIS =
      r"""android.intent.extra.DURATION_MILLIS""";

  /// from: static public final java.lang.String EXTRA_EMAIL
  static const EXTRA_EMAIL = r"""android.intent.extra.EMAIL""";

  /// from: static public final java.lang.String EXTRA_END_TIME
  static const EXTRA_END_TIME = r"""android.intent.extra.END_TIME""";

  /// from: static public final java.lang.String EXTRA_EXCLUDE_COMPONENTS
  static const EXTRA_EXCLUDE_COMPONENTS =
      r"""android.intent.extra.EXCLUDE_COMPONENTS""";

  /// from: static public final java.lang.String EXTRA_FROM_STORAGE
  static const EXTRA_FROM_STORAGE = r"""android.intent.extra.FROM_STORAGE""";

  /// from: static public final java.lang.String EXTRA_HTML_TEXT
  static const EXTRA_HTML_TEXT = r"""android.intent.extra.HTML_TEXT""";

  /// from: static public final java.lang.String EXTRA_INDEX
  static const EXTRA_INDEX = r"""android.intent.extra.INDEX""";

  /// from: static public final java.lang.String EXTRA_INITIAL_INTENTS
  static const EXTRA_INITIAL_INTENTS =
      r"""android.intent.extra.INITIAL_INTENTS""";

  /// from: static public final java.lang.String EXTRA_INSTALLER_PACKAGE_NAME
  static const EXTRA_INSTALLER_PACKAGE_NAME =
      r"""android.intent.extra.INSTALLER_PACKAGE_NAME""";

  /// from: static public final java.lang.String EXTRA_INTENT
  static const EXTRA_INTENT = r"""android.intent.extra.INTENT""";

  /// from: static public final java.lang.String EXTRA_KEY_EVENT
  static const EXTRA_KEY_EVENT = r"""android.intent.extra.KEY_EVENT""";

  /// from: static public final java.lang.String EXTRA_LOCALE_LIST
  static const EXTRA_LOCALE_LIST = r"""android.intent.extra.LOCALE_LIST""";

  /// from: static public final java.lang.String EXTRA_LOCAL_ONLY
  static const EXTRA_LOCAL_ONLY = r"""android.intent.extra.LOCAL_ONLY""";

  /// from: static public final java.lang.String EXTRA_LOCUS_ID
  static const EXTRA_LOCUS_ID = r"""android.intent.extra.LOCUS_ID""";

  /// from: static public final java.lang.String EXTRA_MIME_TYPES
  static const EXTRA_MIME_TYPES = r"""android.intent.extra.MIME_TYPES""";

  /// from: static public final java.lang.String EXTRA_NOT_UNKNOWN_SOURCE
  static const EXTRA_NOT_UNKNOWN_SOURCE =
      r"""android.intent.extra.NOT_UNKNOWN_SOURCE""";

  /// from: static public final java.lang.String EXTRA_ORIGINATING_URI
  static const EXTRA_ORIGINATING_URI =
      r"""android.intent.extra.ORIGINATING_URI""";

  /// from: static public final java.lang.String EXTRA_PACKAGES
  static const EXTRA_PACKAGES = r"""android.intent.extra.PACKAGES""";

  /// from: static public final java.lang.String EXTRA_PACKAGE_NAME
  static const EXTRA_PACKAGE_NAME = r"""android.intent.extra.PACKAGE_NAME""";

  /// from: static public final java.lang.String EXTRA_PERMISSION_GROUP_NAME
  static const EXTRA_PERMISSION_GROUP_NAME =
      r"""android.intent.extra.PERMISSION_GROUP_NAME""";

  /// from: static public final java.lang.String EXTRA_PHONE_NUMBER
  static const EXTRA_PHONE_NUMBER = r"""android.intent.extra.PHONE_NUMBER""";

  /// from: static public final java.lang.String EXTRA_PROCESS_TEXT
  static const EXTRA_PROCESS_TEXT = r"""android.intent.extra.PROCESS_TEXT""";

  /// from: static public final java.lang.String EXTRA_PROCESS_TEXT_READONLY
  static const EXTRA_PROCESS_TEXT_READONLY =
      r"""android.intent.extra.PROCESS_TEXT_READONLY""";

  /// from: static public final java.lang.String EXTRA_QUICK_VIEW_FEATURES
  static const EXTRA_QUICK_VIEW_FEATURES =
      r"""android.intent.extra.QUICK_VIEW_FEATURES""";

  /// from: static public final java.lang.String EXTRA_QUIET_MODE
  static const EXTRA_QUIET_MODE = r"""android.intent.extra.QUIET_MODE""";

  /// from: static public final java.lang.String EXTRA_REFERRER
  static const EXTRA_REFERRER = r"""android.intent.extra.REFERRER""";

  /// from: static public final java.lang.String EXTRA_REFERRER_NAME
  static const EXTRA_REFERRER_NAME = r"""android.intent.extra.REFERRER_NAME""";

  /// from: static public final java.lang.String EXTRA_REMOTE_INTENT_TOKEN
  static const EXTRA_REMOTE_INTENT_TOKEN =
      r"""android.intent.extra.remote_intent_token""";

  /// from: static public final java.lang.String EXTRA_REPLACEMENT_EXTRAS
  static const EXTRA_REPLACEMENT_EXTRAS =
      r"""android.intent.extra.REPLACEMENT_EXTRAS""";

  /// from: static public final java.lang.String EXTRA_REPLACING
  static const EXTRA_REPLACING = r"""android.intent.extra.REPLACING""";

  /// from: static public final java.lang.String EXTRA_RESTRICTIONS_BUNDLE
  static const EXTRA_RESTRICTIONS_BUNDLE =
      r"""android.intent.extra.restrictions_bundle""";

  /// from: static public final java.lang.String EXTRA_RESTRICTIONS_INTENT
  static const EXTRA_RESTRICTIONS_INTENT =
      r"""android.intent.extra.restrictions_intent""";

  /// from: static public final java.lang.String EXTRA_RESTRICTIONS_LIST
  static const EXTRA_RESTRICTIONS_LIST =
      r"""android.intent.extra.restrictions_list""";

  /// from: static public final java.lang.String EXTRA_RESULT_RECEIVER
  static const EXTRA_RESULT_RECEIVER =
      r"""android.intent.extra.RESULT_RECEIVER""";

  /// from: static public final java.lang.String EXTRA_RETURN_RESULT
  static const EXTRA_RETURN_RESULT = r"""android.intent.extra.RETURN_RESULT""";

  /// from: static public final java.lang.String EXTRA_SHORTCUT_ICON
  static const EXTRA_SHORTCUT_ICON = r"""android.intent.extra.shortcut.ICON""";

  /// from: static public final java.lang.String EXTRA_SHORTCUT_ICON_RESOURCE
  static const EXTRA_SHORTCUT_ICON_RESOURCE =
      r"""android.intent.extra.shortcut.ICON_RESOURCE""";

  /// from: static public final java.lang.String EXTRA_SHORTCUT_ID
  static const EXTRA_SHORTCUT_ID = r"""android.intent.extra.shortcut.ID""";

  /// from: static public final java.lang.String EXTRA_SHORTCUT_INTENT
  static const EXTRA_SHORTCUT_INTENT =
      r"""android.intent.extra.shortcut.INTENT""";

  /// from: static public final java.lang.String EXTRA_SHORTCUT_NAME
  static const EXTRA_SHORTCUT_NAME = r"""android.intent.extra.shortcut.NAME""";

  /// from: static public final java.lang.String EXTRA_SHUTDOWN_USERSPACE_ONLY
  static const EXTRA_SHUTDOWN_USERSPACE_ONLY =
      r"""android.intent.extra.SHUTDOWN_USERSPACE_ONLY""";

  /// from: static public final java.lang.String EXTRA_SPLIT_NAME
  static const EXTRA_SPLIT_NAME = r"""android.intent.extra.SPLIT_NAME""";

  /// from: static public final java.lang.String EXTRA_START_TIME
  static const EXTRA_START_TIME = r"""android.intent.extra.START_TIME""";

  /// from: static public final java.lang.String EXTRA_STREAM
  static const EXTRA_STREAM = r"""android.intent.extra.STREAM""";

  /// from: static public final java.lang.String EXTRA_SUBJECT
  static const EXTRA_SUBJECT = r"""android.intent.extra.SUBJECT""";

  /// from: static public final java.lang.String EXTRA_SUSPENDED_PACKAGE_EXTRAS
  static const EXTRA_SUSPENDED_PACKAGE_EXTRAS =
      r"""android.intent.extra.SUSPENDED_PACKAGE_EXTRAS""";

  /// from: static public final java.lang.String EXTRA_TEMPLATE
  static const EXTRA_TEMPLATE = r"""android.intent.extra.TEMPLATE""";

  /// from: static public final java.lang.String EXTRA_TEXT
  static const EXTRA_TEXT = r"""android.intent.extra.TEXT""";

  /// from: static public final java.lang.String EXTRA_TIME
  static const EXTRA_TIME = r"""android.intent.extra.TIME""";

  /// from: static public final java.lang.String EXTRA_TIMEZONE
  static const EXTRA_TIMEZONE = r"""time-zone""";

  /// from: static public final java.lang.String EXTRA_TITLE
  static const EXTRA_TITLE = r"""android.intent.extra.TITLE""";

  /// from: static public final java.lang.String EXTRA_UID
  static const EXTRA_UID = r"""android.intent.extra.UID""";

  /// from: static public final java.lang.String EXTRA_USER
  static const EXTRA_USER = r"""android.intent.extra.USER""";

  /// from: static public final java.lang.String EXTRA_USER_INITIATED
  static const EXTRA_USER_INITIATED =
      r"""android.intent.extra.USER_INITIATED""";

  /// from: static public final java.lang.String EXTRA_USE_STYLUS_MODE
  static const EXTRA_USE_STYLUS_MODE =
      r"""android.intent.extra.USE_STYLUS_MODE""";

  /// from: static public final int FILL_IN_ACTION
  static const FILL_IN_ACTION = 1;

  /// from: static public final int FILL_IN_CATEGORIES
  static const FILL_IN_CATEGORIES = 4;

  /// from: static public final int FILL_IN_CLIP_DATA
  static const FILL_IN_CLIP_DATA = 128;

  /// from: static public final int FILL_IN_COMPONENT
  static const FILL_IN_COMPONENT = 8;

  /// from: static public final int FILL_IN_DATA
  static const FILL_IN_DATA = 2;

  /// from: static public final int FILL_IN_IDENTIFIER
  static const FILL_IN_IDENTIFIER = 256;

  /// from: static public final int FILL_IN_PACKAGE
  static const FILL_IN_PACKAGE = 16;

  /// from: static public final int FILL_IN_SELECTOR
  static const FILL_IN_SELECTOR = 64;

  /// from: static public final int FILL_IN_SOURCE_BOUNDS
  static const FILL_IN_SOURCE_BOUNDS = 32;

  /// from: static public final int FLAG_ACTIVITY_BROUGHT_TO_FRONT
  static const FLAG_ACTIVITY_BROUGHT_TO_FRONT = 4194304;

  /// from: static public final int FLAG_ACTIVITY_CLEAR_TASK
  static const FLAG_ACTIVITY_CLEAR_TASK = 32768;

  /// from: static public final int FLAG_ACTIVITY_CLEAR_TOP
  static const FLAG_ACTIVITY_CLEAR_TOP = 67108864;

  /// from: static public final int FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET
  static const FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET = 524288;

  /// from: static public final int FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS
  static const FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS = 8388608;

  /// from: static public final int FLAG_ACTIVITY_FORWARD_RESULT
  static const FLAG_ACTIVITY_FORWARD_RESULT = 33554432;

  /// from: static public final int FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY
  static const FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY = 1048576;

  /// from: static public final int FLAG_ACTIVITY_LAUNCH_ADJACENT
  static const FLAG_ACTIVITY_LAUNCH_ADJACENT = 4096;

  /// from: static public final int FLAG_ACTIVITY_MATCH_EXTERNAL
  static const FLAG_ACTIVITY_MATCH_EXTERNAL = 2048;

  /// from: static public final int FLAG_ACTIVITY_MULTIPLE_TASK
  static const FLAG_ACTIVITY_MULTIPLE_TASK = 134217728;

  /// from: static public final int FLAG_ACTIVITY_NEW_DOCUMENT
  static const FLAG_ACTIVITY_NEW_DOCUMENT = 524288;

  /// from: static public final int FLAG_ACTIVITY_NEW_TASK
  static const FLAG_ACTIVITY_NEW_TASK = 268435456;

  /// from: static public final int FLAG_ACTIVITY_NO_ANIMATION
  static const FLAG_ACTIVITY_NO_ANIMATION = 65536;

  /// from: static public final int FLAG_ACTIVITY_NO_HISTORY
  static const FLAG_ACTIVITY_NO_HISTORY = 1073741824;

  /// from: static public final int FLAG_ACTIVITY_NO_USER_ACTION
  static const FLAG_ACTIVITY_NO_USER_ACTION = 262144;

  /// from: static public final int FLAG_ACTIVITY_PREVIOUS_IS_TOP
  static const FLAG_ACTIVITY_PREVIOUS_IS_TOP = 16777216;

  /// from: static public final int FLAG_ACTIVITY_REORDER_TO_FRONT
  static const FLAG_ACTIVITY_REORDER_TO_FRONT = 131072;

  /// from: static public final int FLAG_ACTIVITY_REQUIRE_DEFAULT
  static const FLAG_ACTIVITY_REQUIRE_DEFAULT = 512;

  /// from: static public final int FLAG_ACTIVITY_REQUIRE_NON_BROWSER
  static const FLAG_ACTIVITY_REQUIRE_NON_BROWSER = 1024;

  /// from: static public final int FLAG_ACTIVITY_RESET_TASK_IF_NEEDED
  static const FLAG_ACTIVITY_RESET_TASK_IF_NEEDED = 2097152;

  /// from: static public final int FLAG_ACTIVITY_RETAIN_IN_RECENTS
  static const FLAG_ACTIVITY_RETAIN_IN_RECENTS = 8192;

  /// from: static public final int FLAG_ACTIVITY_SINGLE_TOP
  static const FLAG_ACTIVITY_SINGLE_TOP = 536870912;

  /// from: static public final int FLAG_ACTIVITY_TASK_ON_HOME
  static const FLAG_ACTIVITY_TASK_ON_HOME = 16384;

  /// from: static public final int FLAG_DEBUG_LOG_RESOLUTION
  static const FLAG_DEBUG_LOG_RESOLUTION = 8;

  /// from: static public final int FLAG_DIRECT_BOOT_AUTO
  static const FLAG_DIRECT_BOOT_AUTO = 256;

  /// from: static public final int FLAG_EXCLUDE_STOPPED_PACKAGES
  static const FLAG_EXCLUDE_STOPPED_PACKAGES = 16;

  /// from: static public final int FLAG_FROM_BACKGROUND
  static const FLAG_FROM_BACKGROUND = 4;

  /// from: static public final int FLAG_GRANT_PERSISTABLE_URI_PERMISSION
  static const FLAG_GRANT_PERSISTABLE_URI_PERMISSION = 64;

  /// from: static public final int FLAG_GRANT_PREFIX_URI_PERMISSION
  static const FLAG_GRANT_PREFIX_URI_PERMISSION = 128;

  /// from: static public final int FLAG_GRANT_READ_URI_PERMISSION
  static const FLAG_GRANT_READ_URI_PERMISSION = 1;

  /// from: static public final int FLAG_GRANT_WRITE_URI_PERMISSION
  static const FLAG_GRANT_WRITE_URI_PERMISSION = 2;

  /// from: static public final int FLAG_INCLUDE_STOPPED_PACKAGES
  static const FLAG_INCLUDE_STOPPED_PACKAGES = 32;

  /// from: static public final int FLAG_RECEIVER_FOREGROUND
  static const FLAG_RECEIVER_FOREGROUND = 268435456;

  /// from: static public final int FLAG_RECEIVER_NO_ABORT
  static const FLAG_RECEIVER_NO_ABORT = 134217728;

  /// from: static public final int FLAG_RECEIVER_REGISTERED_ONLY
  static const FLAG_RECEIVER_REGISTERED_ONLY = 1073741824;

  /// from: static public final int FLAG_RECEIVER_REPLACE_PENDING
  static const FLAG_RECEIVER_REPLACE_PENDING = 536870912;

  /// from: static public final int FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS
  static const FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS = 2097152;

  /// from: static public final java.lang.String METADATA_DOCK_HOME
  static const METADATA_DOCK_HOME = r"""android.dock_home""";

  /// from: static public final int URI_ALLOW_UNSAFE
  static const URI_ALLOW_UNSAFE = 4;

  /// from: static public final int URI_ANDROID_APP_SCHEME
  static const URI_ANDROID_APP_SCHEME = 2;

  /// from: static public final int URI_INTENT_SCHEME
  static const URI_INTENT_SCHEME = 1;

  static final _new0 =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>("Intent__new0")
          .asFunction<jni.JniResult Function()>();

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent() {
    return Intent.fromRef(_new0().object);
  }

  static final _new1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>)>>("Intent__new1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new1(
    Intent intent,
  ) {
    return Intent.fromRef(_new1(intent.reference).object);
  }

  static final _new2 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>)>>("Intent__new2")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new2(
    jni.JString string,
  ) {
    return Intent.fromRef(_new2(string.reference).object);
  }

  static final _new3 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__new3")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String string, android.net.Uri uri)
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new3(
    jni.JString string,
    jni.JObject uri,
  ) {
    return Intent.fromRef(_new3(string.reference, uri.reference).object);
  }

  static final _new4 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__new4")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new4(
    Context context,
    jni.JObject class0,
  ) {
    return Intent.fromRef(_new4(context.reference, class0.reference).object);
  }

  static final _new5 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__new5")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String string, android.net.Uri uri, android.content.Context context, java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  factory Intent.new5(
    jni.JString string,
    jni.JObject uri,
    Context context,
    jni.JObject class0,
  ) {
    return Intent.fromRef(_new5(string.reference, uri.reference,
            context.reference, class0.reference)
        .object);
  }

  static final _createChooser = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__createChooser")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent createChooser(android.content.Intent intent, java.lang.CharSequence charSequence)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent createChooser(
    Intent intent,
    jni.JObject charSequence,
  ) {
    return const $IntentType().fromRef(
        _createChooser(intent.reference, charSequence.reference).object);
  }

  static final _createChooser1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__createChooser1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent createChooser(android.content.Intent intent, java.lang.CharSequence charSequence, android.content.IntentSender intentSender)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent createChooser1(
    Intent intent,
    jni.JObject charSequence,
    jni.JObject intentSender,
  ) {
    return const $IntentType().fromRef(_createChooser1(
            intent.reference, charSequence.reference, intentSender.reference)
        .object);
  }

  static final _clone = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>)>>("Intent__clone")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Object clone()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject clone() {
    return const jni.JObjectType().fromRef(_clone(reference).object);
  }

  static final _cloneFilter = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__cloneFilter")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent cloneFilter()
  /// The returned object must be released after use, by calling the [release] method.
  Intent cloneFilter() {
    return const $IntentType().fromRef(_cloneFilter(reference).object);
  }

  static final _makeMainActivity = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__makeMainActivity")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent makeMainActivity(android.content.ComponentName componentName)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent makeMainActivity(
    jni.JObject componentName,
  ) {
    return const $IntentType()
        .fromRef(_makeMainActivity(componentName.reference).object);
  }

  static final _makeMainSelectorActivity = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__makeMainSelectorActivity")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent makeMainSelectorActivity(java.lang.String string, java.lang.String string1)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent makeMainSelectorActivity(
    jni.JString string,
    jni.JString string1,
  ) {
    return const $IntentType().fromRef(
        _makeMainSelectorActivity(string.reference, string1.reference).object);
  }

  static final _makeRestartActivityTask = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__makeRestartActivityTask")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent makeRestartActivityTask(android.content.ComponentName componentName)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent makeRestartActivityTask(
    jni.JObject componentName,
  ) {
    return const $IntentType()
        .fromRef(_makeRestartActivityTask(componentName.reference).object);
  }

  static final _getIntent = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getIntent")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent getIntent(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent getIntent(
    jni.JString string,
  ) {
    return const $IntentType().fromRef(_getIntent(string.reference).object);
  }

  static final _parseUri = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Intent__parseUri")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.content.Intent parseUri(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent parseUri(
    jni.JString string,
    int i,
  ) {
    return const $IntentType().fromRef(_parseUri(string.reference, i).object);
  }

  static final _getIntentOld = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getIntentOld")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent getIntentOld(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent getIntentOld(
    jni.JString string,
  ) {
    return const $IntentType().fromRef(_getIntentOld(string.reference).object);
  }

  static final _getAction = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getAction")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getAction()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getAction() {
    return const jni.JStringType().fromRef(_getAction(reference).object);
  }

  static final _getData = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>)>>("Intent__getData")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getData()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getData() {
    return const jni.JObjectType().fromRef(_getData(reference).object);
  }

  static final _getDataString = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getDataString")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getDataString()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getDataString() {
    return const jni.JStringType().fromRef(_getDataString(reference).object);
  }

  static final _getScheme = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getScheme")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getScheme()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getScheme() {
    return const jni.JStringType().fromRef(_getScheme(reference).object);
  }

  static final _getType = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>)>>("Intent__getType")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getType()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getType() {
    return const jni.JStringType().fromRef(_getType(reference).object);
  }

  static final _resolveType = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__resolveType")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String resolveType(android.content.Context context)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString resolveType(
    Context context,
  ) {
    return const jni.JStringType()
        .fromRef(_resolveType(reference, context.reference).object);
  }

  static final _resolveType1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__resolveType1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String resolveType(android.content.ContentResolver contentResolver)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString resolveType1(
    jni.JObject contentResolver,
  ) {
    return const jni.JStringType()
        .fromRef(_resolveType1(reference, contentResolver.reference).object);
  }

  static final _resolveTypeIfNeeded = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__resolveTypeIfNeeded")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String resolveTypeIfNeeded(android.content.ContentResolver contentResolver)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString resolveTypeIfNeeded(
    jni.JObject contentResolver,
  ) {
    return const jni.JStringType().fromRef(
        _resolveTypeIfNeeded(reference, contentResolver.reference).object);
  }

  static final _getIdentifier = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getIdentifier")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getIdentifier()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getIdentifier() {
    return const jni.JStringType().fromRef(_getIdentifier(reference).object);
  }

  static final _hasCategory = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__hasCategory")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasCategory(java.lang.String string)
  bool hasCategory(
    jni.JString string,
  ) {
    return _hasCategory(reference, string.reference).boolean;
  }

  static final _getCategories = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getCategories")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Set getCategories()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JSet<jni.JString> getCategories() {
    return const jni.JSetType(jni.JStringType())
        .fromRef(_getCategories(reference).object);
  }

  static final _getSelector = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getSelector")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getSelector()
  /// The returned object must be released after use, by calling the [release] method.
  Intent getSelector() {
    return const $IntentType().fromRef(_getSelector(reference).object);
  }

  static final _getClipData = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getClipData")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ClipData getClipData()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getClipData() {
    return const jni.JObjectType().fromRef(_getClipData(reference).object);
  }

  static final _setExtrasClassLoader = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setExtrasClassLoader")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExtrasClassLoader(java.lang.ClassLoader classLoader)
  void setExtrasClassLoader(
    jni.JObject classLoader,
  ) {
    return _setExtrasClassLoader(reference, classLoader.reference).check();
  }

  static final _hasExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__hasExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasExtra(java.lang.String string)
  bool hasExtra(
    jni.JString string,
  ) {
    return _hasExtra(reference, string.reference).boolean;
  }

  static final _hasFileDescriptors = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__hasFileDescriptors")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasFileDescriptors()
  bool hasFileDescriptors() {
    return _hasFileDescriptors(reference).boolean;
  }

  static final _getBooleanExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Uint8)>>("Intent__getBooleanExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean getBooleanExtra(java.lang.String string, boolean z)
  bool getBooleanExtra(
    jni.JString string,
    bool z,
  ) {
    return _getBooleanExtra(reference, string.reference, z ? 1 : 0).boolean;
  }

  static final _getByteExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int8)>>("Intent__getByteExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public byte getByteExtra(java.lang.String string, byte b)
  int getByteExtra(
    jni.JString string,
    int b,
  ) {
    return _getByteExtra(reference, string.reference, b).byte;
  }

  static final _getShortExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int16)>>("Intent__getShortExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public short getShortExtra(java.lang.String string, short s)
  int getShortExtra(
    jni.JString string,
    int s,
  ) {
    return _getShortExtra(reference, string.reference, s).short;
  }

  static final _getCharExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Uint16)>>("Intent__getCharExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public char getCharExtra(java.lang.String string, char c)
  int getCharExtra(
    jni.JString string,
    int c,
  ) {
    return _getCharExtra(reference, string.reference, c).char;
  }

  static final _getIntExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Intent__getIntExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public int getIntExtra(java.lang.String string, int i)
  int getIntExtra(
    jni.JString string,
    int i,
  ) {
    return _getIntExtra(reference, string.reference, i).integer;
  }

  static final _getLongExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int64)>>("Intent__getLongExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public long getLongExtra(java.lang.String string, long j)
  int getLongExtra(
    jni.JString string,
    int j,
  ) {
    return _getLongExtra(reference, string.reference, j).long;
  }

  static final _getFloatExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Float)>>("Intent__getFloatExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public float getFloatExtra(java.lang.String string, float f)
  double getFloatExtra(
    jni.JString string,
    double f,
  ) {
    return _getFloatExtra(reference, string.reference, f).float;
  }

  static final _getDoubleExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Double)>>("Intent__getDoubleExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public double getDoubleExtra(java.lang.String string, double d)
  double getDoubleExtra(
    jni.JString string,
    double d,
  ) {
    return _getDoubleExtra(reference, string.reference, d).doubleFloat;
  }

  static final _getStringExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getStringExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getStringExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getStringExtra(
    jni.JString string,
  ) {
    return const jni.JStringType()
        .fromRef(_getStringExtra(reference, string.reference).object);
  }

  static final _getCharSequenceExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getCharSequenceExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getCharSequenceExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCharSequenceExtra(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_getCharSequenceExtra(reference, string.reference).object);
  }

  static final _getParcelableExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getParcelableExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public T getParcelableExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  $T getParcelableExtra<$T extends jni.JObject>(
    jni.JString string, {
    required jni.JObjType<$T> T,
  }) {
    return T.fromRef(_getParcelableExtra(reference, string.reference).object);
  }

  static final _getParcelableExtra1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getParcelableExtra1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public T getParcelableExtra(java.lang.String string, java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  $T getParcelableExtra1<$T extends jni.JObject>(
    jni.JString string,
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return T.fromRef(
        _getParcelableExtra1(reference, string.reference, class0.reference)
            .object);
  }

  static final _getParcelableArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getParcelableArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Parcelable[] getParcelableArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getParcelableArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.JObjectType())
        .fromRef(_getParcelableArrayExtra(reference, string.reference).object);
  }

  static final _getParcelableArrayExtra1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getParcelableArrayExtra1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Object[] getParcelableArrayExtra(java.lang.String string, java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<$T> getParcelableArrayExtra1<$T extends jni.JObject>(
    jni.JString string,
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return jni.JArrayType(T).fromRef(
        _getParcelableArrayExtra1(reference, string.reference, class0.reference)
            .object);
  }

  static final _getParcelableArrayListExtra = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Intent__getParcelableArrayListExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList getParcelableArrayListExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getParcelableArrayListExtra<$T extends jni.JObject>(
    jni.JString string, {
    required jni.JObjType<$T> T,
  }) {
    return const jni.JObjectType().fromRef(
        _getParcelableArrayListExtra(reference, string.reference).object);
  }

  static final _getParcelableArrayListExtra1 = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Intent__getParcelableArrayListExtra1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList getParcelableArrayListExtra(java.lang.String string, java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getParcelableArrayListExtra1<$T extends jni.JObject>(
    jni.JString string,
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return const jni.JObjectType().fromRef(_getParcelableArrayListExtra1(
            reference, string.reference, class0.reference)
        .object);
  }

  static final _getSerializableExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getSerializableExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.Serializable getSerializableExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSerializableExtra(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_getSerializableExtra(reference, string.reference).object);
  }

  static final _getSerializableExtra1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getSerializableExtra1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public T getSerializableExtra(java.lang.String string, java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  $T getSerializableExtra1<$T extends jni.JObject>(
    jni.JString string,
    jni.JObject class0, {
    required jni.JObjType<$T> T,
  }) {
    return T.fromRef(
        _getSerializableExtra1(reference, string.reference, class0.reference)
            .object);
  }

  static final _getIntegerArrayListExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getIntegerArrayListExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList getIntegerArrayListExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getIntegerArrayListExtra(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_getIntegerArrayListExtra(reference, string.reference).object);
  }

  static final _getStringArrayListExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getStringArrayListExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList getStringArrayListExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getStringArrayListExtra(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_getStringArrayListExtra(reference, string.reference).object);
  }

  static final _getCharSequenceArrayListExtra = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Intent__getCharSequenceArrayListExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getCharSequenceArrayListExtra(
    jni.JString string,
  ) {
    return const jni.JObjectType().fromRef(
        _getCharSequenceArrayListExtra(reference, string.reference).object);
  }

  static final _getBooleanArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getBooleanArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean[] getBooleanArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jboolean> getBooleanArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.jbooleanType())
        .fromRef(_getBooleanArrayExtra(reference, string.reference).object);
  }

  static final _getByteArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getByteArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public byte[] getByteArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jbyte> getByteArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.jbyteType())
        .fromRef(_getByteArrayExtra(reference, string.reference).object);
  }

  static final _getShortArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getShortArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public short[] getShortArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jshort> getShortArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.jshortType())
        .fromRef(_getShortArrayExtra(reference, string.reference).object);
  }

  static final _getCharArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getCharArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public char[] getCharArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jchar> getCharArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.jcharType())
        .fromRef(_getCharArrayExtra(reference, string.reference).object);
  }

  static final _getIntArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getIntArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int[] getIntArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jint> getIntArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.jintType())
        .fromRef(_getIntArrayExtra(reference, string.reference).object);
  }

  static final _getLongArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getLongArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public long[] getLongArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jlong> getLongArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.jlongType())
        .fromRef(_getLongArrayExtra(reference, string.reference).object);
  }

  static final _getFloatArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getFloatArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public float[] getFloatArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jfloat> getFloatArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.jfloatType())
        .fromRef(_getFloatArrayExtra(reference, string.reference).object);
  }

  static final _getDoubleArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getDoubleArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public double[] getDoubleArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.jdouble> getDoubleArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.jdoubleType())
        .fromRef(_getDoubleArrayExtra(reference, string.reference).object);
  }

  static final _getStringArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getStringArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getStringArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JString> getStringArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.JStringType())
        .fromRef(_getStringArrayExtra(reference, string.reference).object);
  }

  static final _getCharSequenceArrayExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getCharSequenceArrayExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JArray<jni.JObject> getCharSequenceArrayExtra(
    jni.JString string,
  ) {
    return const jni.JArrayType(jni.JObjectType()).fromRef(
        _getCharSequenceArrayExtra(reference, string.reference).object);
  }

  static final _getBundleExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__getBundleExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getBundleExtra(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getBundleExtra(
    jni.JString string,
  ) {
    return const jni.JObjectType()
        .fromRef(_getBundleExtra(reference, string.reference).object);
  }

  static final _getExtras = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getExtras")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getExtras() {
    return const jni.JObjectType().fromRef(_getExtras(reference).object);
  }

  static final _getFlags = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getFlags")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getFlags()
  int getFlags() {
    return _getFlags(reference).integer;
  }

  static final _getPackage = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getPackage")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackage()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getPackage() {
    return const jni.JStringType().fromRef(_getPackage(reference).object);
  }

  static final _getComponent = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getComponent")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getComponent()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getComponent() {
    return const jni.JObjectType().fromRef(_getComponent(reference).object);
  }

  static final _getSourceBounds = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__getSourceBounds")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Rect getSourceBounds()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getSourceBounds() {
    return const jni.JObjectType().fromRef(_getSourceBounds(reference).object);
  }

  static final _resolveActivity = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__resolveActivity")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName resolveActivity(android.content.pm.PackageManager packageManager)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject resolveActivity(
    jni.JObject packageManager,
  ) {
    return const jni.JObjectType()
        .fromRef(_resolveActivity(reference, packageManager.reference).object);
  }

  static final _resolveActivityInfo = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("Intent__resolveActivityInfo")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager packageManager, int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject resolveActivityInfo(
    jni.JObject packageManager,
    int i,
  ) {
    return const jni.JObjectType().fromRef(
        _resolveActivityInfo(reference, packageManager.reference, i).object);
  }

  static final _setAction = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setAction")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setAction(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setAction(
    jni.JString string,
  ) {
    return const $IntentType()
        .fromRef(_setAction(reference, string.reference).object);
  }

  static final _setData = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setData")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setData(android.net.Uri uri)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setData(
    jni.JObject uri,
  ) {
    return const $IntentType()
        .fromRef(_setData(reference, uri.reference).object);
  }

  static final _setDataAndNormalize = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setDataAndNormalize")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setDataAndNormalize(android.net.Uri uri)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setDataAndNormalize(
    jni.JObject uri,
  ) {
    return const $IntentType()
        .fromRef(_setDataAndNormalize(reference, uri.reference).object);
  }

  static final _setType = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setType")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setType(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setType(
    jni.JString string,
  ) {
    return const $IntentType()
        .fromRef(_setType(reference, string.reference).object);
  }

  static final _setTypeAndNormalize = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setTypeAndNormalize")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setTypeAndNormalize(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setTypeAndNormalize(
    jni.JString string,
  ) {
    return const $IntentType()
        .fromRef(_setTypeAndNormalize(reference, string.reference).object);
  }

  static final _setDataAndType = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setDataAndType")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setDataAndType(android.net.Uri uri, java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setDataAndType(
    jni.JObject uri,
    jni.JString string,
  ) {
    return const $IntentType().fromRef(
        _setDataAndType(reference, uri.reference, string.reference).object);
  }

  static final _setDataAndTypeAndNormalize = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setDataAndTypeAndNormalize")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setDataAndTypeAndNormalize(android.net.Uri uri, java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setDataAndTypeAndNormalize(
    jni.JObject uri,
    jni.JString string,
  ) {
    return const $IntentType().fromRef(
        _setDataAndTypeAndNormalize(reference, uri.reference, string.reference)
            .object);
  }

  static final _setIdentifier = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setIdentifier")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setIdentifier(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setIdentifier(
    jni.JString string,
  ) {
    return const $IntentType()
        .fromRef(_setIdentifier(reference, string.reference).object);
  }

  static final _addCategory = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__addCategory")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent addCategory(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Intent addCategory(
    jni.JString string,
  ) {
    return const $IntentType()
        .fromRef(_addCategory(reference, string.reference).object);
  }

  static final _removeCategory = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__removeCategory")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removeCategory(java.lang.String string)
  void removeCategory(
    jni.JString string,
  ) {
    return _removeCategory(reference, string.reference).check();
  }

  static final _setSelector = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setSelector")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSelector(android.content.Intent intent)
  void setSelector(
    Intent intent,
  ) {
    return _setSelector(reference, intent.reference).check();
  }

  static final _setClipData = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setClipData")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setClipData(android.content.ClipData clipData)
  void setClipData(
    jni.JObject clipData,
  ) {
    return _setClipData(reference, clipData.reference).check();
  }

  static final _putExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Uint8)>>("Intent__putExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, boolean z)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra(
    jni.JString string,
    bool z,
  ) {
    return const $IntentType()
        .fromRef(_putExtra(reference, string.reference, z ? 1 : 0).object);
  }

  static final _putExtra1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int8)>>("Intent__putExtra1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, byte b)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra1(
    jni.JString string,
    int b,
  ) {
    return const $IntentType()
        .fromRef(_putExtra1(reference, string.reference, b).object);
  }

  static final _putExtra2 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Uint16)>>("Intent__putExtra2")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, char c)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra2(
    jni.JString string,
    int c,
  ) {
    return const $IntentType()
        .fromRef(_putExtra2(reference, string.reference, c).object);
  }

  static final _putExtra3 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int16)>>("Intent__putExtra3")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, short s)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra3(
    jni.JString string,
    int s,
  ) {
    return const $IntentType()
        .fromRef(_putExtra3(reference, string.reference, s).object);
  }

  static final _putExtra4 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Intent__putExtra4")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, int i)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra4(
    jni.JString string,
    int i,
  ) {
    return const $IntentType()
        .fromRef(_putExtra4(reference, string.reference, i).object);
  }

  static final _putExtra5 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int64)>>("Intent__putExtra5")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, long j)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra5(
    jni.JString string,
    int j,
  ) {
    return const $IntentType()
        .fromRef(_putExtra5(reference, string.reference, j).object);
  }

  static final _putExtra6 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Float)>>("Intent__putExtra6")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, float f)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra6(
    jni.JString string,
    double f,
  ) {
    return const $IntentType()
        .fromRef(_putExtra6(reference, string.reference, f).object);
  }

  static final _putExtra7 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Double)>>("Intent__putExtra7")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, double d)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra7(
    jni.JString string,
    double d,
  ) {
    return const $IntentType()
        .fromRef(_putExtra7(reference, string.reference, d).object);
  }

  static final _putExtra8 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra8")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, java.lang.String string1)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra8(
    jni.JString string,
    jni.JString string1,
  ) {
    return const $IntentType().fromRef(
        _putExtra8(reference, string.reference, string1.reference).object);
  }

  static final _putExtra9 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra9")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, java.lang.CharSequence charSequence)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra9(
    jni.JString string,
    jni.JObject charSequence,
  ) {
    return const $IntentType().fromRef(
        _putExtra9(reference, string.reference, charSequence.reference).object);
  }

  static final _putExtra10 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra10")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, android.os.Parcelable parcelable)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra10(
    jni.JString string,
    jni.JObject parcelable,
  ) {
    return const $IntentType().fromRef(
        _putExtra10(reference, string.reference, parcelable.reference).object);
  }

  static final _putExtra11 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra11")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, android.os.Parcelable[] parcelables)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra11(
    jni.JString string,
    jni.JArray<jni.JObject> parcelables,
  ) {
    return const $IntentType().fromRef(
        _putExtra11(reference, string.reference, parcelables.reference).object);
  }

  static final _putParcelableArrayListExtra = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Intent__putParcelableArrayListExtra")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putParcelableArrayListExtra(java.lang.String string, java.util.ArrayList arrayList)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putParcelableArrayListExtra(
    jni.JString string,
    jni.JObject arrayList,
  ) {
    return const $IntentType().fromRef(_putParcelableArrayListExtra(
            reference, string.reference, arrayList.reference)
        .object);
  }

  static final _putIntegerArrayListExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putIntegerArrayListExtra")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putIntegerArrayListExtra(java.lang.String string, java.util.ArrayList arrayList)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putIntegerArrayListExtra(
    jni.JString string,
    jni.JObject arrayList,
  ) {
    return const $IntentType().fromRef(_putIntegerArrayListExtra(
            reference, string.reference, arrayList.reference)
        .object);
  }

  static final _putStringArrayListExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putStringArrayListExtra")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putStringArrayListExtra(java.lang.String string, java.util.ArrayList arrayList)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putStringArrayListExtra(
    jni.JString string,
    jni.JObject arrayList,
  ) {
    return const $IntentType().fromRef(_putStringArrayListExtra(
            reference, string.reference, arrayList.reference)
        .object);
  }

  static final _putCharSequenceArrayListExtra = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "Intent__putCharSequenceArrayListExtra")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putCharSequenceArrayListExtra(java.lang.String string, java.util.ArrayList arrayList)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putCharSequenceArrayListExtra(
    jni.JString string,
    jni.JObject arrayList,
  ) {
    return const $IntentType().fromRef(_putCharSequenceArrayListExtra(
            reference, string.reference, arrayList.reference)
        .object);
  }

  static final _putExtra12 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra12")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, java.io.Serializable serializable)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra12(
    jni.JString string,
    jni.JObject serializable,
  ) {
    return const $IntentType().fromRef(
        _putExtra12(reference, string.reference, serializable.reference)
            .object);
  }

  static final _putExtra13 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra13")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, boolean[] zs)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra13(
    jni.JString string,
    jni.JArray<jni.jboolean> zs,
  ) {
    return const $IntentType()
        .fromRef(_putExtra13(reference, string.reference, zs.reference).object);
  }

  static final _putExtra14 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra14")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, byte[] bs)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra14(
    jni.JString string,
    jni.JArray<jni.jbyte> bs,
  ) {
    return const $IntentType()
        .fromRef(_putExtra14(reference, string.reference, bs.reference).object);
  }

  static final _putExtra15 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra15")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, short[] ss)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra15(
    jni.JString string,
    jni.JArray<jni.jshort> ss,
  ) {
    return const $IntentType()
        .fromRef(_putExtra15(reference, string.reference, ss.reference).object);
  }

  static final _putExtra16 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra16")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, char[] cs)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra16(
    jni.JString string,
    jni.JArray<jni.jchar> cs,
  ) {
    return const $IntentType()
        .fromRef(_putExtra16(reference, string.reference, cs.reference).object);
  }

  static final _putExtra17 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra17")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, int[] is)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra17(
    jni.JString string,
    jni.JArray<jni.jint> is0,
  ) {
    return const $IntentType().fromRef(
        _putExtra17(reference, string.reference, is0.reference).object);
  }

  static final _putExtra18 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra18")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, long[] js)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra18(
    jni.JString string,
    jni.JArray<jni.jlong> js,
  ) {
    return const $IntentType()
        .fromRef(_putExtra18(reference, string.reference, js.reference).object);
  }

  static final _putExtra19 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra19")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, float[] fs)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra19(
    jni.JString string,
    jni.JArray<jni.jfloat> fs,
  ) {
    return const $IntentType()
        .fromRef(_putExtra19(reference, string.reference, fs.reference).object);
  }

  static final _putExtra20 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra20")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, double[] ds)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra20(
    jni.JString string,
    jni.JArray<jni.jdouble> ds,
  ) {
    return const $IntentType()
        .fromRef(_putExtra20(reference, string.reference, ds.reference).object);
  }

  static final _putExtra21 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra21")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, java.lang.String[] strings)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra21(
    jni.JString string,
    jni.JArray<jni.JString> strings,
  ) {
    return const $IntentType().fromRef(
        _putExtra21(reference, string.reference, strings.reference).object);
  }

  static final _putExtra22 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra22")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, java.lang.CharSequence[] charSequences)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra22(
    jni.JString string,
    jni.JArray<jni.JObject> charSequences,
  ) {
    return const $IntentType().fromRef(
        _putExtra22(reference, string.reference, charSequences.reference)
            .object);
  }

  static final _putExtra23 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtra23")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String string, android.os.Bundle bundle)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtra23(
    jni.JString string,
    jni.JObject bundle,
  ) {
    return const $IntentType().fromRef(
        _putExtra23(reference, string.reference, bundle.reference).object);
  }

  static final _putExtras = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtras")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtras(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtras(
    Intent intent,
  ) {
    return const $IntentType()
        .fromRef(_putExtras(reference, intent.reference).object);
  }

  static final _putExtras1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__putExtras1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtras(android.os.Bundle bundle)
  /// The returned object must be released after use, by calling the [release] method.
  Intent putExtras1(
    jni.JObject bundle,
  ) {
    return const $IntentType()
        .fromRef(_putExtras1(reference, bundle.reference).object);
  }

  static final _replaceExtras = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__replaceExtras")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent replaceExtras(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  Intent replaceExtras(
    Intent intent,
  ) {
    return const $IntentType()
        .fromRef(_replaceExtras(reference, intent.reference).object);
  }

  static final _replaceExtras1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__replaceExtras1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent replaceExtras(android.os.Bundle bundle)
  /// The returned object must be released after use, by calling the [release] method.
  Intent replaceExtras1(
    jni.JObject bundle,
  ) {
    return const $IntentType()
        .fromRef(_replaceExtras1(reference, bundle.reference).object);
  }

  static final _removeExtra = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__removeExtra")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removeExtra(java.lang.String string)
  void removeExtra(
    jni.JString string,
  ) {
    return _removeExtra(reference, string.reference).check();
  }

  static final _setFlags = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Intent__setFlags")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent setFlags(int i)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setFlags(
    int i,
  ) {
    return const $IntentType().fromRef(_setFlags(reference, i).object);
  }

  static final _addFlags = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Intent__addFlags")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent addFlags(int i)
  /// The returned object must be released after use, by calling the [release] method.
  Intent addFlags(
    int i,
  ) {
    return const $IntentType().fromRef(_addFlags(reference, i).object);
  }

  static final _removeFlags = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Intent__removeFlags")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void removeFlags(int i)
  void removeFlags(
    int i,
  ) {
    return _removeFlags(reference, i).check();
  }

  static final _setPackage = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setPackage")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setPackage(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setPackage(
    jni.JString string,
  ) {
    return const $IntentType()
        .fromRef(_setPackage(reference, string.reference).object);
  }

  static final _setComponent = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setComponent")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setComponent(android.content.ComponentName componentName)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setComponent(
    jni.JObject componentName,
  ) {
    return const $IntentType()
        .fromRef(_setComponent(reference, componentName.reference).object);
  }

  static final _setClassName = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setClassName")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setClassName(android.content.Context context, java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setClassName(
    Context context,
    jni.JString string,
  ) {
    return const $IntentType().fromRef(
        _setClassName(reference, context.reference, string.reference).object);
  }

  static final _setClassName1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setClassName1")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setClassName(java.lang.String string, java.lang.String string1)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setClassName1(
    jni.JString string,
    jni.JString string1,
  ) {
    return const $IntentType().fromRef(
        _setClassName1(reference, string.reference, string1.reference).object);
  }

  static final _setClass = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setClass")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setClass(android.content.Context context, java.lang.Class class)
  /// The returned object must be released after use, by calling the [release] method.
  Intent setClass(
    Context context,
    jni.JObject class0,
  ) {
    return const $IntentType().fromRef(
        _setClass(reference, context.reference, class0.reference).object);
  }

  static final _setSourceBounds = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__setSourceBounds")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSourceBounds(android.graphics.Rect rect)
  void setSourceBounds(
    jni.JObject rect,
  ) {
    return _setSourceBounds(reference, rect.reference).check();
  }

  static final _fillIn = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Intent__fillIn")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public int fillIn(android.content.Intent intent, int i)
  int fillIn(
    Intent intent,
    int i,
  ) {
    return _fillIn(reference, intent.reference, i).integer;
  }

  static final _filterEquals = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__filterEquals")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean filterEquals(android.content.Intent intent)
  bool filterEquals(
    Intent intent,
  ) {
    return _filterEquals(reference, intent.reference).boolean;
  }

  static final _filterHashCode = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__filterHashCode")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int filterHashCode()
  int filterHashCode() {
    return _filterHashCode(reference).integer;
  }

  static final _toString1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__toString1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toString1() {
    return const jni.JStringType().fromRef(_toString1(reference).object);
  }

  static final _toURI = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>)>>("Intent__toURI")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toURI()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toURI() {
    return const jni.JStringType().fromRef(_toURI(reference).object);
  }

  static final _toUri = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Intent__toUri")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.lang.String toUri(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toUri(
    int i,
  ) {
    return const jni.JStringType().fromRef(_toUri(reference, i).object);
  }

  static final _describeContents = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__describeContents")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() {
    return _describeContents(reference).integer;
  }

  static final _writeToParcel = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("Intent__writeToParcel")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int i)
  void writeToParcel(
    jni.JObject parcel,
    int i,
  ) {
    return _writeToParcel(reference, parcel.reference, i).check();
  }

  static final _readFromParcel = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__readFromParcel")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel parcel)
  void readFromParcel(
    jni.JObject parcel,
  ) {
    return _readFromParcel(reference, parcel.reference).check();
  }

  static final _parseIntent = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("Intent__parseIntent")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent parseIntent(android.content.res.Resources resources, org.xmlpull.v1.XmlPullParser xmlPullParser, android.util.AttributeSet attributeSet)
  /// The returned object must be released after use, by calling the [release] method.
  static Intent parseIntent(
    jni.JObject resources,
    jni.JObject xmlPullParser,
    jni.JObject attributeSet,
  ) {
    return const $IntentType().fromRef(_parseIntent(resources.reference,
            xmlPullParser.reference, attributeSet.reference)
        .object);
  }

  static final _normalizeMimeType = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "Intent__normalizeMimeType")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public java.lang.String normalizeMimeType(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JString normalizeMimeType(
    jni.JString string,
  ) {
    return const jni.JStringType()
        .fromRef(_normalizeMimeType(string.reference).object);
  }
}

final class $IntentType extends jni.JObjType<Intent> {
  const $IntentType();

  @override
  String get signature => r"Landroid/content/Intent;";

  @override
  Intent fromRef(jni.JObjectPtr ref) => Intent.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($IntentType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($IntentType) && other is $IntentType;
  }
}

/// from: android.content.IntentFilter$AuthorityEntry
class IntentFilter_AuthorityEntry extends jni.JObject {
  @override
  late final jni.JObjType<IntentFilter_AuthorityEntry> $type = type;

  IntentFilter_AuthorityEntry.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $IntentFilter_AuthorityEntryType();
  static final _new0 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter_AuthorityEntry__new0")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String string, java.lang.String string1)
  /// The returned object must be released after use, by calling the [release] method.
  factory IntentFilter_AuthorityEntry(
    jni.JString string,
    jni.JString string1,
  ) {
    return IntentFilter_AuthorityEntry.fromRef(
        _new0(string.reference, string1.reference).object);
  }

  static final _getHost = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter_AuthorityEntry__getHost")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getHost()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getHost() {
    return const jni.JStringType().fromRef(_getHost(reference).object);
  }

  static final _getPort = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter_AuthorityEntry__getPort")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getPort()
  int getPort() {
    return _getPort(reference).integer;
  }

  static final _equals1 = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "IntentFilter_AuthorityEntry__equals1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object object)
  bool equals1(
    jni.JObject object,
  ) {
    return _equals1(reference, object.reference).boolean;
  }

  static final _match = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter_AuthorityEntry__match")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int match(android.net.Uri uri)
  int match(
    jni.JObject uri,
  ) {
    return _match(reference, uri.reference).integer;
  }
}

final class $IntentFilter_AuthorityEntryType
    extends jni.JObjType<IntentFilter_AuthorityEntry> {
  const $IntentFilter_AuthorityEntryType();

  @override
  String get signature => r"Landroid/content/IntentFilter$AuthorityEntry;";

  @override
  IntentFilter_AuthorityEntry fromRef(jni.JObjectPtr ref) =>
      IntentFilter_AuthorityEntry.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($IntentFilter_AuthorityEntryType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($IntentFilter_AuthorityEntryType) &&
        other is $IntentFilter_AuthorityEntryType;
  }
}

/// from: android.content.IntentFilter$MalformedMimeTypeException
class IntentFilter_MalformedMimeTypeException extends jni.JObject {
  @override
  late final jni.JObjType<IntentFilter_MalformedMimeTypeException> $type = type;

  IntentFilter_MalformedMimeTypeException.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $IntentFilter_MalformedMimeTypeExceptionType();
  static final _new0 = jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
          "IntentFilter_MalformedMimeTypeException__new0")
      .asFunction<jni.JniResult Function()>();

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory IntentFilter_MalformedMimeTypeException() {
    return IntentFilter_MalformedMimeTypeException.fromRef(_new0().object);
  }

  static final _new1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter_MalformedMimeTypeException__new1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  factory IntentFilter_MalformedMimeTypeException.new1(
    jni.JString string,
  ) {
    return IntentFilter_MalformedMimeTypeException.fromRef(
        _new1(string.reference).object);
  }
}

final class $IntentFilter_MalformedMimeTypeExceptionType
    extends jni.JObjType<IntentFilter_MalformedMimeTypeException> {
  const $IntentFilter_MalformedMimeTypeExceptionType();

  @override
  String get signature =>
      r"Landroid/content/IntentFilter$MalformedMimeTypeException;";

  @override
  IntentFilter_MalformedMimeTypeException fromRef(jni.JObjectPtr ref) =>
      IntentFilter_MalformedMimeTypeException.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($IntentFilter_MalformedMimeTypeExceptionType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType ==
            ($IntentFilter_MalformedMimeTypeExceptionType) &&
        other is $IntentFilter_MalformedMimeTypeExceptionType;
  }
}

/// from: android.content.IntentFilter
class IntentFilter extends jni.JObject {
  @override
  late final jni.JObjType<IntentFilter> $type = type;

  IntentFilter.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $IntentFilterType();
  static final _get_CREATOR =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
              "get_IntentFilter__CREATOR")
          .asFunction<jni.JniResult Function()>();

  /// from: static public final android.os.Parcelable$Creator CREATOR
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JObject get CREATOR =>
      const jni.JObjectType().fromRef(_get_CREATOR().object);

  /// from: static public final int MATCH_ADJUSTMENT_MASK
  static const MATCH_ADJUSTMENT_MASK = 65535;

  /// from: static public final int MATCH_ADJUSTMENT_NORMAL
  static const MATCH_ADJUSTMENT_NORMAL = 32768;

  /// from: static public final int MATCH_CATEGORY_EMPTY
  static const MATCH_CATEGORY_EMPTY = 1048576;

  /// from: static public final int MATCH_CATEGORY_HOST
  static const MATCH_CATEGORY_HOST = 3145728;

  /// from: static public final int MATCH_CATEGORY_MASK
  static const MATCH_CATEGORY_MASK = 268369920;

  /// from: static public final int MATCH_CATEGORY_PATH
  static const MATCH_CATEGORY_PATH = 5242880;

  /// from: static public final int MATCH_CATEGORY_PORT
  static const MATCH_CATEGORY_PORT = 4194304;

  /// from: static public final int MATCH_CATEGORY_SCHEME
  static const MATCH_CATEGORY_SCHEME = 2097152;

  /// from: static public final int MATCH_CATEGORY_SCHEME_SPECIFIC_PART
  static const MATCH_CATEGORY_SCHEME_SPECIFIC_PART = 5767168;

  /// from: static public final int MATCH_CATEGORY_TYPE
  static const MATCH_CATEGORY_TYPE = 6291456;

  /// from: static public final int NO_MATCH_ACTION
  static const NO_MATCH_ACTION = -3;

  /// from: static public final int NO_MATCH_CATEGORY
  static const NO_MATCH_CATEGORY = -4;

  /// from: static public final int NO_MATCH_DATA
  static const NO_MATCH_DATA = -2;

  /// from: static public final int NO_MATCH_TYPE
  static const NO_MATCH_TYPE = -1;

  /// from: static public final int SYSTEM_HIGH_PRIORITY
  static const SYSTEM_HIGH_PRIORITY = 1000;

  /// from: static public final int SYSTEM_LOW_PRIORITY
  static const SYSTEM_LOW_PRIORITY = -1000;

  static final _new0 = jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
          "IntentFilter__new0")
      .asFunction<jni.JniResult Function()>();

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory IntentFilter() {
    return IntentFilter.fromRef(_new0().object);
  }

  static final _new1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__new1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  factory IntentFilter.new1(
    jni.JString string,
  ) {
    return IntentFilter.fromRef(_new1(string.reference).object);
  }

  static final _new2 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__new2")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String string, java.lang.String string1)
  /// The returned object must be released after use, by calling the [release] method.
  factory IntentFilter.new2(
    jni.JString string,
    jni.JString string1,
  ) {
    return IntentFilter.fromRef(
        _new2(string.reference, string1.reference).object);
  }

  static final _new3 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__new3")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.IntentFilter intentFilter)
  /// The returned object must be released after use, by calling the [release] method.
  factory IntentFilter.new3(
    IntentFilter intentFilter,
  ) {
    return IntentFilter.fromRef(_new3(intentFilter.reference).object);
  }

  static final _create = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__create")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.IntentFilter create(java.lang.String string, java.lang.String string1)
  /// The returned object must be released after use, by calling the [release] method.
  static IntentFilter create(
    jni.JString string,
    jni.JString string1,
  ) {
    return const $IntentFilterType()
        .fromRef(_create(string.reference, string1.reference).object);
  }

  static final _setPriority = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__setPriority")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setPriority(int i)
  void setPriority(
    int i,
  ) {
    return _setPriority(reference, i).check();
  }

  static final _getPriority = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__getPriority")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getPriority()
  int getPriority() {
    return _getPriority(reference).integer;
  }

  static final _addAction = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__addAction")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void addAction(java.lang.String string)
  void addAction(
    jni.JString string,
  ) {
    return _addAction(reference, string.reference).check();
  }

  static final _countActions = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__countActions")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countActions()
  int countActions() {
    return _countActions(reference).integer;
  }

  static final _getAction = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32)>>("IntentFilter__getAction")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getAction(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getAction(
    int i,
  ) {
    return const jni.JStringType().fromRef(_getAction(reference, i).object);
  }

  static final _hasAction = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__hasAction")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasAction(java.lang.String string)
  bool hasAction(
    jni.JString string,
  ) {
    return _hasAction(reference, string.reference).boolean;
  }

  static final _matchAction = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__matchAction")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean matchAction(java.lang.String string)
  bool matchAction(
    jni.JString string,
  ) {
    return _matchAction(reference, string.reference).boolean;
  }

  static final _actionsIterator = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__actionsIterator")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator actionsIterator()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JIterator<jni.JString> actionsIterator() {
    return const jni.JIteratorType(jni.JStringType())
        .fromRef(_actionsIterator(reference).object);
  }

  static final _addDataType = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__addDataType")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void addDataType(java.lang.String string)
  void addDataType(
    jni.JString string,
  ) {
    return _addDataType(reference, string.reference).check();
  }

  static final _hasDataType = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__hasDataType")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataType(java.lang.String string)
  bool hasDataType(
    jni.JString string,
  ) {
    return _hasDataType(reference, string.reference).boolean;
  }

  static final _countDataTypes = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__countDataTypes")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataTypes()
  int countDataTypes() {
    return _countDataTypes(reference).integer;
  }

  static final _getDataType = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__getDataType")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getDataType(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getDataType(
    int i,
  ) {
    return const jni.JStringType().fromRef(_getDataType(reference, i).object);
  }

  static final _typesIterator = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__typesIterator")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator typesIterator()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JIterator<jni.JString> typesIterator() {
    return const jni.JIteratorType(jni.JStringType())
        .fromRef(_typesIterator(reference).object);
  }

  static final _addDataScheme = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__addDataScheme")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void addDataScheme(java.lang.String string)
  void addDataScheme(
    jni.JString string,
  ) {
    return _addDataScheme(reference, string.reference).check();
  }

  static final _countDataSchemes = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__countDataSchemes")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataSchemes()
  int countDataSchemes() {
    return _countDataSchemes(reference).integer;
  }

  static final _getDataScheme = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__getDataScheme")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getDataScheme(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getDataScheme(
    int i,
  ) {
    return const jni.JStringType().fromRef(_getDataScheme(reference, i).object);
  }

  static final _hasDataScheme = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__hasDataScheme")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataScheme(java.lang.String string)
  bool hasDataScheme(
    jni.JString string,
  ) {
    return _hasDataScheme(reference, string.reference).boolean;
  }

  static final _schemesIterator = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__schemesIterator")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator schemesIterator()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JIterator<jni.JString> schemesIterator() {
    return const jni.JIteratorType(jni.JStringType())
        .fromRef(_schemesIterator(reference).object);
  }

  static final _addDataSchemeSpecificPart = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__addDataSchemeSpecificPart")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void addDataSchemeSpecificPart(java.lang.String string, int i)
  void addDataSchemeSpecificPart(
    jni.JString string,
    int i,
  ) {
    return _addDataSchemeSpecificPart(reference, string.reference, i).check();
  }

  static final _countDataSchemeSpecificParts = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__countDataSchemeSpecificParts")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataSchemeSpecificParts()
  int countDataSchemeSpecificParts() {
    return _countDataSchemeSpecificParts(reference).integer;
  }

  static final _getDataSchemeSpecificPart = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__getDataSchemeSpecificPart")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.os.PatternMatcher getDataSchemeSpecificPart(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDataSchemeSpecificPart(
    int i,
  ) {
    return const jni.JObjectType()
        .fromRef(_getDataSchemeSpecificPart(reference, i).object);
  }

  static final _hasDataSchemeSpecificPart = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__hasDataSchemeSpecificPart")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataSchemeSpecificPart(java.lang.String string)
  bool hasDataSchemeSpecificPart(
    jni.JString string,
  ) {
    return _hasDataSchemeSpecificPart(reference, string.reference).boolean;
  }

  static final _schemeSpecificPartsIterator = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__schemeSpecificPartsIterator")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator schemeSpecificPartsIterator()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JIterator<jni.JObject> schemeSpecificPartsIterator() {
    return const jni.JIteratorType(jni.JObjectType())
        .fromRef(_schemeSpecificPartsIterator(reference).object);
  }

  static final _addDataAuthority = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__addDataAuthority")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final void addDataAuthority(java.lang.String string, java.lang.String string1)
  void addDataAuthority(
    jni.JString string,
    jni.JString string1,
  ) {
    return _addDataAuthority(reference, string.reference, string1.reference)
        .check();
  }

  static final _countDataAuthorities = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__countDataAuthorities")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataAuthorities()
  int countDataAuthorities() {
    return _countDataAuthorities(reference).integer;
  }

  static final _getDataAuthority = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__getDataAuthority")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.content.IntentFilter$AuthorityEntry getDataAuthority(int i)
  /// The returned object must be released after use, by calling the [release] method.
  IntentFilter_AuthorityEntry getDataAuthority(
    int i,
  ) {
    return const $IntentFilter_AuthorityEntryType()
        .fromRef(_getDataAuthority(reference, i).object);
  }

  static final _hasDataAuthority = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__hasDataAuthority")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataAuthority(android.net.Uri uri)
  bool hasDataAuthority(
    jni.JObject uri,
  ) {
    return _hasDataAuthority(reference, uri.reference).boolean;
  }

  static final _authoritiesIterator = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__authoritiesIterator")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator authoritiesIterator()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JIterator<IntentFilter_AuthorityEntry> authoritiesIterator() {
    return const jni.JIteratorType($IntentFilter_AuthorityEntryType())
        .fromRef(_authoritiesIterator(reference).object);
  }

  static final _addDataPath = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__addDataPath")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void addDataPath(java.lang.String string, int i)
  void addDataPath(
    jni.JString string,
    int i,
  ) {
    return _addDataPath(reference, string.reference, i).check();
  }

  static final _countDataPaths = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__countDataPaths")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataPaths()
  int countDataPaths() {
    return _countDataPaths(reference).integer;
  }

  static final _getDataPath = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__getDataPath")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.os.PatternMatcher getDataPath(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getDataPath(
    int i,
  ) {
    return const jni.JObjectType().fromRef(_getDataPath(reference, i).object);
  }

  static final _hasDataPath = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__hasDataPath")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataPath(java.lang.String string)
  bool hasDataPath(
    jni.JString string,
  ) {
    return _hasDataPath(reference, string.reference).boolean;
  }

  static final _pathsIterator = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__pathsIterator")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator pathsIterator()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JIterator<jni.JObject> pathsIterator() {
    return const jni.JIteratorType(jni.JObjectType())
        .fromRef(_pathsIterator(reference).object);
  }

  static final _matchDataAuthority = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__matchDataAuthority")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final int matchDataAuthority(android.net.Uri uri)
  int matchDataAuthority(
    jni.JObject uri,
  ) {
    return _matchDataAuthority(reference, uri.reference).integer;
  }

  static final _matchData = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__matchData")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final int matchData(java.lang.String string, java.lang.String string1, android.net.Uri uri)
  int matchData(
    jni.JString string,
    jni.JString string1,
    jni.JObject uri,
  ) {
    return _matchData(
            reference, string.reference, string1.reference, uri.reference)
        .integer;
  }

  static final _addCategory = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__addCategory")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void addCategory(java.lang.String string)
  void addCategory(
    jni.JString string,
  ) {
    return _addCategory(reference, string.reference).check();
  }

  static final _countCategories = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__countCategories")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countCategories()
  int countCategories() {
    return _countCategories(reference).integer;
  }

  static final _getCategory = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__getCategory")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getCategory(int i)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString getCategory(
    int i,
  ) {
    return const jni.JStringType().fromRef(_getCategory(reference, i).object);
  }

  static final _hasCategory = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__hasCategory")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasCategory(java.lang.String string)
  bool hasCategory(
    jni.JString string,
  ) {
    return _hasCategory(reference, string.reference).boolean;
  }

  static final _categoriesIterator = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__categoriesIterator")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator categoriesIterator()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JIterator<jni.JString> categoriesIterator() {
    return const jni.JIteratorType(jni.JStringType())
        .fromRef(_categoriesIterator(reference).object);
  }

  static final _matchCategories = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__matchCategories")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String matchCategories(java.util.Set set)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString matchCategories(
    jni.JSet<jni.JString> set0,
  ) {
    return const jni.JStringType()
        .fromRef(_matchCategories(reference, set0.reference).object);
  }

  static final _asPredicate = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__asPredicate")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.function.Predicate asPredicate()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject asPredicate() {
    return const jni.JObjectType().fromRef(_asPredicate(reference).object);
  }

  static final _asPredicateWithTypeResolution = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__asPredicateWithTypeResolution")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.function.Predicate asPredicateWithTypeResolution(android.content.ContentResolver contentResolver)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject asPredicateWithTypeResolution(
    jni.JObject contentResolver,
  ) {
    return const jni.JObjectType().fromRef(
        _asPredicateWithTypeResolution(reference, contentResolver.reference)
            .object);
  }

  static final _match = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__match")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final int match(android.content.ContentResolver contentResolver, android.content.Intent intent, boolean z, java.lang.String string)
  int match(
    jni.JObject contentResolver,
    Intent intent,
    bool z,
    jni.JString string,
  ) {
    return _match(reference, contentResolver.reference, intent.reference,
            z ? 1 : 0, string.reference)
        .integer;
  }

  static final _match1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__match1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final int match(java.lang.String string, java.lang.String string1, java.lang.String string2, android.net.Uri uri, java.util.Set set, java.lang.String string3)
  int match1(
    jni.JString string,
    jni.JString string1,
    jni.JString string2,
    jni.JObject uri,
    jni.JSet<jni.JString> set0,
    jni.JString string3,
  ) {
    return _match1(reference, string.reference, string1.reference,
            string2.reference, uri.reference, set0.reference, string3.reference)
        .integer;
  }

  static final _writeToXml = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__writeToXml")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void writeToXml(org.xmlpull.v1.XmlSerializer xmlSerializer)
  void writeToXml(
    jni.JObject xmlSerializer,
  ) {
    return _writeToXml(reference, xmlSerializer.reference).check();
  }

  static final _readFromXml = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__readFromXml")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromXml(org.xmlpull.v1.XmlPullParser xmlPullParser)
  void readFromXml(
    jni.JObject xmlPullParser,
  ) {
    return _readFromXml(reference, xmlPullParser.reference).check();
  }

  static final _dump = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("IntentFilter__dump")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer printer, java.lang.String string)
  void dump(
    jni.JObject printer,
    jni.JString string,
  ) {
    return _dump(reference, printer.reference, string.reference).check();
  }

  static final _describeContents = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "IntentFilter__describeContents")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int describeContents()
  int describeContents() {
    return _describeContents(reference).integer;
  }

  static final _writeToParcel = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("IntentFilter__writeToParcel")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void writeToParcel(android.os.Parcel parcel, int i)
  void writeToParcel(
    jni.JObject parcel,
    int i,
  ) {
    return _writeToParcel(reference, parcel.reference, i).check();
  }
}

final class $IntentFilterType extends jni.JObjType<IntentFilter> {
  const $IntentFilterType();

  @override
  String get signature => r"Landroid/content/IntentFilter;";

  @override
  IntentFilter fromRef(jni.JObjectPtr ref) => IntentFilter.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($IntentFilterType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($IntentFilterType) &&
        other is $IntentFilterType;
  }
}

/// from: android.os.ParcelUuid
class ParcelUuid extends jni.JObject {
  @override
  late final jni.JObjType<ParcelUuid> $type = type;

  ParcelUuid.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $ParcelUuidType();
  static final _get_CREATOR =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
              "get_ParcelUuid__CREATOR")
          .asFunction<jni.JniResult Function()>();

  /// from: static public final android.os.Parcelable$Creator CREATOR
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JObject get CREATOR =>
      const jni.JObjectType().fromRef(_get_CREATOR().object);

  static final _new0 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ParcelUuid__new0")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.util.UUID uUID)
  /// The returned object must be released after use, by calling the [release] method.
  factory ParcelUuid(
    jni.JObject uUID,
  ) {
    return ParcelUuid.fromRef(_new0(uUID.reference).object);
  }

  static final _fromString = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ParcelUuid__fromString")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.os.ParcelUuid fromString(java.lang.String string)
  /// The returned object must be released after use, by calling the [release] method.
  static ParcelUuid fromString(
    jni.JString string,
  ) {
    return const $ParcelUuidType()
        .fromRef(_fromString(string.reference).object);
  }

  static final _getUuid = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ParcelUuid__getUuid")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.UUID getUuid()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JObject getUuid() {
    return const jni.JObjectType().fromRef(_getUuid(reference).object);
  }

  static final _toString1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ParcelUuid__toString1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  /// The returned object must be released after use, by calling the [release] method.
  jni.JString toString1() {
    return const jni.JStringType().fromRef(_toString1(reference).object);
  }

  static final _hashCode1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ParcelUuid__hashCode1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode1() {
    return _hashCode1(reference).integer;
  }

  static final _equals1 = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("ParcelUuid__equals1")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object object)
  bool equals1(
    jni.JObject object,
  ) {
    return _equals1(reference, object.reference).boolean;
  }

  static final _describeContents = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "ParcelUuid__describeContents")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() {
    return _describeContents(reference).integer;
  }

  static final _writeToParcel = jniLookup<
          ffi.NativeFunction<
              jni.JniResult Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("ParcelUuid__writeToParcel")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int i)
  void writeToParcel(
    jni.JObject parcel,
    int i,
  ) {
    return _writeToParcel(reference, parcel.reference, i).check();
  }
}

final class $ParcelUuidType extends jni.JObjType<ParcelUuid> {
  const $ParcelUuidType();

  @override
  String get signature => r"Landroid/os/ParcelUuid;";

  @override
  ParcelUuid fromRef(jni.JObjectPtr ref) => ParcelUuid.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($ParcelUuidType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($ParcelUuidType) && other is $ParcelUuidType;
  }
}

/// from: com.lastgimbus.the.lastbluetooth.TheLastUtils$Companion
class TheLastUtils_Companion extends jni.JObject {
  @override
  late final jni.JObjType<TheLastUtils_Companion> $type = type;

  TheLastUtils_Companion.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $TheLastUtils_CompanionType();
  static final _isBluetoothDeviceConnected = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "TheLastUtils_Companion__isBluetoothDeviceConnected")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isBluetoothDeviceConnected(android.bluetooth.BluetoothDevice bluetoothDevice)
  bool isBluetoothDeviceConnected(
    BluetoothDevice bluetoothDevice,
  ) {
    return _isBluetoothDeviceConnected(reference, bluetoothDevice.reference)
        .boolean;
  }

  static final _bluetoothDeviceBatteryLevel = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "TheLastUtils_Companion__bluetoothDeviceBatteryLevel")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final int bluetoothDeviceBatteryLevel(android.bluetooth.BluetoothDevice bluetoothDevice)
  int bluetoothDeviceBatteryLevel(
    BluetoothDevice bluetoothDevice,
  ) {
    return _bluetoothDeviceBatteryLevel(reference, bluetoothDevice.reference)
        .integer;
  }

  static final _getIntentExtras = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "TheLastUtils_Companion__getIntentExtras")
      .asFunction<
          jni.JniResult Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Map getIntentExtras(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  jni.JMap<jni.JString, jni.JObject> getIntentExtras(
    Intent intent,
  ) {
    return const jni.JMapType(jni.JStringType(), jni.JObjectType())
        .fromRef(_getIntentExtras(reference, intent.reference).object);
  }

  static final _new0 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "TheLastUtils_Companion__new0")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(kotlin.jvm.internal.DefaultConstructorMarker defaultConstructorMarker)
  /// The returned object must be released after use, by calling the [release] method.
  factory TheLastUtils_Companion(
    jni.JObject defaultConstructorMarker,
  ) {
    return TheLastUtils_Companion.fromRef(
        _new0(defaultConstructorMarker.reference).object);
  }
}

final class $TheLastUtils_CompanionType
    extends jni.JObjType<TheLastUtils_Companion> {
  const $TheLastUtils_CompanionType();

  @override
  String get signature =>
      r"Lcom/lastgimbus/the/lastbluetooth/TheLastUtils$Companion;";

  @override
  TheLastUtils_Companion fromRef(jni.JObjectPtr ref) =>
      TheLastUtils_Companion.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($TheLastUtils_CompanionType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($TheLastUtils_CompanionType) &&
        other is $TheLastUtils_CompanionType;
  }
}

/// from: com.lastgimbus.the.lastbluetooth.TheLastUtils
class TheLastUtils extends jni.JObject {
  @override
  late final jni.JObjType<TheLastUtils> $type = type;

  TheLastUtils.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $TheLastUtilsType();
  static final _get_Companion =
      jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
              "get_TheLastUtils__Companion")
          .asFunction<jni.JniResult Function()>();

  /// from: static public final com.lastgimbus.the.lastbluetooth.TheLastUtils$Companion Companion
  /// The returned object must be released after use, by calling the [release] method.
  static TheLastUtils_Companion get Companion =>
      const $TheLastUtils_CompanionType().fromRef(_get_Companion().object);

  static final _new0 = jniLookup<ffi.NativeFunction<jni.JniResult Function()>>(
          "TheLastUtils__new0")
      .asFunction<jni.JniResult Function()>();

  /// from: public void <init>()
  /// The returned object must be released after use, by calling the [release] method.
  factory TheLastUtils() {
    return TheLastUtils.fromRef(_new0().object);
  }

  static final _isBluetoothDeviceConnected = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "TheLastUtils__isBluetoothDeviceConnected")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public final boolean isBluetoothDeviceConnected(android.bluetooth.BluetoothDevice bluetoothDevice)
  static bool isBluetoothDeviceConnected(
    BluetoothDevice bluetoothDevice,
  ) {
    return _isBluetoothDeviceConnected(bluetoothDevice.reference).boolean;
  }

  static final _bluetoothDeviceBatteryLevel = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "TheLastUtils__bluetoothDeviceBatteryLevel")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public final int bluetoothDeviceBatteryLevel(android.bluetooth.BluetoothDevice bluetoothDevice)
  static int bluetoothDeviceBatteryLevel(
    BluetoothDevice bluetoothDevice,
  ) {
    return _bluetoothDeviceBatteryLevel(bluetoothDevice.reference).integer;
  }

  static final _getIntentExtras = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "TheLastUtils__getIntentExtras")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public final java.util.Map getIntentExtras(android.content.Intent intent)
  /// The returned object must be released after use, by calling the [release] method.
  static jni.JMap<jni.JString, jni.JObject> getIntentExtras(
    Intent intent,
  ) {
    return const jni.JMapType(jni.JStringType(), jni.JObjectType())
        .fromRef(_getIntentExtras(intent.reference).object);
  }
}

final class $TheLastUtilsType extends jni.JObjType<TheLastUtils> {
  const $TheLastUtilsType();

  @override
  String get signature => r"Lcom/lastgimbus/the/lastbluetooth/TheLastUtils;";

  @override
  TheLastUtils fromRef(jni.JObjectPtr ref) => TheLastUtils.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($TheLastUtilsType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($TheLastUtilsType) &&
        other is $TheLastUtilsType;
  }
}

/// from: com.lastgimbus.the.lastbluetooth.BroadcastReceiverInterface
class BroadcastReceiverInterface extends jni.JObject {
  @override
  late final jni.JObjType<BroadcastReceiverInterface> $type = type;

  BroadcastReceiverInterface.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $BroadcastReceiverInterfaceType();
  static final _onReceive = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "BroadcastReceiverInterface__onReceive")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onReceive(android.content.Context context, android.content.Intent intent)
  void onReceive(
    Context context,
    Intent intent,
  ) {
    return _onReceive(reference, context.reference, intent.reference).check();
  }

  /// Maps a specific port to the implemented interface.
  static final Map<int, $BroadcastReceiverInterfaceImpl> _$impls = {};
  ReceivePort? _$p;

  static jni.JObjectPtr _$invoke(
    int port,
    jni.JObjectPtr descriptor,
    jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      $MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final ffi.Pointer<
          ffi.NativeFunction<
              jni.JObjectPtr Function(
                  ffi.Uint64, jni.JObjectPtr, jni.JObjectPtr)>>
      _$invokePointer = ffi.Pointer.fromFunction(_$invoke);

  static ffi.Pointer<ffi.Void> _$invokeMethod(
    int $p,
    $MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
      if ($d ==
          r"onReceive(Landroid/content/Context;Landroid/content/Intent;)V") {
        _$impls[$p]!.onReceive(
          $a[0].castTo(const $ContextType(), releaseOriginal: true),
          $a[1].castTo(const $IntentType(), releaseOriginal: true),
        );
        return jni.nullptr;
      }
    } catch (e) {
      return ProtectedJniExtensions.newDartException(e.toString());
    }
    return jni.nullptr;
  }

  factory BroadcastReceiverInterface.implement(
    $BroadcastReceiverInterfaceImpl $impl,
  ) {
    final $p = ReceivePort();
    final $x = BroadcastReceiverInterface.fromRef(
      ProtectedJniExtensions.newPortProxy(
        r"com.lastgimbus.the.lastbluetooth.BroadcastReceiverInterface",
        $p,
        _$invokePointer,
      ),
    ).._$p = $p;
    final $a = $p.sendPort.nativePort;
    _$impls[$a] = $impl;
    $p.listen(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = $MethodInvocation.fromMessage($m as List<dynamic>);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      ProtectedJniExtensions.returnResult($i.result, $r);
    });
    return $x;
  }
}

abstract class $BroadcastReceiverInterfaceImpl {
  factory $BroadcastReceiverInterfaceImpl({
    required void Function(Context context, Intent intent) onReceive,
  }) = _$BroadcastReceiverInterfaceImpl;

  void onReceive(Context context, Intent intent);
}

class _$BroadcastReceiverInterfaceImpl
    implements $BroadcastReceiverInterfaceImpl {
  _$BroadcastReceiverInterfaceImpl({
    required void Function(Context context, Intent intent) onReceive,
  }) : _onReceive = onReceive;

  final void Function(Context context, Intent intent) _onReceive;

  void onReceive(Context context, Intent intent) {
    return _onReceive(context, intent);
  }
}

final class $BroadcastReceiverInterfaceType
    extends jni.JObjType<BroadcastReceiverInterface> {
  const $BroadcastReceiverInterfaceType();

  @override
  String get signature =>
      r"Lcom/lastgimbus/the/lastbluetooth/BroadcastReceiverInterface;";

  @override
  BroadcastReceiverInterface fromRef(jni.JObjectPtr ref) =>
      BroadcastReceiverInterface.fromRef(ref);

  @override
  jni.JObjType get superType => const jni.JObjectType();

  @override
  final superCount = 1;

  @override
  int get hashCode => ($BroadcastReceiverInterfaceType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($BroadcastReceiverInterfaceType) &&
        other is $BroadcastReceiverInterfaceType;
  }
}

/// from: com.lastgimbus.the.lastbluetooth.TheLastBroadcastReceiver
class TheLastBroadcastReceiver extends BroadcastReceiver {
  @override
  late final jni.JObjType<TheLastBroadcastReceiver> $type = type;

  TheLastBroadcastReceiver.fromRef(
    jni.JObjectPtr ref,
  ) : super.fromRef(ref);

  /// The type which includes information such as the signature of this class.
  static const type = $TheLastBroadcastReceiverType();
  static final _new1 = jniLookup<
              ffi
              .NativeFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>>(
          "TheLastBroadcastReceiver__new1")
      .asFunction<jni.JniResult Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(com.lastgimbus.the.lastbluetooth.BroadcastReceiverInterface broadcastReceiverInterface)
  /// The returned object must be released after use, by calling the [release] method.
  factory TheLastBroadcastReceiver.new1(
    BroadcastReceiverInterface broadcastReceiverInterface,
  ) {
    return TheLastBroadcastReceiver.fromRef(
        _new1(broadcastReceiverInterface.reference).object);
  }

  static final _onReceive = jniLookup<
              ffi.NativeFunction<
                  jni.JniResult Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "TheLastBroadcastReceiver__onReceive")
      .asFunction<
          jni.JniResult Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onReceive(android.content.Context context, android.content.Intent intent)
  void onReceive(
    Context context,
    Intent intent,
  ) {
    return _onReceive(reference, context.reference, intent.reference).check();
  }
}

final class $TheLastBroadcastReceiverType
    extends jni.JObjType<TheLastBroadcastReceiver> {
  const $TheLastBroadcastReceiverType();

  @override
  String get signature =>
      r"Lcom/lastgimbus/the/lastbluetooth/TheLastBroadcastReceiver;";

  @override
  TheLastBroadcastReceiver fromRef(jni.JObjectPtr ref) =>
      TheLastBroadcastReceiver.fromRef(ref);

  @override
  jni.JObjType get superType => const $BroadcastReceiverType();

  @override
  final superCount = 2;

  @override
  int get hashCode => ($TheLastBroadcastReceiverType).hashCode;

  @override
  bool operator ==(Object other) {
    return other.runtimeType == ($TheLastBroadcastReceiverType) &&
        other is $TheLastBroadcastReceiverType;
  }
}
